

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Apr 21 20:40:36 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1619 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011C                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  018E                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  028C                     	;# 
   187  028D                     	;# 
   188  028E                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0294                     	;# 
   194  0298                     	;# 
   195  0298                     	;# 
   196  0299                     	;# 
   197  029A                     	;# 
   198  029B                     	;# 
   199  029E                     	;# 
   200  030C                     	;# 
   201  030D                     	;# 
   202  030E                     	;# 
   203  038C                     	;# 
   204  038D                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  0397                     	;# 
   213  0398                     	;# 
   214  0399                     	;# 
   215  040E                     	;# 
   216  0413                     	;# 
   217  0413                     	;# 
   218  0414                     	;# 
   219  0414                     	;# 
   220  0415                     	;# 
   221  0416                     	;# 
   222  0417                     	;# 
   223  0418                     	;# 
   224  041A                     	;# 
   225  041A                     	;# 
   226  041B                     	;# 
   227  041B                     	;# 
   228  041C                     	;# 
   229  041D                     	;# 
   230  041E                     	;# 
   231  041F                     	;# 
   232  0493                     	;# 
   233  0494                     	;# 
   234  0495                     	;# 
   235  0496                     	;# 
   236  049A                     	;# 
   237  049B                     	;# 
   238  049C                     	;# 
   239  049D                     	;# 
   240  058C                     	;# 
   241  058C                     	;# 
   242  058D                     	;# 
   243  058E                     	;# 
   244  058E                     	;# 
   245  058F                     	;# 
   246  0590                     	;# 
   247  0590                     	;# 
   248  0591                     	;# 
   249  0592                     	;# 
   250  0592                     	;# 
   251  0593                     	;# 
   252  0594                     	;# 
   253  0594                     	;# 
   254  0595                     	;# 
   255  0596                     	;# 
   256  0596                     	;# 
   257  0597                     	;# 
   258  0598                     	;# 
   259  0599                     	;# 
   260  059A                     	;# 
   261  059B                     	;# 
   262  059B                     	;# 
   263  059C                     	;# 
   264  059D                     	;# 
   265  060C                     	;# 
   266  060C                     	;# 
   267  060D                     	;# 
   268  060E                     	;# 
   269  060F                     	;# 
   270  060F                     	;# 
   271  0610                     	;# 
   272  0611                     	;# 
   273  0612                     	;# 
   274  0613                     	;# 
   275  0614                     	;# 
   276  0617                     	;# 
   277  0617                     	;# 
   278  0618                     	;# 
   279  0619                     	;# 
   280  061A                     	;# 
   281  061A                     	;# 
   282  061B                     	;# 
   283  061C                     	;# 
   284  0691                     	;# 
   285  0692                     	;# 
   286  0693                     	;# 
   287  0694                     	;# 
   288  0695                     	;# 
   289  0696                     	;# 
   290  0697                     	;# 
   291  0699                     	;# 
   292  069A                     	;# 
   293  0711                     	;# 
   294  0712                     	;# 
   295  0713                     	;# 
   296  0714                     	;# 
   297  0715                     	;# 
   298  0718                     	;# 
   299  0718                     	;# 
   300  0719                     	;# 
   301  071A                     	;# 
   302  071A                     	;# 
   303  071B                     	;# 
   304  071C                     	;# 
   305  071D                     	;# 
   306  0791                     	;# 
   307  0791                     	;# 
   308  0792                     	;# 
   309  0793                     	;# 
   310  0793                     	;# 
   311  0794                     	;# 
   312  0795                     	;# 
   313  0795                     	;# 
   314  0796                     	;# 
   315  0797                     	;# 
   316  0797                     	;# 
   317  0798                     	;# 
   318  0799                     	;# 
   319  079A                     	;# 
   320  080C                     	;# 
   321  080C                     	;# 
   322  080D                     	;# 
   323  080E                     	;# 
   324  080E                     	;# 
   325  080F                     	;# 
   326  0810                     	;# 
   327  0810                     	;# 
   328  0811                     	;# 
   329  0812                     	;# 
   330  0812                     	;# 
   331  0813                     	;# 
   332  0814                     	;# 
   333  0815                     	;# 
   334  0816                     	;# 
   335  0817                     	;# 
   336  0818                     	;# 
   337  0819                     	;# 
   338  081A                     	;# 
   339  081A                     	;# 
   340  081B                     	;# 
   341  081C                     	;# 
   342  081C                     	;# 
   343  081D                     	;# 
   344  088C                     	;# 
   345  088D                     	;# 
   346  088E                     	;# 
   347  088F                     	;# 
   348  088F                     	;# 
   349  0890                     	;# 
   350  0891                     	;# 
   351  0892                     	;# 
   352  0893                     	;# 
   353  0893                     	;# 
   354  0894                     	;# 
   355  0895                     	;# 
   356  0896                     	;# 
   357  0897                     	;# 
   358  0897                     	;# 
   359  0898                     	;# 
   360  0899                     	;# 
   361  0D8C                     	;# 
   362  0D8C                     	;# 
   363  0D8D                     	;# 
   364  0D8E                     	;# 
   365  0D8F                     	;# 
   366  0D8F                     	;# 
   367  0D90                     	;# 
   368  0D91                     	;# 
   369  0D92                     	;# 
   370  0D92                     	;# 
   371  0D93                     	;# 
   372  0D94                     	;# 
   373  0D95                     	;# 
   374  0D95                     	;# 
   375  0D96                     	;# 
   376  0D97                     	;# 
   377  0D98                     	;# 
   378  0D99                     	;# 
   379  0D9A                     	;# 
   380  0D9B                     	;# 
   381  0D9C                     	;# 
   382  0D9D                     	;# 
   383  0D9E                     	;# 
   384  0D9E                     	;# 
   385  0D9F                     	;# 
   386  0DA0                     	;# 
   387  0DA1                     	;# 
   388  0DA1                     	;# 
   389  0DA2                     	;# 
   390  0DA3                     	;# 
   391  0DA4                     	;# 
   392  0DA4                     	;# 
   393  0DA5                     	;# 
   394  0DA6                     	;# 
   395  0DA7                     	;# 
   396  0DA7                     	;# 
   397  0DA8                     	;# 
   398  0DA9                     	;# 
   399  0DAA                     	;# 
   400  0DAB                     	;# 
   401  0DAC                     	;# 
   402  0DAD                     	;# 
   403  0DAE                     	;# 
   404  0DAF                     	;# 
   405  0E0F                     	;# 
   406  0E10                     	;# 
   407  0E11                     	;# 
   408  0E12                     	;# 
   409  0E13                     	;# 
   410  0E14                     	;# 
   411  0E15                     	;# 
   412  0E16                     	;# 
   413  0E17                     	;# 
   414  0E18                     	;# 
   415  0E19                     	;# 
   416  0E1A                     	;# 
   417  0E1B                     	;# 
   418  0E1C                     	;# 
   419  0E1D                     	;# 
   420  0E1E                     	;# 
   421  0E1F                     	;# 
   422  0E20                     	;# 
   423  0E21                     	;# 
   424  0E22                     	;# 
   425  0E23                     	;# 
   426  0E24                     	;# 
   427  0E25                     	;# 
   428  0E26                     	;# 
   429  0E27                     	;# 
   430  0E28                     	;# 
   431  0E29                     	;# 
   432  0E2A                     	;# 
   433  0E2B                     	;# 
   434  0E2C                     	;# 
   435  0E2D                     	;# 
   436  0E2E                     	;# 
   437  0E90                     	;# 
   438  0E91                     	;# 
   439  0E92                     	;# 
   440  0E94                     	;# 
   441  0E95                     	;# 
   442  0E9C                     	;# 
   443  0E9D                     	;# 
   444  0E9E                     	;# 
   445  0E9F                     	;# 
   446  0EA0                     	;# 
   447  0EA1                     	;# 
   448  0EA2                     	;# 
   449  0EA3                     	;# 
   450  0EA4                     	;# 
   451  0EA5                     	;# 
   452  0EA6                     	;# 
   453  0EA7                     	;# 
   454  0F0F                     	;# 
   455  0F10                     	;# 
   456  0F11                     	;# 
   457  0F12                     	;# 
   458  0F13                     	;# 
   459  0F14                     	;# 
   460  0F15                     	;# 
   461  0F16                     	;# 
   462  0F17                     	;# 
   463  0F18                     	;# 
   464  0F19                     	;# 
   465  0F1A                     	;# 
   466  0F1B                     	;# 
   467  0F1C                     	;# 
   468  0F1D                     	;# 
   469  0F1E                     	;# 
   470  0F1F                     	;# 
   471  0F20                     	;# 
   472  0F21                     	;# 
   473  0F22                     	;# 
   474  0F23                     	;# 
   475  0F24                     	;# 
   476  0F25                     	;# 
   477  0F26                     	;# 
   478  0F27                     	;# 
   479  0F28                     	;# 
   480  0F29                     	;# 
   481  0F2A                     	;# 
   482  0F2B                     	;# 
   483  0F2C                     	;# 
   484  0F2D                     	;# 
   485  0F2E                     	;# 
   486  0F2F                     	;# 
   487  0F30                     	;# 
   488  0F31                     	;# 
   489  0F32                     	;# 
   490  0F33                     	;# 
   491  0F34                     	;# 
   492  0F35                     	;# 
   493  0F36                     	;# 
   494  0F37                     	;# 
   495  0FE4                     	;# 
   496  0FE5                     	;# 
   497  0FE6                     	;# 
   498  0FE7                     	;# 
   499  0FE8                     	;# 
   500  0FE9                     	;# 
   501  0FEA                     	;# 
   502  0FEB                     	;# 
   503  0FED                     	;# 
   504  0FEE                     	;# 
   505  0FEF                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  0010                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0013                     	;# 
   525  0014                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001B                     	;# 
   536  001C                     	;# 
   537  001D                     	;# 
   538  001E                     	;# 
   539  001F                     	;# 
   540  008C                     	;# 
   541  008D                     	;# 
   542  008E                     	;# 
   543  0090                     	;# 
   544  0091                     	;# 
   545  0092                     	;# 
   546  0093                     	;# 
   547  0094                     	;# 
   548  0095                     	;# 
   549  0096                     	;# 
   550  0098                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  009F                     	;# 
   559  010C                     	;# 
   560  010D                     	;# 
   561  010E                     	;# 
   562  0111                     	;# 
   563  0112                     	;# 
   564  0113                     	;# 
   565  0114                     	;# 
   566  0115                     	;# 
   567  0116                     	;# 
   568  0117                     	;# 
   569  0118                     	;# 
   570  0119                     	;# 
   571  011C                     	;# 
   572  018C                     	;# 
   573  018D                     	;# 
   574  018E                     	;# 
   575  0191                     	;# 
   576  0191                     	;# 
   577  0192                     	;# 
   578  0193                     	;# 
   579  0193                     	;# 
   580  0194                     	;# 
   581  0195                     	;# 
   582  0196                     	;# 
   583  0197                     	;# 
   584  0199                     	;# 
   585  0199                     	;# 
   586  0199                     	;# 
   587  019A                     	;# 
   588  019A                     	;# 
   589  019A                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019C                     	;# 
   598  019D                     	;# 
   599  019D                     	;# 
   600  019D                     	;# 
   601  019E                     	;# 
   602  019E                     	;# 
   603  019E                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  019F                     	;# 
   608  019F                     	;# 
   609  020C                     	;# 
   610  020D                     	;# 
   611  020E                     	;# 
   612  0211                     	;# 
   613  0211                     	;# 
   614  0212                     	;# 
   615  0212                     	;# 
   616  0213                     	;# 
   617  0213                     	;# 
   618  0214                     	;# 
   619  0214                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0216                     	;# 
   626  0217                     	;# 
   627  0217                     	;# 
   628  028C                     	;# 
   629  028D                     	;# 
   630  028E                     	;# 
   631  0291                     	;# 
   632  0291                     	;# 
   633  0292                     	;# 
   634  0293                     	;# 
   635  0294                     	;# 
   636  0298                     	;# 
   637  0298                     	;# 
   638  0299                     	;# 
   639  029A                     	;# 
   640  029B                     	;# 
   641  029E                     	;# 
   642  030C                     	;# 
   643  030D                     	;# 
   644  030E                     	;# 
   645  038C                     	;# 
   646  038D                     	;# 
   647  038E                     	;# 
   648  0391                     	;# 
   649  0392                     	;# 
   650  0393                     	;# 
   651  0394                     	;# 
   652  0395                     	;# 
   653  0396                     	;# 
   654  0397                     	;# 
   655  0398                     	;# 
   656  0399                     	;# 
   657  040E                     	;# 
   658  0413                     	;# 
   659  0413                     	;# 
   660  0414                     	;# 
   661  0414                     	;# 
   662  0415                     	;# 
   663  0416                     	;# 
   664  0417                     	;# 
   665  0418                     	;# 
   666  041A                     	;# 
   667  041A                     	;# 
   668  041B                     	;# 
   669  041B                     	;# 
   670  041C                     	;# 
   671  041D                     	;# 
   672  041E                     	;# 
   673  041F                     	;# 
   674  0493                     	;# 
   675  0494                     	;# 
   676  0495                     	;# 
   677  0496                     	;# 
   678  049A                     	;# 
   679  049B                     	;# 
   680  049C                     	;# 
   681  049D                     	;# 
   682  058C                     	;# 
   683  058C                     	;# 
   684  058D                     	;# 
   685  058E                     	;# 
   686  058E                     	;# 
   687  058F                     	;# 
   688  0590                     	;# 
   689  0590                     	;# 
   690  0591                     	;# 
   691  0592                     	;# 
   692  0592                     	;# 
   693  0593                     	;# 
   694  0594                     	;# 
   695  0594                     	;# 
   696  0595                     	;# 
   697  0596                     	;# 
   698  0596                     	;# 
   699  0597                     	;# 
   700  0598                     	;# 
   701  0599                     	;# 
   702  059A                     	;# 
   703  059B                     	;# 
   704  059B                     	;# 
   705  059C                     	;# 
   706  059D                     	;# 
   707  060C                     	;# 
   708  060C                     	;# 
   709  060D                     	;# 
   710  060E                     	;# 
   711  060F                     	;# 
   712  060F                     	;# 
   713  0610                     	;# 
   714  0611                     	;# 
   715  0612                     	;# 
   716  0613                     	;# 
   717  0614                     	;# 
   718  0617                     	;# 
   719  0617                     	;# 
   720  0618                     	;# 
   721  0619                     	;# 
   722  061A                     	;# 
   723  061A                     	;# 
   724  061B                     	;# 
   725  061C                     	;# 
   726  0691                     	;# 
   727  0692                     	;# 
   728  0693                     	;# 
   729  0694                     	;# 
   730  0695                     	;# 
   731  0696                     	;# 
   732  0697                     	;# 
   733  0699                     	;# 
   734  069A                     	;# 
   735  0711                     	;# 
   736  0712                     	;# 
   737  0713                     	;# 
   738  0714                     	;# 
   739  0715                     	;# 
   740  0718                     	;# 
   741  0718                     	;# 
   742  0719                     	;# 
   743  071A                     	;# 
   744  071A                     	;# 
   745  071B                     	;# 
   746  071C                     	;# 
   747  071D                     	;# 
   748  0791                     	;# 
   749  0791                     	;# 
   750  0792                     	;# 
   751  0793                     	;# 
   752  0793                     	;# 
   753  0794                     	;# 
   754  0795                     	;# 
   755  0795                     	;# 
   756  0796                     	;# 
   757  0797                     	;# 
   758  0797                     	;# 
   759  0798                     	;# 
   760  0799                     	;# 
   761  079A                     	;# 
   762  080C                     	;# 
   763  080C                     	;# 
   764  080D                     	;# 
   765  080E                     	;# 
   766  080E                     	;# 
   767  080F                     	;# 
   768  0810                     	;# 
   769  0810                     	;# 
   770  0811                     	;# 
   771  0812                     	;# 
   772  0812                     	;# 
   773  0813                     	;# 
   774  0814                     	;# 
   775  0815                     	;# 
   776  0816                     	;# 
   777  0817                     	;# 
   778  0818                     	;# 
   779  0819                     	;# 
   780  081A                     	;# 
   781  081A                     	;# 
   782  081B                     	;# 
   783  081C                     	;# 
   784  081C                     	;# 
   785  081D                     	;# 
   786  088C                     	;# 
   787  088D                     	;# 
   788  088E                     	;# 
   789  088F                     	;# 
   790  088F                     	;# 
   791  0890                     	;# 
   792  0891                     	;# 
   793  0892                     	;# 
   794  0893                     	;# 
   795  0893                     	;# 
   796  0894                     	;# 
   797  0895                     	;# 
   798  0896                     	;# 
   799  0897                     	;# 
   800  0897                     	;# 
   801  0898                     	;# 
   802  0899                     	;# 
   803  0D8C                     	;# 
   804  0D8C                     	;# 
   805  0D8D                     	;# 
   806  0D8E                     	;# 
   807  0D8F                     	;# 
   808  0D8F                     	;# 
   809  0D90                     	;# 
   810  0D91                     	;# 
   811  0D92                     	;# 
   812  0D92                     	;# 
   813  0D93                     	;# 
   814  0D94                     	;# 
   815  0D95                     	;# 
   816  0D95                     	;# 
   817  0D96                     	;# 
   818  0D97                     	;# 
   819  0D98                     	;# 
   820  0D99                     	;# 
   821  0D9A                     	;# 
   822  0D9B                     	;# 
   823  0D9C                     	;# 
   824  0D9D                     	;# 
   825  0D9E                     	;# 
   826  0D9E                     	;# 
   827  0D9F                     	;# 
   828  0DA0                     	;# 
   829  0DA1                     	;# 
   830  0DA1                     	;# 
   831  0DA2                     	;# 
   832  0DA3                     	;# 
   833  0DA4                     	;# 
   834  0DA4                     	;# 
   835  0DA5                     	;# 
   836  0DA6                     	;# 
   837  0DA7                     	;# 
   838  0DA7                     	;# 
   839  0DA8                     	;# 
   840  0DA9                     	;# 
   841  0DAA                     	;# 
   842  0DAB                     	;# 
   843  0DAC                     	;# 
   844  0DAD                     	;# 
   845  0DAE                     	;# 
   846  0DAF                     	;# 
   847  0E0F                     	;# 
   848  0E10                     	;# 
   849  0E11                     	;# 
   850  0E12                     	;# 
   851  0E13                     	;# 
   852  0E14                     	;# 
   853  0E15                     	;# 
   854  0E16                     	;# 
   855  0E17                     	;# 
   856  0E18                     	;# 
   857  0E19                     	;# 
   858  0E1A                     	;# 
   859  0E1B                     	;# 
   860  0E1C                     	;# 
   861  0E1D                     	;# 
   862  0E1E                     	;# 
   863  0E1F                     	;# 
   864  0E20                     	;# 
   865  0E21                     	;# 
   866  0E22                     	;# 
   867  0E23                     	;# 
   868  0E24                     	;# 
   869  0E25                     	;# 
   870  0E26                     	;# 
   871  0E27                     	;# 
   872  0E28                     	;# 
   873  0E29                     	;# 
   874  0E2A                     	;# 
   875  0E2B                     	;# 
   876  0E2C                     	;# 
   877  0E2D                     	;# 
   878  0E2E                     	;# 
   879  0E90                     	;# 
   880  0E91                     	;# 
   881  0E92                     	;# 
   882  0E94                     	;# 
   883  0E95                     	;# 
   884  0E9C                     	;# 
   885  0E9D                     	;# 
   886  0E9E                     	;# 
   887  0E9F                     	;# 
   888  0EA0                     	;# 
   889  0EA1                     	;# 
   890  0EA2                     	;# 
   891  0EA3                     	;# 
   892  0EA4                     	;# 
   893  0EA5                     	;# 
   894  0EA6                     	;# 
   895  0EA7                     	;# 
   896  0F0F                     	;# 
   897  0F10                     	;# 
   898  0F11                     	;# 
   899  0F12                     	;# 
   900  0F13                     	;# 
   901  0F14                     	;# 
   902  0F15                     	;# 
   903  0F16                     	;# 
   904  0F17                     	;# 
   905  0F18                     	;# 
   906  0F19                     	;# 
   907  0F1A                     	;# 
   908  0F1B                     	;# 
   909  0F1C                     	;# 
   910  0F1D                     	;# 
   911  0F1E                     	;# 
   912  0F1F                     	;# 
   913  0F20                     	;# 
   914  0F21                     	;# 
   915  0F22                     	;# 
   916  0F23                     	;# 
   917  0F24                     	;# 
   918  0F25                     	;# 
   919  0F26                     	;# 
   920  0F27                     	;# 
   921  0F28                     	;# 
   922  0F29                     	;# 
   923  0F2A                     	;# 
   924  0F2B                     	;# 
   925  0F2C                     	;# 
   926  0F2D                     	;# 
   927  0F2E                     	;# 
   928  0F2F                     	;# 
   929  0F30                     	;# 
   930  0F31                     	;# 
   931  0F32                     	;# 
   932  0F33                     	;# 
   933  0F34                     	;# 
   934  0F35                     	;# 
   935  0F36                     	;# 
   936  0F37                     	;# 
   937  0FE4                     	;# 
   938  0FE5                     	;# 
   939  0FE6                     	;# 
   940  0FE7                     	;# 
   941  0FE8                     	;# 
   942  0FE9                     	;# 
   943  0FEA                     	;# 
   944  0FEB                     	;# 
   945  0FED                     	;# 
   946  0FEE                     	;# 
   947  0FEF                     	;# 
   948  0016                     _TMR1	set	22
   949  001A                     _TMR2	set	26
   950  0010                     _PIR1bits	set	16
   951  001F                     _T2RST	set	31
   952  001D                     _T2HLTbits	set	29
   953  001C                     _T2CONbits	set	28
   954  001E                     _T2CLKCON	set	30
   955  0018                     _T1CONbits	set	24
   956  000B                     _INTCONbits	set	11
   957  000C                     _PORTA	set	12
   958  0015                     _TMR0	set	21
   959  009B                     _ADRESL	set	155
   960  009C                     _ADRESH	set	156
   961  009E                     _ADCON1bits	set	158
   962  009D                     _ADCON0bits	set	157
   963  008E                     _TRISC	set	142
   964  008D                     _TRISB	set	141
   965  008C                     _TRISA	set	140
   966  0095                     _OPTION_REGbits	set	149
   967  0090                     _PIE1bits	set	144
   968  009A                     _OSCSTATbits	set	154
   969  0099                     _OSCCONbits	set	153
   970  010E                     _LATCbits	set	270
   971  018E                     _ANSELC	set	398
   972  018D                     _ANSELB	set	397
   973  018C                     _ANSELA	set	396
   974  0215                     _SSP1CON1bits	set	533
   975  0214                     _SSP1STATbits	set	532
   976  0216                     _SSPCON2bits	set	534
   977  0211                     _SSP1BUF	set	529
   978  0216                     _SSP1CON2bits	set	534
   979  0212                     _SSP1ADD	set	530
   980  0215                     _SSP1CONbits	set	533
   981  10B3                     _RCEN	set	4275
   982  028D                     _ODCONBbits	set	653
   983  0399                     _IOCCF	set	921
   984  0398                     _IOCCN	set	920
   985  0399                     _IOCCFbits	set	921
   986  0397                     _IOCCP	set	919
   987  049A                     _TMR5L	set	1178
   988  049B                     _TMR5H	set	1179
   989  0493                     _TMR3L	set	1171
   990  0494                     _TMR3H	set	1172
   991  049C                     _T5CONbits	set	1180
   992  0495                     _T3CONbits	set	1173
   993  0E20                     _SSPCLKPPS	set	3616
   994  0E21                     _SSPDATPPS	set	3617
   995  0E9E                     _RB6PPS	set	3742
   996  0E9C                     _RB4PPS	set	3740
   997                           
   998                           	psect	cinit
   999  00EA                     start_initialization:	
  1000                           ; #config settings
  1001                           
  1002  00EA                     __initialization:
  1003                           
  1004                           ; Clear objects allocated to COMMON
  1005  00EA  01F0               	clrf	__pbssCOMMON& (0+127)
  1006  00EB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1007  00EC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1008  00ED  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1009  00EE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1010  00EF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1011                           
  1012                           ; Clear objects allocated to BANK0
  1013  00F0  3020               	movlw	low __pbssBANK0
  1014  00F1  0084               	movwf	4
  1015  00F2  3000               	movlw	high __pbssBANK0
  1016  00F3  0085               	movwf	5
  1017  00F4  302A               	movlw	42
  1018  00F5  3185  2502  3180   	fcall	clear_ram0
  1019  00F8                     end_of_initialization:	
  1020                           ;End of C runtime variable initialization code
  1021                           
  1022  00F8                     __end_of__initialization:
  1023  00F8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1024  00F9  0020               	movlb	0
  1025  00FA  3180  28FC         	ljmp	_main	;jump to C main() function
  1026                           
  1027                           	psect	bssCOMMON
  1028  0070                     __pbssCOMMON:
  1029  0070                     _voltage:
  1030  0070                     	ds	2
  1031  0072                     _TMR2H:
  1032  0072                     	ds	2
  1033  0074                     _count:
  1034  0074                     	ds	2
  1035                           
  1036                           	psect	bssBANK0
  1037  0020                     __pbssBANK0:
  1038  0020                     _setpoint:
  1039  0020                     	ds	2
  1040  0022                     _ch4:
  1041  0022                     	ds	2
  1042  0024                     _ch3:
  1043  0024                     	ds	2
  1044  0026                     _ch2:
  1045  0026                     	ds	2
  1046  0028                     _ch1:
  1047  0028                     	ds	2
  1048  002A                     _tmrLoop:
  1049  002A                     	ds	2
  1050  002C                     _TMR0H:
  1051  002C                     	ds	2
  1052  002E                     _esc4:
  1053  002E                     	ds	2
  1054  0030                     _esc3:
  1055  0030                     	ds	2
  1056  0032                     _esc2:
  1057  0032                     	ds	2
  1058  0034                     _esc1:
  1059  0034                     	ds	2
  1060  0036                     _magz:
  1061  0036                     	ds	2
  1062  0038                     _magy:
  1063  0038                     	ds	2
  1064  003A                     _magx:
  1065  003A                     	ds	2
  1066  003C                     _gyroz:
  1067  003C                     	ds	2
  1068  003E                     _gyroy:
  1069  003E                     	ds	2
  1070  0040                     _gyrox:
  1071  0040                     	ds	2
  1072  0042                     _accz:
  1073  0042                     	ds	2
  1074  0044                     _accy:
  1075  0044                     	ds	2
  1076  0046                     _accx:
  1077  0046                     	ds	2
  1078  0048                     _start:
  1079  0048                     	ds	1
  1080  0049                     _p:
  1081  0049                     	ds	1
  1082                           
  1083                           	psect	clrtext
  1084  0502                     clear_ram0:	
  1085                           ;	Called with FSR0 containing the base address, and
  1086                           ;	WREG with the size to clear
  1087                           
  1088  0502  0064               	clrwdt	;clear the watchdog before getting into this loop
  1089  0503                     clrloop0:
  1090  0503  0180               	clrf	0	;clear RAM location pointed to by FSR
  1091  0504  3101               	addfsr 0,1
  1092  0505  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1093  0506  2D03               	goto	clrloop0	;have we reached the end yet?
  1094  0507  3400               	retlw	0	;all done for this memory range, return
  1095                           
  1096                           	psect	cstackCOMMON
  1097  0076                     __pcstackCOMMON:
  1098  0076                     ?_pic_init:
  1099  0076                     ?_gyro_config:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102  0076                     ?_reset_timer_loop:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0076                     ?_read_sensor:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0076                     ?_calculate_pid:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0076                     ?_balance_drone:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0076                     ?_battery_compensation:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0076                     ?_i2c_start:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0076                     ?_i2c_write_byte:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0076                     ?_i2c_stop:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0076                     ?_i2c_restart:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0076                     ?_main:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0076                     ?_remote:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0076                     ??_remote:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0x0
  1140  0076                     	ds	6
  1141                           
  1142                           	psect	cstackBANK0
  1143  004A                     __pcstackBANK0:
  1144  004A                     ??_pic_init:
  1145  004A                     ??_reset_timer_loop:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  004A                     ??_calculate_pid:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  004A                     ??_balance_drone:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  004A                     ??_battery_compensation:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  004A                     ??_i2c_start:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  004A                     ??_i2c_write_byte:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  004A                     ??_i2c_stop:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  004A                     ??_i2c_restart:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  004A                     ?_nack:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  004A                     ?_i2c_read_byte:	
  1173                           ; 2 bytes @ 0x0
  1174                           
  1175  004A                     i2c_write_byte@address:	
  1176                           ; 2 bytes @ 0x0
  1177                           
  1178                           
  1179                           ; 1 bytes @ 0x0
  1180  004A                     	ds	2
  1181  004C                     ?_i2c_write:
  1182  004C                     ??_nack:	
  1183                           ; 1 bytes @ 0x2
  1184                           
  1185  004C                     ??_i2c_read_byte:	
  1186                           ; 1 bytes @ 0x2
  1187                           
  1188  004C                     i2c_write@subaddress:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191                           
  1192                           ; 1 bytes @ 0x2
  1193  004C                     	ds	1
  1194  004D                     i2c_write@data:
  1195                           
  1196                           ; 1 bytes @ 0x3
  1197  004D                     	ds	1
  1198  004E                     ??_i2c_write:
  1199  004E                     i2c_write@address:	
  1200                           ; 1 bytes @ 0x4
  1201                           
  1202  004E                     i2c_read_byte@ack:	
  1203                           ; 1 bytes @ 0x4
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0x4
  1207  004E                     	ds	1
  1208  004F                     ??_gyro_config:
  1209  004F                     i2c_read_byte@temp:	
  1210                           ; 1 bytes @ 0x5
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x5
  1214  004F                     	ds	2
  1215  0051                     ?_i2c_read:
  1216  0051                     i2c_read@subaddress:	
  1217                           ; 2 bytes @ 0x7
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0x7
  1221  0051                     	ds	2
  1222  0053                     ??_i2c_read:
  1223                           
  1224                           ; 1 bytes @ 0x9
  1225  0053                     	ds	3
  1226  0056                     i2c_read@low:
  1227                           
  1228                           ; 2 bytes @ 0xC
  1229  0056                     	ds	2
  1230  0058                     i2c_read@high:
  1231                           
  1232                           ; 2 bytes @ 0xE
  1233  0058                     	ds	2
  1234  005A                     i2c_read@address:
  1235                           
  1236                           ; 1 bytes @ 0x10
  1237  005A                     	ds	1
  1238  005B                     ??_read_sensor:
  1239                           
  1240                           ; 1 bytes @ 0x11
  1241  005B                     	ds	1
  1242  005C                     ??_main:
  1243                           
  1244                           ; 1 bytes @ 0x12
  1245  005C                     	ds	8
  1246                           
  1247                           	psect	maintext
  1248  00FC                     __pmaintext:	
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1251 ;;
  1252 ;; *************** function _main *****************
  1253 ;; Defined at:
  1254 ;;		line 34 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : B1F/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;Total ram usage:        8 bytes
  1273 ;; Hardware stack levels required when called:    5
  1274 ;; This function calls:
  1275 ;;		_balance_drone
  1276 ;;		_battery_compensation
  1277 ;;		_calculate_pid
  1278 ;;		_gyro_config
  1279 ;;		_pic_init
  1280 ;;		_read_sensor
  1281 ;;		_reset_timer_loop
  1282 ;; This function is called by:
  1283 ;;		Startup code after reset
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _main
  1289  00FC                     _main:
  1290  00FC                     l1835:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1293                           
  1294                           
  1295                           ;main.c: 36:     pic_init();
  1296  00FC  3183  2391  3180   	fcall	_pic_init
  1297                           
  1298                           ;main.c: 37:     gyro_config();
  1299  00FF  3183  23F2  3180   	fcall	_gyro_config
  1300  0102                     l1837:
  1301                           
  1302                           ;main.c: 40:     start = 0;
  1303  0102  0020               	movlb	0	; select bank0
  1304  0103  01C8               	clrf	_start
  1305  0104                     l1839:
  1306                           
  1307                           ;main.c: 41:     LATCbits.LATC7 = 0;
  1308  0104  0022               	movlb	2	; select bank2
  1309  0105  138E               	bcf	14,7	;volatile
  1310  0106                     l1841:
  1311                           
  1312                           ;main.c: 42:     ch3 = 1000;
  1313  0106  30E8               	movlw	232
  1314  0107  0020               	movlb	0	; select bank0
  1315  0108  00A4               	movwf	_ch3
  1316  0109  3003               	movlw	3
  1317  010A  00A5               	movwf	_ch3+1
  1318  010B                     l1843:
  1319                           
  1320                           ;main.c: 46:         reset_timer_loop();
  1321  010B  3184  24FB  3180   	fcall	_reset_timer_loop
  1322  010E                     l1845:
  1323                           
  1324                           ;main.c: 48:         if(!start){
  1325  010E  0020               	movlb	0	; select bank0
  1326  010F  0848               	movf	_start,w
  1327  0110  1D03               	btfss	3,2
  1328  0111  2913               	goto	u1331
  1329  0112  2914               	goto	u1330
  1330  0113                     u1331:
  1331  0113  292A               	goto	l1853
  1332  0114                     u1330:
  1333  0114                     l1847:
  1334                           
  1335                           ;main.c: 50:             esc1 = esc2 = esc3 = esc4 = 1000;
  1336  0114  30E8               	movlw	232
  1337  0115  00AE               	movwf	_esc4
  1338  0116  3003               	movlw	3
  1339  0117  00AF               	movwf	_esc4+1
  1340  0118  082F               	movf	_esc4+1,w
  1341  0119  00B1               	movwf	_esc3+1
  1342  011A  082E               	movf	_esc4,w
  1343  011B  00B0               	movwf	_esc3
  1344  011C  0831               	movf	_esc3+1,w
  1345  011D  00B3               	movwf	_esc2+1
  1346  011E  0830               	movf	_esc3,w
  1347  011F  00B2               	movwf	_esc2
  1348  0120  0833               	movf	_esc2+1,w
  1349  0121  00B5               	movwf	_esc1+1
  1350  0122  0832               	movf	_esc2,w
  1351  0123  00B4               	movwf	_esc1
  1352  0124                     l1849:
  1353                           
  1354                           ;main.c: 51:             p.p1 = p.p2 = p.p3 = p.p4 = 0;
  1355  0124  11C9               	bcf	_p,3
  1356  0125  1149               	bcf	_p,2
  1357  0126  10C9               	bcf	_p,1
  1358  0127  1049               	bcf	_p,0
  1359  0128                     l1851:
  1360                           
  1361                           ;main.c: 52:             start = 1;
  1362  0128  01C8               	clrf	_start
  1363  0129  0AC8               	incf	_start,f
  1364  012A                     l1853:
  1365                           
  1366                           ;main.c: 54:         if(start == 1 && ch4 > 1900 && ch3 < 1050){
  1367  012A  0348               	decf	_start,w
  1368  012B  1D03               	btfss	3,2
  1369  012C  292E               	goto	u1341
  1370  012D  292F               	goto	u1340
  1371  012E                     u1341:
  1372  012E  2945               	goto	l1861
  1373  012F                     u1340:
  1374  012F                     l1855:
  1375  012F  3007               	movlw	7
  1376  0130  0223               	subwf	_ch4+1,w
  1377  0131  306D               	movlw	109
  1378  0132  1903               	skipnz
  1379  0133  0222               	subwf	_ch4,w
  1380  0134  1C03               	skipc
  1381  0135  2937               	goto	u1351
  1382  0136  2938               	goto	u1350
  1383  0137                     u1351:
  1384  0137  2945               	goto	l1861
  1385  0138                     u1350:
  1386  0138                     l1857:
  1387  0138  3004               	movlw	4
  1388  0139  0225               	subwf	_ch3+1,w
  1389  013A  301A               	movlw	26
  1390  013B  1903               	skipnz
  1391  013C  0224               	subwf	_ch3,w
  1392  013D  1803               	skipnc
  1393  013E  2940               	goto	u1361
  1394  013F  2941               	goto	u1360
  1395  0140                     u1361:
  1396  0140  2945               	goto	l1861
  1397  0141                     u1360:
  1398  0141                     l1859:
  1399                           
  1400                           ;main.c: 55:             start = 2;
  1401  0141  3002               	movlw	2
  1402  0142  00DC               	movwf	??_main
  1403  0143  085C               	movf	??_main,w
  1404  0144  00C8               	movwf	_start
  1405  0145                     l1861:
  1406                           
  1407                           ;main.c: 58:         if(start == 2 && ch4 < 1600 && ch3 < 1050){
  1408  0145  3002               	movlw	2
  1409  0146  0648               	xorwf	_start,w
  1410  0147  1D03               	btfss	3,2
  1411  0148  294A               	goto	u1371
  1412  0149  294B               	goto	u1370
  1413  014A                     u1371:
  1414  014A  2961               	goto	l1869
  1415  014B                     u1370:
  1416  014B                     l1863:
  1417  014B  3006               	movlw	6
  1418  014C  0223               	subwf	_ch4+1,w
  1419  014D  3040               	movlw	64
  1420  014E  1903               	skipnz
  1421  014F  0222               	subwf	_ch4,w
  1422  0150  1803               	skipnc
  1423  0151  2953               	goto	u1381
  1424  0152  2954               	goto	u1380
  1425  0153                     u1381:
  1426  0153  2961               	goto	l1869
  1427  0154                     u1380:
  1428  0154                     l1865:
  1429  0154  3004               	movlw	4
  1430  0155  0225               	subwf	_ch3+1,w
  1431  0156  301A               	movlw	26
  1432  0157  1903               	skipnz
  1433  0158  0224               	subwf	_ch3,w
  1434  0159  1803               	skipnc
  1435  015A  295C               	goto	u1391
  1436  015B  295D               	goto	u1390
  1437  015C                     u1391:
  1438  015C  2961               	goto	l1869
  1439  015D                     u1390:
  1440  015D                     l1867:
  1441                           
  1442                           ;main.c: 59:             start = 3;
  1443  015D  3003               	movlw	3
  1444  015E  00DC               	movwf	??_main
  1445  015F  085C               	movf	??_main,w
  1446  0160  00C8               	movwf	_start
  1447  0161                     l1869:
  1448                           
  1449                           ;main.c: 63:         if(start == 3 && ch4 < 1050 && ch3 < 1050){
  1450  0161  3003               	movlw	3
  1451  0162  0648               	xorwf	_start,w
  1452  0163  1D03               	btfss	3,2
  1453  0164  2966               	goto	u1401
  1454  0165  2967               	goto	u1400
  1455  0166                     u1401:
  1456  0166  297A               	goto	l1877
  1457  0167                     u1400:
  1458  0167                     l1871:
  1459  0167  3004               	movlw	4
  1460  0168  0223               	subwf	_ch4+1,w
  1461  0169  301A               	movlw	26
  1462  016A  1903               	skipnz
  1463  016B  0222               	subwf	_ch4,w
  1464  016C  1803               	skipnc
  1465  016D  296F               	goto	u1411
  1466  016E  2970               	goto	u1410
  1467  016F                     u1411:
  1468  016F  297A               	goto	l1877
  1469  0170                     u1410:
  1470  0170                     l1873:
  1471  0170  3004               	movlw	4
  1472  0171  0225               	subwf	_ch3+1,w
  1473  0172  301A               	movlw	26
  1474  0173  1903               	skipnz
  1475  0174  0224               	subwf	_ch3,w
  1476  0175  1803               	skipnc
  1477  0176  2978               	goto	u1421
  1478  0177  2979               	goto	u1420
  1479  0178                     u1421:
  1480  0178  297A               	goto	l1877
  1481  0179                     u1420:
  1482  0179                     l1875:
  1483                           
  1484                           ;main.c: 64:             start = 0;
  1485  0179  01C8               	clrf	_start
  1486  017A                     l1877:
  1487                           
  1488                           ;main.c: 68:         read_sensor();
  1489  017A  3182  22A8  3180   	fcall	_read_sensor
  1490  017D                     l1879:
  1491                           
  1492                           ;main.c: 70:         calculate_pid();
  1493  017D  3185  2508  3180   	fcall	_calculate_pid
  1494  0180                     l1881:
  1495                           
  1496                           ;main.c: 72:         balance_drone();
  1497  0180  3185  2509  3180   	fcall	_balance_drone
  1498  0183                     l1883:
  1499                           
  1500                           ;main.c: 73:         battery_compensation();
  1501  0183  3184  24A0  3180   	fcall	_battery_compensation
  1502  0186                     l1885:
  1503                           
  1504                           ;main.c: 74:         esc1 = esc2 = esc3 = esc4 = ch3;
  1505  0186  0020               	movlb	0	; select bank0
  1506  0187  0825               	movf	_ch3+1,w
  1507  0188  00AF               	movwf	_esc4+1
  1508  0189  0824               	movf	_ch3,w
  1509  018A  00AE               	movwf	_esc4
  1510  018B  082F               	movf	_esc4+1,w
  1511  018C  00B1               	movwf	_esc3+1
  1512  018D  082E               	movf	_esc4,w
  1513  018E  00B0               	movwf	_esc3
  1514  018F  0831               	movf	_esc3+1,w
  1515  0190  00B3               	movwf	_esc2+1
  1516  0191  0830               	movf	_esc3,w
  1517  0192  00B2               	movwf	_esc2
  1518  0193  0833               	movf	_esc2+1,w
  1519  0194  00B5               	movwf	_esc1+1
  1520  0195  0832               	movf	_esc2,w
  1521  0196  00B4               	movwf	_esc1
  1522  0197                     l1887:
  1523                           
  1524                           ;main.c: 75:         tmrLoop = (TMR0H << 8) | TMR0;
  1525  0197  0815               	movf	21,w	;volatile
  1526  0198  00DC               	movwf	??_main
  1527  0199  01DD               	clrf	??_main+1
  1528  019A  082C               	movf	_TMR0H,w
  1529  019B  00DF               	movwf	??_main+3
  1530  019C  01DE               	clrf	??_main+2
  1531  019D  085C               	movf	??_main,w
  1532  019E  045E               	iorwf	??_main+2,w
  1533  019F  00E0               	movwf	??_main+4
  1534  01A0  085D               	movf	??_main+1,w
  1535  01A1  045F               	iorwf	??_main+3,w
  1536  01A2  00E1               	movwf	??_main+5
  1537  01A3  0860               	movf	??_main+4,w
  1538  01A4  00AA               	movwf	_tmrLoop
  1539  01A5  0861               	movf	??_main+5,w
  1540  01A6  00AB               	movwf	_tmrLoop+1
  1541  01A7                     l1889:
  1542                           
  1543                           ;main.c: 77:         if(start < 3){
  1544  01A7  3003               	movlw	3
  1545  01A8  0248               	subwf	_start,w
  1546  01A9  1803               	skipnc
  1547  01AA  29AC               	goto	u1431
  1548  01AB  29AD               	goto	u1430
  1549  01AC                     u1431:
  1550  01AC  29D7               	goto	l1899
  1551  01AD                     u1430:
  1552  01AD                     l1891:
  1553                           
  1554                           ;main.c: 78:             PORTA |= 0b00010111;
  1555  01AD  3017               	movlw	23
  1556  01AE  00DC               	movwf	??_main
  1557  01AF  085C               	movf	??_main,w
  1558  01B0  048C               	iorwf	12,f	;volatile
  1559  01B1                     l1893:	
  1560                           ;main.c: 79:             while((((TMR0H << 8) | TMR0) - tmrLoop) < 1000 || TMR0 < 0xE8);
  1561                           
  1562  01B1  0815               	movf	21,w	;volatile
  1563  01B2  00DC               	movwf	??_main
  1564  01B3  01DD               	clrf	??_main+1
  1565  01B4  082C               	movf	_TMR0H,w
  1566  01B5  00DF               	movwf	??_main+3
  1567  01B6  01DE               	clrf	??_main+2
  1568  01B7  085C               	movf	??_main,w
  1569  01B8  045E               	iorwf	??_main+2,w
  1570  01B9  00E0               	movwf	??_main+4
  1571  01BA  085D               	movf	??_main+1,w
  1572  01BB  045F               	iorwf	??_main+3,w
  1573  01BC  00E1               	movwf	??_main+5
  1574  01BD  082A               	movf	_tmrLoop,w
  1575  01BE  0260               	subwf	??_main+4,w
  1576  01BF  00E2               	movwf	??_main+6
  1577  01C0  082B               	movf	_tmrLoop+1,w
  1578  01C1  3B61               	subwfb	??_main+5,w
  1579  01C2  00E3               	movwf	??_main+7
  1580  01C3  3003               	movlw	3
  1581  01C4  0263               	subwf	??_main+7,w
  1582  01C5  30E8               	movlw	232
  1583  01C6  1903               	skipnz
  1584  01C7  0262               	subwf	??_main+6,w
  1585  01C8  1C03               	skipc
  1586  01C9  29CB               	goto	u1441
  1587  01CA  29CC               	goto	u1440
  1588  01CB                     u1441:
  1589  01CB  29B1               	goto	l1893
  1590  01CC                     u1440:
  1591  01CC                     l1895:
  1592  01CC  30E8               	movlw	232
  1593  01CD  0215               	subwf	21,w	;volatile
  1594  01CE  1C03               	skipc
  1595  01CF  29D1               	goto	u1451
  1596  01D0  29D2               	goto	u1450
  1597  01D1                     u1451:
  1598  01D1  29B1               	goto	l1893
  1599  01D2                     u1450:
  1600  01D2                     l1897:
  1601                           
  1602                           ;main.c: 80:             PORTA &= 0b11101000;
  1603  01D2  30E8               	movlw	232
  1604  01D3  00DC               	movwf	??_main
  1605  01D4  085C               	movf	??_main,w
  1606  01D5  058C               	andwf	12,f	;volatile
  1607                           
  1608                           ;main.c: 81:         }
  1609  01D6  2A96               	goto	l1923
  1610  01D7                     l1899:
  1611                           
  1612                           ;main.c: 84:             if(esc1 < 1200)esc1 = 1200;
  1613  01D7  3004               	movlw	4
  1614  01D8  0235               	subwf	_esc1+1,w
  1615  01D9  30B0               	movlw	176
  1616  01DA  1903               	skipnz
  1617  01DB  0234               	subwf	_esc1,w
  1618  01DC  1803               	skipnc
  1619  01DD  29DF               	goto	u1461
  1620  01DE  29E0               	goto	u1460
  1621  01DF                     u1461:
  1622  01DF  29E4               	goto	l87
  1623  01E0                     u1460:
  1624  01E0                     l1901:
  1625  01E0  30B0               	movlw	176
  1626  01E1  00B4               	movwf	_esc1
  1627  01E2  3004               	movlw	4
  1628  01E3  00B5               	movwf	_esc1+1
  1629  01E4                     l87:
  1630                           
  1631                           ;main.c: 85:             if(esc2 < 1200)esc2 = 1200;
  1632  01E4  3004               	movlw	4
  1633  01E5  0233               	subwf	_esc2+1,w
  1634  01E6  30B0               	movlw	176
  1635  01E7  1903               	skipnz
  1636  01E8  0232               	subwf	_esc2,w
  1637  01E9  1803               	skipnc
  1638  01EA  29EC               	goto	u1471
  1639  01EB  29ED               	goto	u1470
  1640  01EC                     u1471:
  1641  01EC  29F1               	goto	l88
  1642  01ED                     u1470:
  1643  01ED                     l1903:
  1644  01ED  30B0               	movlw	176
  1645  01EE  00B2               	movwf	_esc2
  1646  01EF  3004               	movlw	4
  1647  01F0  00B3               	movwf	_esc2+1
  1648  01F1                     l88:
  1649                           
  1650                           ;main.c: 86:             if(esc3 < 1200)esc3 = 1200;
  1651  01F1  3004               	movlw	4
  1652  01F2  0231               	subwf	_esc3+1,w
  1653  01F3  30B0               	movlw	176
  1654  01F4  1903               	skipnz
  1655  01F5  0230               	subwf	_esc3,w
  1656  01F6  1803               	skipnc
  1657  01F7  29F9               	goto	u1481
  1658  01F8  29FA               	goto	u1480
  1659  01F9                     u1481:
  1660  01F9  29FE               	goto	l89
  1661  01FA                     u1480:
  1662  01FA                     l1905:
  1663  01FA  30B0               	movlw	176
  1664  01FB  00B0               	movwf	_esc3
  1665  01FC  3004               	movlw	4
  1666  01FD  00B1               	movwf	_esc3+1
  1667  01FE                     l89:
  1668                           
  1669                           ;main.c: 87:             if(esc4 < 1200)esc4 = 1200;
  1670  01FE  3004               	movlw	4
  1671  01FF  022F               	subwf	_esc4+1,w
  1672  0200  30B0               	movlw	176
  1673  0201  1903               	skipnz
  1674  0202  022E               	subwf	_esc4,w
  1675  0203  1803               	skipnc
  1676  0204  2A06               	goto	u1491
  1677  0205  2A07               	goto	u1490
  1678  0206                     u1491:
  1679  0206  2A0B               	goto	l1909
  1680  0207                     u1490:
  1681  0207                     l1907:
  1682  0207  30B0               	movlw	176
  1683  0208  00AE               	movwf	_esc4
  1684  0209  3004               	movlw	4
  1685  020A  00AF               	movwf	_esc4+1
  1686  020B                     l1909:
  1687                           
  1688                           ;main.c: 88:             PORTA |= 0b00010111;
  1689  020B  3017               	movlw	23
  1690  020C  00DC               	movwf	??_main
  1691  020D  085C               	movf	??_main,w
  1692  020E  048C               	iorwf	12,f	;volatile
  1693                           
  1694                           ;main.c: 89:             while((PORTA & 0b00010111) > 0){
  1695  020F  2A90               	goto	l1921
  1696  0210                     l1911:
  1697                           
  1698                           ;main.c: 90:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc1)PORTA &= 0b1111
      +                          1110;
  1699  0210  0815               	movf	21,w	;volatile
  1700  0211  00DC               	movwf	??_main
  1701  0212  01DD               	clrf	??_main+1
  1702  0213  082C               	movf	_TMR0H,w
  1703  0214  00DF               	movwf	??_main+3
  1704  0215  01DE               	clrf	??_main+2
  1705  0216  085C               	movf	??_main,w
  1706  0217  045E               	iorwf	??_main+2,w
  1707  0218  00E0               	movwf	??_main+4
  1708  0219  085D               	movf	??_main+1,w
  1709  021A  045F               	iorwf	??_main+3,w
  1710  021B  00E1               	movwf	??_main+5
  1711  021C  082A               	movf	_tmrLoop,w
  1712  021D  0260               	subwf	??_main+4,w
  1713  021E  00E2               	movwf	??_main+6
  1714  021F  082B               	movf	_tmrLoop+1,w
  1715  0220  3B61               	subwfb	??_main+5,w
  1716  0221  00E3               	movwf	??_main+7
  1717  0222  0863               	movf	??_main+7,w
  1718  0223  0235               	subwf	_esc1+1,w
  1719  0224  1D03               	skipz
  1720  0225  2A28               	goto	u1505
  1721  0226  0862               	movf	??_main+6,w
  1722  0227  0234               	subwf	_esc1,w
  1723  0228                     u1505:
  1724  0228  1803               	skipnc
  1725  0229  2A2B               	goto	u1501
  1726  022A  2A2C               	goto	u1500
  1727  022B                     u1501:
  1728  022B  2A30               	goto	l93
  1729  022C                     u1500:
  1730  022C                     l1913:
  1731  022C  30FE               	movlw	254
  1732  022D  00DC               	movwf	??_main
  1733  022E  085C               	movf	??_main,w
  1734  022F  058C               	andwf	12,f	;volatile
  1735  0230                     l93:
  1736                           
  1737                           ;main.c: 91:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc2)PORTA &= 0b1111
      +                          1101;
  1738  0230  0815               	movf	21,w	;volatile
  1739  0231  00DC               	movwf	??_main
  1740  0232  01DD               	clrf	??_main+1
  1741  0233  082C               	movf	_TMR0H,w
  1742  0234  00DF               	movwf	??_main+3
  1743  0235  01DE               	clrf	??_main+2
  1744  0236  085C               	movf	??_main,w
  1745  0237  045E               	iorwf	??_main+2,w
  1746  0238  00E0               	movwf	??_main+4
  1747  0239  085D               	movf	??_main+1,w
  1748  023A  045F               	iorwf	??_main+3,w
  1749  023B  00E1               	movwf	??_main+5
  1750  023C  082A               	movf	_tmrLoop,w
  1751  023D  0260               	subwf	??_main+4,w
  1752  023E  00E2               	movwf	??_main+6
  1753  023F  082B               	movf	_tmrLoop+1,w
  1754  0240  3B61               	subwfb	??_main+5,w
  1755  0241  00E3               	movwf	??_main+7
  1756  0242  0863               	movf	??_main+7,w
  1757  0243  0233               	subwf	_esc2+1,w
  1758  0244  1D03               	skipz
  1759  0245  2A48               	goto	u1515
  1760  0246  0862               	movf	??_main+6,w
  1761  0247  0232               	subwf	_esc2,w
  1762  0248                     u1515:
  1763  0248  1803               	skipnc
  1764  0249  2A4B               	goto	u1511
  1765  024A  2A4C               	goto	u1510
  1766  024B                     u1511:
  1767  024B  2A50               	goto	l94
  1768  024C                     u1510:
  1769  024C                     l1915:
  1770  024C  30FD               	movlw	253
  1771  024D  00DC               	movwf	??_main
  1772  024E  085C               	movf	??_main,w
  1773  024F  058C               	andwf	12,f	;volatile
  1774  0250                     l94:
  1775                           
  1776                           ;main.c: 92:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc3)PORTA &= 0b1111
      +                          1011;
  1777  0250  0815               	movf	21,w	;volatile
  1778  0251  00DC               	movwf	??_main
  1779  0252  01DD               	clrf	??_main+1
  1780  0253  082C               	movf	_TMR0H,w
  1781  0254  00DF               	movwf	??_main+3
  1782  0255  01DE               	clrf	??_main+2
  1783  0256  085C               	movf	??_main,w
  1784  0257  045E               	iorwf	??_main+2,w
  1785  0258  00E0               	movwf	??_main+4
  1786  0259  085D               	movf	??_main+1,w
  1787  025A  045F               	iorwf	??_main+3,w
  1788  025B  00E1               	movwf	??_main+5
  1789  025C  082A               	movf	_tmrLoop,w
  1790  025D  0260               	subwf	??_main+4,w
  1791  025E  00E2               	movwf	??_main+6
  1792  025F  082B               	movf	_tmrLoop+1,w
  1793  0260  3B61               	subwfb	??_main+5,w
  1794  0261  00E3               	movwf	??_main+7
  1795  0262  0863               	movf	??_main+7,w
  1796  0263  0231               	subwf	_esc3+1,w
  1797  0264  1D03               	skipz
  1798  0265  2A68               	goto	u1525
  1799  0266  0862               	movf	??_main+6,w
  1800  0267  0230               	subwf	_esc3,w
  1801  0268                     u1525:
  1802  0268  1803               	skipnc
  1803  0269  2A6B               	goto	u1521
  1804  026A  2A6C               	goto	u1520
  1805  026B                     u1521:
  1806  026B  2A70               	goto	l95
  1807  026C                     u1520:
  1808  026C                     l1917:
  1809  026C  30FB               	movlw	251
  1810  026D  00DC               	movwf	??_main
  1811  026E  085C               	movf	??_main,w
  1812  026F  058C               	andwf	12,f	;volatile
  1813  0270                     l95:
  1814                           
  1815                           ;main.c: 93:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc4)PORTA &= 0b1110
      +                          1111;
  1816  0270  0815               	movf	21,w	;volatile
  1817  0271  00DC               	movwf	??_main
  1818  0272  01DD               	clrf	??_main+1
  1819  0273  082C               	movf	_TMR0H,w
  1820  0274  00DF               	movwf	??_main+3
  1821  0275  01DE               	clrf	??_main+2
  1822  0276  085C               	movf	??_main,w
  1823  0277  045E               	iorwf	??_main+2,w
  1824  0278  00E0               	movwf	??_main+4
  1825  0279  085D               	movf	??_main+1,w
  1826  027A  045F               	iorwf	??_main+3,w
  1827  027B  00E1               	movwf	??_main+5
  1828  027C  082A               	movf	_tmrLoop,w
  1829  027D  0260               	subwf	??_main+4,w
  1830  027E  00E2               	movwf	??_main+6
  1831  027F  082B               	movf	_tmrLoop+1,w
  1832  0280  3B61               	subwfb	??_main+5,w
  1833  0281  00E3               	movwf	??_main+7
  1834  0282  0863               	movf	??_main+7,w
  1835  0283  022F               	subwf	_esc4+1,w
  1836  0284  1D03               	skipz
  1837  0285  2A88               	goto	u1535
  1838  0286  0862               	movf	??_main+6,w
  1839  0287  022E               	subwf	_esc4,w
  1840  0288                     u1535:
  1841  0288  1803               	skipnc
  1842  0289  2A8B               	goto	u1531
  1843  028A  2A8C               	goto	u1530
  1844  028B                     u1531:
  1845  028B  2A90               	goto	l1921
  1846  028C                     u1530:
  1847  028C                     l1919:
  1848  028C  30EF               	movlw	239
  1849  028D  00DC               	movwf	??_main
  1850  028E  085C               	movf	??_main,w
  1851  028F  058C               	andwf	12,f	;volatile
  1852  0290                     l1921:
  1853                           
  1854                           ;main.c: 89:             while((PORTA & 0b00010111) > 0){
  1855  0290  080C               	movf	12,w	;volatile
  1856  0291  3917               	andlw	23
  1857  0292  1D03               	btfss	3,2
  1858  0293  2A95               	goto	u1541
  1859  0294  2A96               	goto	u1540
  1860  0295                     u1541:
  1861  0295  2A10               	goto	l1911
  1862  0296                     u1540:
  1863  0296                     l1923:
  1864  0296  3000               	movlw	0
  1865  0297  022D               	subwf	_TMR0H+1,w
  1866  0298  304E               	movlw	78
  1867  0299  1903               	skipnz
  1868  029A  022C               	subwf	_TMR0H,w
  1869  029B  1C03               	skipc
  1870  029C  2A9E               	goto	u1551
  1871  029D  2A9F               	goto	u1550
  1872  029E                     u1551:
  1873  029E  2A96               	goto	l1923
  1874  029F                     u1550:
  1875  029F                     l1925:
  1876  029F  3014               	movlw	20
  1877  02A0  0215               	subwf	21,w	;volatile
  1878  02A1  1C03               	skipc
  1879  02A2  2AA4               	goto	u1561
  1880  02A3  2AA5               	goto	u1560
  1881  02A4                     u1561:
  1882  02A4  2A96               	goto	l1923
  1883  02A5                     u1560:
  1884  02A5  290B               	goto	l1843
  1885  02A6  3180  28E8         	ljmp	start
  1886  02A8                     __end_of_main:
  1887                           
  1888                           	psect	text1
  1889  04FB                     __ptext1:	
  1890 ;; *************** function _reset_timer_loop *****************
  1891 ;; Defined at:
  1892 ;;		line 172 in file "config.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		status,2
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _reset_timer_loop
  1922  04FB                     _reset_timer_loop:
  1923  04FB                     l1825:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _reset_timer_loop: [status,2]
  1926                           
  1927                           
  1928                           ;config.c: 173:     TMR0H = 0;
  1929  04FB  0020               	movlb	0	; select bank0
  1930  04FC  01AC               	clrf	_TMR0H
  1931  04FD  01AD               	clrf	_TMR0H+1
  1932                           
  1933                           ;config.c: 174:     TMR0 = 0;
  1934  04FE  0195               	clrf	21	;volatile
  1935                           
  1936                           ;config.c: 175:     TMR0H = 0;
  1937  04FF  01AC               	clrf	_TMR0H
  1938  0500  01AD               	clrf	_TMR0H+1
  1939  0501                     l316:
  1940  0501  0008               	return
  1941  0502                     __end_of_reset_timer_loop:
  1942                           
  1943                           	psect	text2
  1944  02A8                     __ptext2:	
  1945 ;; *************** function _read_sensor *****************
  1946 ;; Defined at:
  1947 ;;		line 75 in file "config.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0, pclath, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;Total ram usage:        1 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    4
  1968 ;; This function calls:
  1969 ;;		_i2c_read
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _read_sensor
  1977  02A8                     _read_sensor:
  1978  02A8                     l1827:	
  1979                           ;incstack = 0
  1980                           ; Regs used in _read_sensor: [wreg+status,2+status,0+pclath+cstack]
  1981                           
  1982                           
  1983                           ;config.c: 76:     gyrox = i2c_read(0xD2, 0xA8);
  1984  02A8  30A8               	movlw	168
  1985  02A9  0020               	movlb	0	; select bank0
  1986  02AA  00DB               	movwf	??_read_sensor
  1987  02AB  085B               	movf	??_read_sensor,w
  1988  02AC  00D1               	movwf	i2c_read@subaddress
  1989  02AD  30D2               	movlw	210
  1990  02AE  3183  231F  3182   	fcall	_i2c_read
  1991  02B1  0020               	movlb	0	; select bank0
  1992  02B2  0852               	movf	?_i2c_read+1,w
  1993  02B3  00C1               	movwf	_gyrox+1
  1994  02B4  0851               	movf	?_i2c_read,w
  1995  02B5  00C0               	movwf	_gyrox
  1996                           
  1997                           ;config.c: 77:     gyroy = i2c_read(0xD2, 0xAA);
  1998  02B6  30AA               	movlw	170
  1999  02B7  00DB               	movwf	??_read_sensor
  2000  02B8  085B               	movf	??_read_sensor,w
  2001  02B9  00D1               	movwf	i2c_read@subaddress
  2002  02BA  30D2               	movlw	210
  2003  02BB  3183  231F  3182   	fcall	_i2c_read
  2004  02BE  0020               	movlb	0	; select bank0
  2005  02BF  0852               	movf	?_i2c_read+1,w
  2006  02C0  00BF               	movwf	_gyroy+1
  2007  02C1  0851               	movf	?_i2c_read,w
  2008  02C2  00BE               	movwf	_gyroy
  2009                           
  2010                           ;config.c: 78:     gyroz = i2c_read(0xD2, 0xAC);
  2011  02C3  30AC               	movlw	172
  2012  02C4  00DB               	movwf	??_read_sensor
  2013  02C5  085B               	movf	??_read_sensor,w
  2014  02C6  00D1               	movwf	i2c_read@subaddress
  2015  02C7  30D2               	movlw	210
  2016  02C8  3183  231F  3182   	fcall	_i2c_read
  2017  02CB  0020               	movlb	0	; select bank0
  2018  02CC  0852               	movf	?_i2c_read+1,w
  2019  02CD  00BD               	movwf	_gyroz+1
  2020  02CE  0851               	movf	?_i2c_read,w
  2021  02CF  00BC               	movwf	_gyroz
  2022                           
  2023                           ;config.c: 79:     accx = i2c_read(0x32, 0xA8);
  2024  02D0  30A8               	movlw	168
  2025  02D1  00DB               	movwf	??_read_sensor
  2026  02D2  085B               	movf	??_read_sensor,w
  2027  02D3  00D1               	movwf	i2c_read@subaddress
  2028  02D4  3032               	movlw	50
  2029  02D5  3183  231F  3182   	fcall	_i2c_read
  2030  02D8  0020               	movlb	0	; select bank0
  2031  02D9  0852               	movf	?_i2c_read+1,w
  2032  02DA  00C7               	movwf	_accx+1
  2033  02DB  0851               	movf	?_i2c_read,w
  2034  02DC  00C6               	movwf	_accx
  2035                           
  2036                           ;config.c: 80:     accy = i2c_read(0x32, 0xAA);
  2037  02DD  30AA               	movlw	170
  2038  02DE  00DB               	movwf	??_read_sensor
  2039  02DF  085B               	movf	??_read_sensor,w
  2040  02E0  00D1               	movwf	i2c_read@subaddress
  2041  02E1  3032               	movlw	50
  2042  02E2  3183  231F  3182   	fcall	_i2c_read
  2043  02E5  0020               	movlb	0	; select bank0
  2044  02E6  0852               	movf	?_i2c_read+1,w
  2045  02E7  00C5               	movwf	_accy+1
  2046  02E8  0851               	movf	?_i2c_read,w
  2047  02E9  00C4               	movwf	_accy
  2048                           
  2049                           ;config.c: 81:     accz = i2c_read(0x32, 0xAC);
  2050  02EA  30AC               	movlw	172
  2051  02EB  00DB               	movwf	??_read_sensor
  2052  02EC  085B               	movf	??_read_sensor,w
  2053  02ED  00D1               	movwf	i2c_read@subaddress
  2054  02EE  3032               	movlw	50
  2055  02EF  3183  231F  3182   	fcall	_i2c_read
  2056  02F2  0020               	movlb	0	; select bank0
  2057  02F3  0852               	movf	?_i2c_read+1,w
  2058  02F4  00C3               	movwf	_accz+1
  2059  02F5  0851               	movf	?_i2c_read,w
  2060  02F6  00C2               	movwf	_accz
  2061                           
  2062                           ;config.c: 82:     magx = i2c_read(0x3C, 0x83);
  2063  02F7  3083               	movlw	131
  2064  02F8  00DB               	movwf	??_read_sensor
  2065  02F9  085B               	movf	??_read_sensor,w
  2066  02FA  00D1               	movwf	i2c_read@subaddress
  2067  02FB  303C               	movlw	60
  2068  02FC  3183  231F  3182   	fcall	_i2c_read
  2069  02FF  0020               	movlb	0	; select bank0
  2070  0300  0852               	movf	?_i2c_read+1,w
  2071  0301  00BB               	movwf	_magx+1
  2072  0302  0851               	movf	?_i2c_read,w
  2073  0303  00BA               	movwf	_magx
  2074                           
  2075                           ;config.c: 83:     magy = i2c_read(0x3C, 0x85);
  2076  0304  3085               	movlw	133
  2077  0305  00DB               	movwf	??_read_sensor
  2078  0306  085B               	movf	??_read_sensor,w
  2079  0307  00D1               	movwf	i2c_read@subaddress
  2080  0308  303C               	movlw	60
  2081  0309  3183  231F  3182   	fcall	_i2c_read
  2082  030C  0020               	movlb	0	; select bank0
  2083  030D  0852               	movf	?_i2c_read+1,w
  2084  030E  00B9               	movwf	_magy+1
  2085  030F  0851               	movf	?_i2c_read,w
  2086  0310  00B8               	movwf	_magy
  2087                           
  2088                           ;config.c: 84:     magz = i2c_read(0x3C, 0x87);
  2089  0311  3087               	movlw	135
  2090  0312  00DB               	movwf	??_read_sensor
  2091  0313  085B               	movf	??_read_sensor,w
  2092  0314  00D1               	movwf	i2c_read@subaddress
  2093  0315  303C               	movlw	60
  2094  0316  3183  231F  3182   	fcall	_i2c_read
  2095  0319  0020               	movlb	0	; select bank0
  2096  031A  0852               	movf	?_i2c_read+1,w
  2097  031B  00B7               	movwf	_magz+1
  2098  031C  0851               	movf	?_i2c_read,w
  2099  031D  00B6               	movwf	_magz
  2100  031E                     l261:
  2101  031E  0008               	return
  2102  031F                     __end_of_read_sensor:
  2103                           
  2104                           	psect	text3
  2105  031F                     __ptext3:	
  2106 ;; *************** function _i2c_read *****************
  2107 ;; Defined at:
  2108 ;;		line 101 in file "config.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  address         1    wreg     unsigned char 
  2111 ;;  subaddress      1    7[BANK0 ] unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  address         1   16[BANK0 ] unsigned char 
  2114 ;;  high            2   14[BANK0 ] int 
  2115 ;;  low             2   12[BANK0 ] int 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2    7[BANK0 ] int 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;Total ram usage:       10 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    3
  2132 ;; This function calls:
  2133 ;;		_i2c_read_byte
  2134 ;;		_i2c_restart
  2135 ;;		_i2c_start
  2136 ;;		_i2c_stop
  2137 ;;		_i2c_write_byte
  2138 ;;		_nack
  2139 ;; This function is called by:
  2140 ;;		_read_sensor
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _i2c_read
  2146  031F                     _i2c_read:
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2150                           ;i2c_read@address stored from wreg
  2151  031F  0020               	movlb	0	; select bank0
  2152  0320  00DA               	movwf	i2c_read@address
  2153  0321                     l1715:
  2154                           
  2155                           ;config.c: 102:     int low, high;;config.c: 103:     i2c_start();
  2156  0321  3184  24F2  3183   	fcall	_i2c_start
  2157  0324                     l1717:
  2158                           
  2159                           ;config.c: 104:     i2c_write_byte(address);
  2160  0324  0020               	movlb	0	; select bank0
  2161  0325  085A               	movf	i2c_read@address,w
  2162  0326  3184  24B9  3183   	fcall	_i2c_write_byte
  2163  0329                     l1719:
  2164                           
  2165                           ;config.c: 105:     if(nack())
  2166  0329  3184  24CE  3183   	fcall	_nack
  2167  032C  0020               	movlb	0	; select bank0
  2168  032D  084A               	movf	?_nack,w
  2169  032E  044B               	iorwf	?_nack+1,w
  2170  032F  1903               	btfsc	3,2
  2171  0330  2B32               	goto	u1261
  2172  0331  2B33               	goto	u1260
  2173  0332                     u1261:
  2174  0332  2B36               	goto	l1725
  2175  0333                     u1260:
  2176  0333                     l1721:
  2177                           
  2178                           ;config.c: 106:         return 0;
  2179  0333  01D1               	clrf	?_i2c_read
  2180  0334  01D2               	clrf	?_i2c_read+1
  2181  0335  2B90               	goto	l271
  2182  0336                     l1725:
  2183                           
  2184                           ;config.c: 108:     i2c_write_byte(subaddress);
  2185  0336  0851               	movf	i2c_read@subaddress,w
  2186  0337  3184  24B9  3183   	fcall	_i2c_write_byte
  2187                           
  2188                           ;config.c: 109:     if(nack())
  2189  033A  3184  24CE  3183   	fcall	_nack
  2190  033D  0020               	movlb	0	; select bank0
  2191  033E  084A               	movf	?_nack,w
  2192  033F  044B               	iorwf	?_nack+1,w
  2193  0340  1903               	btfsc	3,2
  2194  0341  2B43               	goto	u1271
  2195  0342  2B44               	goto	u1270
  2196  0343                     u1271:
  2197  0343  2B45               	goto	l1731
  2198  0344                     u1270:
  2199  0344  2B33               	goto	l1721
  2200  0345                     l1731:
  2201                           
  2202                           ;config.c: 111:     i2c_restart();
  2203  0345  3184  24E0  3183   	fcall	_i2c_restart
  2204  0348                     l1733:
  2205                           
  2206                           ;config.c: 112:     i2c_write_byte(address | 1);
  2207  0348  0020               	movlb	0	; select bank0
  2208  0349  085A               	movf	i2c_read@address,w
  2209  034A  3801               	iorlw	1
  2210  034B  3184  24B9  3183   	fcall	_i2c_write_byte
  2211  034E                     l1735:
  2212                           
  2213                           ;config.c: 113:     if(nack())
  2214  034E  3184  24CE  3183   	fcall	_nack
  2215  0351  0020               	movlb	0	; select bank0
  2216  0352  084A               	movf	?_nack,w
  2217  0353  044B               	iorwf	?_nack+1,w
  2218  0354  1903               	btfsc	3,2
  2219  0355  2B57               	goto	u1281
  2220  0356  2B58               	goto	u1280
  2221  0357                     u1281:
  2222  0357  2B59               	goto	l1741
  2223  0358                     u1280:
  2224  0358  2B33               	goto	l1721
  2225  0359                     l1741:
  2226                           
  2227                           ;config.c: 115:     low = i2c_read_byte(0);
  2228  0359  3000               	movlw	0
  2229  035A  3184  247D  3183   	fcall	_i2c_read_byte
  2230  035D  0020               	movlb	0	; select bank0
  2231  035E  084B               	movf	?_i2c_read_byte+1,w
  2232  035F  00D7               	movwf	i2c_read@low+1
  2233  0360  084A               	movf	?_i2c_read_byte,w
  2234  0361  00D6               	movwf	i2c_read@low
  2235                           
  2236                           ;config.c: 116:     high = i2c_read_byte(1);
  2237  0362  3001               	movlw	1
  2238  0363  3184  247D  3183   	fcall	_i2c_read_byte
  2239  0366  0020               	movlb	0	; select bank0
  2240  0367  084B               	movf	?_i2c_read_byte+1,w
  2241  0368  00D9               	movwf	i2c_read@high+1
  2242  0369  084A               	movf	?_i2c_read_byte,w
  2243  036A  00D8               	movwf	i2c_read@high
  2244  036B                     l1743:
  2245                           
  2246                           ;config.c: 117:     i2c_stop();
  2247  036B  3184  24E9  3183   	fcall	_i2c_stop
  2248  036E                     l1745:
  2249                           
  2250                           ;config.c: 118:     if(address != 0x3C)
  2251  036E  303C               	movlw	60
  2252  036F  0020               	movlb	0	; select bank0
  2253  0370  065A               	xorwf	i2c_read@address,w
  2254  0371  1903               	btfsc	3,2
  2255  0372  2B74               	goto	u1291
  2256  0373  2B75               	goto	u1290
  2257  0374                     u1291:
  2258  0374  2B83               	goto	l1753
  2259  0375                     u1290:
  2260  0375                     l1747:
  2261                           
  2262                           ;config.c: 119:         return((high << 8) | low);
  2263  0375  0859               	movf	i2c_read@high+1,w
  2264  0376  00D4               	movwf	??_i2c_read+1
  2265  0377  0858               	movf	i2c_read@high,w
  2266  0378  00D3               	movwf	??_i2c_read
  2267  0379  0853               	movf	??_i2c_read,w
  2268  037A  00D4               	movwf	??_i2c_read+1
  2269  037B  01D3               	clrf	??_i2c_read
  2270  037C  0856               	movf	i2c_read@low,w
  2271  037D  0453               	iorwf	??_i2c_read,w
  2272  037E  00D1               	movwf	?_i2c_read
  2273  037F  0857               	movf	i2c_read@low+1,w
  2274  0380  0454               	iorwf	??_i2c_read+1,w
  2275  0381  00D2               	movwf	?_i2c_read+1
  2276  0382  2B90               	goto	l271
  2277  0383                     l1753:
  2278                           
  2279                           ;config.c: 121:         return((low << 8) | high);
  2280  0383  0857               	movf	i2c_read@low+1,w
  2281  0384  00D4               	movwf	??_i2c_read+1
  2282  0385  0856               	movf	i2c_read@low,w
  2283  0386  00D3               	movwf	??_i2c_read
  2284  0387  0853               	movf	??_i2c_read,w
  2285  0388  00D4               	movwf	??_i2c_read+1
  2286  0389  01D3               	clrf	??_i2c_read
  2287  038A  0858               	movf	i2c_read@high,w
  2288  038B  0453               	iorwf	??_i2c_read,w
  2289  038C  00D1               	movwf	?_i2c_read
  2290  038D  0859               	movf	i2c_read@high+1,w
  2291  038E  0454               	iorwf	??_i2c_read+1,w
  2292  038F  00D2               	movwf	?_i2c_read+1
  2293  0390                     l271:
  2294  0390  0008               	return
  2295  0391                     __end_of_i2c_read:
  2296                           
  2297                           	psect	text4
  2298  04E0                     __ptext4:	
  2299 ;; *************** function _i2c_restart *****************
  2300 ;; Defined at:
  2301 ;;		line 152 in file "config.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		None
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_i2c_read
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _i2c_restart
  2331  04E0                     _i2c_restart:
  2332  04E0                     l1681:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _i2c_restart: []
  2335                           
  2336                           
  2337                           ;config.c: 153:     SSPCON2bits.RSEN = 1;
  2338  04E0  0024               	movlb	4	; select bank4
  2339  04E1  1496               	bsf	22,1	;volatile
  2340  04E2                     l297:	
  2341                           ;config.c: 154:     while(SSPCON2bits.RSEN);
  2342                           
  2343  04E2  1896               	btfsc	22,1	;volatile
  2344  04E3  2CE5               	goto	u1201
  2345  04E4  2CE6               	goto	u1200
  2346  04E5                     u1201:
  2347  04E5  2CE2               	goto	l297
  2348  04E6                     u1200:
  2349  04E6                     l299:
  2350                           
  2351                           ;config.c: 155:     PIR1bits.SSP1IF = 0;
  2352  04E6  0020               	movlb	0	; select bank0
  2353  04E7  1190               	bcf	16,3	;volatile
  2354  04E8                     l300:
  2355  04E8  0008               	return
  2356  04E9                     __end_of_i2c_restart:
  2357                           
  2358                           	psect	text5
  2359  047D                     __ptext5:	
  2360 ;; *************** function _i2c_read_byte *****************
  2361 ;; Defined at:
  2362 ;;		line 124 in file "config.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  ack             1    wreg     unsigned char 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  ack             1    4[BANK0 ] unsigned char 
  2367 ;;  temp            2    5[BANK0 ] int 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  2    0[BANK0 ] int 
  2370 ;; Registers used:
  2371 ;;		wreg, status,0
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2380 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;Total ram usage:        7 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_i2c_read
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _i2c_read_byte
  2393  047D                     _i2c_read_byte:
  2394                           
  2395                           ;incstack = 0
  2396                           ; Regs used in _i2c_read_byte: [wreg+status,0]
  2397                           ;i2c_read_byte@ack stored from wreg
  2398  047D  0020               	movlb	0	; select bank0
  2399  047E  00CE               	movwf	i2c_read_byte@ack
  2400  047F                     l1683:
  2401                           
  2402                           ;config.c: 125:     int temp;;config.c: 126:     SSP1CON2bits.RCEN = 1;
  2403  047F  0024               	movlb	4	; select bank4
  2404  0480  1596               	bsf	22,3	;volatile
  2405  0481                     l278:	
  2406                           ;config.c: 127:     while(RCEN);
  2407                           
  2408  0481  1996               	btfsc	22,3	;volatile
  2409  0482  2C84               	goto	u1211
  2410  0483  2C85               	goto	u1210
  2411  0484                     u1211:
  2412  0484  2C81               	goto	l278
  2413  0485                     u1210:
  2414  0485                     l1685:
  2415                           
  2416                           ;config.c: 128:     temp = SSP1BUF;
  2417  0485  0811               	movf	17,w	;volatile
  2418  0486  0020               	movlb	0	; select bank0
  2419  0487  00CC               	movwf	??_i2c_read_byte
  2420  0488  01CD               	clrf	??_i2c_read_byte+1
  2421  0489  084C               	movf	??_i2c_read_byte,w
  2422  048A  00CF               	movwf	i2c_read_byte@temp
  2423  048B  084D               	movf	??_i2c_read_byte+1,w
  2424  048C  00D0               	movwf	i2c_read_byte@temp+1
  2425  048D                     l1687:
  2426                           
  2427                           ;config.c: 129:     PIR1bits.SSP1IF = 0;
  2428  048D  1190               	bcf	16,3	;volatile
  2429  048E                     l1689:
  2430                           
  2431                           ;config.c: 131:     SSP1CON2bits.ACKDT = ack;
  2432  048E  0C4E               	rrf	i2c_read_byte@ack,w
  2433  048F  0024               	movlb	4	; select bank4
  2434  0490  1C03               	skipc
  2435  0491  1296               	bcf	22,5	;volatile
  2436  0492  1803               	skipnc
  2437  0493  1696               	bsf	22,5	;volatile
  2438  0494                     l1691:
  2439                           
  2440                           ;config.c: 132:     SSP1CON2bits.ACKEN = 1;
  2441  0494  1616               	bsf	22,4	;volatile
  2442  0495                     l281:	
  2443                           ;config.c: 133:     while(SSP1CON2bits.ACKEN);
  2444                           
  2445  0495  1A16               	btfsc	22,4	;volatile
  2446  0496  2C98               	goto	u1221
  2447  0497  2C99               	goto	u1220
  2448  0498                     u1221:
  2449  0498  2C95               	goto	l281
  2450  0499                     u1220:
  2451  0499                     l283:
  2452                           
  2453                           ;config.c: 134:     PIR1bits.SSP1IF = 0;
  2454  0499  0020               	movlb	0	; select bank0
  2455  049A  1190               	bcf	16,3	;volatile
  2456  049B                     l1693:
  2457                           
  2458                           ;config.c: 135:     return temp;
  2459  049B  0850               	movf	i2c_read_byte@temp+1,w
  2460  049C  00CB               	movwf	?_i2c_read_byte+1
  2461  049D  084F               	movf	i2c_read_byte@temp,w
  2462  049E  00CA               	movwf	?_i2c_read_byte
  2463  049F                     l284:
  2464  049F  0008               	return
  2465  04A0                     __end_of_i2c_read_byte:
  2466                           
  2467                           	psect	text6
  2468  0391                     __ptext6:	
  2469 ;; *************** function _pic_init *****************
  2470 ;; Defined at:
  2471 ;;		line 5 in file "config.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _pic_init
  2501  0391                     _pic_init:
  2502  0391                     l1757:	
  2503                           ;incstack = 0
  2504                           ; Regs used in _pic_init: [wreg+status,2+status,0]
  2505                           
  2506                           
  2507                           ;config.c: 8:     OSCCONbits.IRCF = 0b1110;
  2508  0391  0021               	movlb	1	; select bank1
  2509  0392  0819               	movf	25,w	;volatile
  2510  0393  3987               	andlw	-121
  2511  0394  3870               	iorlw	112
  2512  0395  0099               	movwf	25	;volatile
  2513                           
  2514                           ;config.c: 9:     OSCCONbits.SCS = 0;
  2515  0396  30FC               	movlw	-4
  2516  0397  0599               	andwf	25,f	;volatile
  2517  0398                     l252:	
  2518                           ;config.c: 10:     while(!OSCSTATbits.PLLR);
  2519                           
  2520  0398  1F1A               	btfss	26,6	;volatile
  2521  0399  2B9B               	goto	u1301
  2522  039A  2B9C               	goto	u1300
  2523  039B                     u1301:
  2524  039B  2B98               	goto	l252
  2525  039C                     u1300:
  2526  039C                     l254:
  2527                           
  2528                           ;config.c: 12:     INTCONbits.GIE = 1;
  2529  039C  178B               	bsf	11,7	;volatile
  2530                           
  2531                           ;config.c: 13:     INTCONbits.IOCIE = 1;
  2532  039D  158B               	bsf	11,3	;volatile
  2533                           
  2534                           ;config.c: 14:     INTCONbits.PEIE = 1;
  2535  039E  170B               	bsf	11,6	;volatile
  2536                           
  2537                           ;config.c: 15:     PIE1bits.TMR2IE = 1;
  2538  039F  1490               	bsf	16,1	;volatile
  2539                           
  2540                           ;config.c: 16:     INTCONbits.TMR0IE = 1;
  2541  03A0  168B               	bsf	11,5	;volatile
  2542  03A1                     l1759:
  2543                           
  2544                           ;config.c: 17:     IOCCP = 0b01111000;
  2545  03A1  3078               	movlw	120
  2546  03A2  0027               	movlb	7	; select bank7
  2547  03A3  0097               	movwf	23	;volatile
  2548  03A4                     l1761:
  2549                           
  2550                           ;config.c: 21:     OPTION_REGbits.TMR0CS = 0;
  2551  03A4  0021               	movlb	1	; select bank1
  2552  03A5  1295               	bcf	21,5	;volatile
  2553  03A6                     l1763:
  2554                           
  2555                           ;config.c: 22:     OPTION_REGbits.PSA = 0;
  2556  03A6  1195               	bcf	21,3	;volatile
  2557  03A7                     l1765:
  2558                           
  2559                           ;config.c: 23:     OPTION_REGbits.PS = 2;
  2560  03A7  0815               	movf	21,w	;volatile
  2561  03A8  39F8               	andlw	-8
  2562  03A9  3802               	iorlw	2
  2563  03AA  0095               	movwf	21	;volatile
  2564  03AB                     l1767:
  2565                           
  2566                           ;config.c: 25:     T1CONbits.TMR1CS = 0;
  2567  03AB  303F               	movlw	-193
  2568  03AC  0020               	movlb	0	; select bank0
  2569  03AD  0598               	andwf	24,f	;volatile
  2570  03AE                     l1769:
  2571                           
  2572                           ;config.c: 26:     T1CONbits.T1CKPS = 3;
  2573  03AE  3030               	movlw	48
  2574  03AF  0498               	iorwf	24,f	;volatile
  2575  03B0                     l1771:
  2576                           
  2577                           ;config.c: 28:     T3CONbits.TMR3CS = 0;
  2578  03B0  303F               	movlw	-193
  2579  03B1  0029               	movlb	9	; select bank9
  2580  03B2  0595               	andwf	21,f	;volatile
  2581  03B3                     l1773:
  2582                           
  2583                           ;config.c: 29:     T3CONbits.T3CKPS = 3;
  2584  03B3  3030               	movlw	48
  2585  03B4  0495               	iorwf	21,f	;volatile
  2586  03B5                     l1775:
  2587                           
  2588                           ;config.c: 31:     T5CONbits.TMR5CS = 0;
  2589  03B5  303F               	movlw	-193
  2590  03B6  059C               	andwf	28,f	;volatile
  2591  03B7                     l1777:
  2592                           
  2593                           ;config.c: 32:     T5CONbits.T5CKPS = 3;
  2594  03B7  3030               	movlw	48
  2595  03B8  049C               	iorwf	28,f	;volatile
  2596  03B9                     l1779:
  2597                           
  2598                           ;config.c: 34:     T2CLKCON = 0;
  2599  03B9  0020               	movlb	0	; select bank0
  2600  03BA  019E               	clrf	30	;volatile
  2601  03BB                     l1781:
  2602                           
  2603                           ;config.c: 35:     T2CONbits.CKPS = 3;
  2604  03BB  081C               	movf	28,w	;volatile
  2605  03BC  398F               	andlw	-113
  2606  03BD  3830               	iorlw	48
  2607  03BE  009C               	movwf	28	;volatile
  2608  03BF                     l1783:
  2609                           
  2610                           ;config.c: 36:     T2CONbits.OUTPS = 0;
  2611  03BF  30F0               	movlw	-16
  2612  03C0  059C               	andwf	28,f	;volatile
  2613  03C1                     l1785:
  2614                           
  2615                           ;config.c: 37:     T2HLTbits.PSYNC = 1;
  2616  03C1  179D               	bsf	29,7	;volatile
  2617  03C2                     l1787:
  2618                           
  2619                           ;config.c: 38:     T2RST = 15;
  2620  03C2  300F               	movlw	15
  2621  03C3  009F               	movwf	31	;volatile
  2622  03C4                     l1789:
  2623                           
  2624                           ;config.c: 40:     SSP1CONbits.SSPEN = 1;
  2625  03C4  0024               	movlb	4	; select bank4
  2626  03C5  1695               	bsf	21,5	;volatile
  2627  03C6                     l1791:
  2628                           
  2629                           ;config.c: 41:     SSP1CONbits.SSPM = 8;
  2630  03C6  0815               	movf	21,w	;volatile
  2631  03C7  39F0               	andlw	-16
  2632  03C8  3808               	iorlw	8
  2633  03C9  0095               	movwf	21	;volatile
  2634  03CA                     l1793:
  2635                           
  2636                           ;config.c: 43:     SSP1ADD = 19;
  2637  03CA  3013               	movlw	19
  2638  03CB  0092               	movwf	18	;volatile
  2639  03CC                     l1795:
  2640                           
  2641                           ;config.c: 44:     RB4PPS = 17;
  2642  03CC  3011               	movlw	17
  2643  03CD  003D               	movlb	29	; select bank29
  2644  03CE  009C               	movwf	28	;volatile
  2645  03CF                     l1797:
  2646                           
  2647                           ;config.c: 45:     RB6PPS = 16;
  2648  03CF  3010               	movlw	16
  2649  03D0  009E               	movwf	30	;volatile
  2650  03D1                     l1799:
  2651                           
  2652                           ;config.c: 46:     SSPDATPPS = 12;
  2653  03D1  300C               	movlw	12
  2654  03D2  003C               	movlb	28	; select bank28
  2655  03D3  00A1               	movwf	33	;volatile
  2656  03D4                     l1801:
  2657                           
  2658                           ;config.c: 47:     SSPCLKPPS = 14;
  2659  03D4  300E               	movlw	14
  2660  03D5  00A0               	movwf	32	;volatile
  2661  03D6                     l1803:
  2662                           
  2663                           ;config.c: 49:     ANSELA = 0;
  2664  03D6  0023               	movlb	3	; select bank3
  2665  03D7  018C               	clrf	12	;volatile
  2666                           
  2667                           ;config.c: 50:     ANSELB = 0b00100000;
  2668  03D8  3020               	movlw	32
  2669  03D9  008D               	movwf	13	;volatile
  2670  03DA                     l1805:
  2671                           
  2672                           ;config.c: 51:     ANSELC = 0;
  2673  03DA  018E               	clrf	14	;volatile
  2674  03DB                     l1807:
  2675                           
  2676                           ;config.c: 52:     TRISA = 0;
  2677  03DB  0021               	movlb	1	; select bank1
  2678  03DC  018C               	clrf	12	;volatile
  2679                           
  2680                           ;config.c: 53:     TRISB = 0b01110000;
  2681  03DD  3070               	movlw	112
  2682  03DE  008D               	movwf	13	;volatile
  2683  03DF                     l1809:
  2684                           
  2685                           ;config.c: 54:     ODCONBbits.ODB4 = 1;
  2686  03DF  0025               	movlb	5	; select bank5
  2687  03E0  160D               	bsf	13,4	;volatile
  2688  03E1                     l1811:
  2689                           
  2690                           ;config.c: 55:     ODCONBbits.ODB6 = 1;
  2691  03E1  170D               	bsf	13,6	;volatile
  2692                           
  2693                           ;config.c: 56:     TRISC = 0b01111000;
  2694  03E2  3078               	movlw	120
  2695  03E3  0021               	movlb	1	; select bank1
  2696  03E4  008E               	movwf	14	;volatile
  2697  03E5                     l1813:
  2698                           
  2699                           ;config.c: 59:     ADCON0bits.ADON = 1;
  2700  03E5  141D               	bsf	29,0	;volatile
  2701  03E6                     l1815:
  2702                           
  2703                           ;config.c: 60:     ADCON0bits.CHS = 11;
  2704  03E6  081D               	movf	29,w	;volatile
  2705  03E7  3983               	andlw	-125
  2706  03E8  382C               	iorlw	44
  2707  03E9  009D               	movwf	29	;volatile
  2708  03EA                     l1817:
  2709                           
  2710                           ;config.c: 61:     ADCON1bits.ADPREF = 0;
  2711  03EA  30FC               	movlw	-4
  2712  03EB  059E               	andwf	30,f	;volatile
  2713  03EC                     l1819:
  2714                           
  2715                           ;config.c: 62:     ADCON1bits.ADCS = 2;
  2716  03EC  081E               	movf	30,w	;volatile
  2717  03ED  398F               	andlw	-113
  2718  03EE  3820               	iorlw	32
  2719  03EF  009E               	movwf	30	;volatile
  2720  03F0                     l1821:
  2721                           
  2722                           ;config.c: 63:     ADCON1bits.ADFM = 1;
  2723  03F0  179E               	bsf	30,7	;volatile
  2724  03F1                     l255:
  2725  03F1  0008               	return
  2726  03F2                     __end_of_pic_init:
  2727                           
  2728                           	psect	text7
  2729  03F2                     __ptext7:	
  2730 ;; *************** function _gyro_config *****************
  2731 ;; Defined at:
  2732 ;;		line 65 in file "config.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;Total ram usage:        2 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    4
  2753 ;; This function calls:
  2754 ;;		_i2c_write
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _gyro_config
  2762  03F2                     _gyro_config:
  2763  03F2                     l1823:	
  2764                           ;incstack = 0
  2765                           ; Regs used in _gyro_config: [wreg+status,2+status,0+pclath+cstack]
  2766                           
  2767                           
  2768                           ;config.c: 66:     i2c_write(0xD2, 0x20, 0x0F);
  2769  03F2  3020               	movlw	32
  2770  03F3  0020               	movlb	0	; select bank0
  2771  03F4  00CF               	movwf	??_gyro_config
  2772  03F5  084F               	movf	??_gyro_config,w
  2773  03F6  00CC               	movwf	i2c_write@subaddress
  2774  03F7  300F               	movlw	15
  2775  03F8  00D0               	movwf	??_gyro_config+1
  2776  03F9  0850               	movf	??_gyro_config+1,w
  2777  03FA  00CD               	movwf	i2c_write@data
  2778  03FB  30D2               	movlw	210
  2779  03FC  3184  2446  3183   	fcall	_i2c_write
  2780                           
  2781                           ;config.c: 67:     i2c_write(0xD2, 0x23, 0x90);
  2782  03FF  3023               	movlw	35
  2783  0400  0020               	movlb	0	; select bank0
  2784  0401  00CF               	movwf	??_gyro_config
  2785  0402  084F               	movf	??_gyro_config,w
  2786  0403  00CC               	movwf	i2c_write@subaddress
  2787  0404  3090               	movlw	144
  2788  0405  00D0               	movwf	??_gyro_config+1
  2789  0406  0850               	movf	??_gyro_config+1,w
  2790  0407  00CD               	movwf	i2c_write@data
  2791  0408  30D2               	movlw	210
  2792  0409  3184  2446  3183   	fcall	_i2c_write
  2793                           
  2794                           ;config.c: 68:     i2c_write(0x32, 0x20, 0x57);
  2795  040C  3020               	movlw	32
  2796  040D  0020               	movlb	0	; select bank0
  2797  040E  00CF               	movwf	??_gyro_config
  2798  040F  084F               	movf	??_gyro_config,w
  2799  0410  00CC               	movwf	i2c_write@subaddress
  2800  0411  3057               	movlw	87
  2801  0412  00D0               	movwf	??_gyro_config+1
  2802  0413  0850               	movf	??_gyro_config+1,w
  2803  0414  00CD               	movwf	i2c_write@data
  2804  0415  3032               	movlw	50
  2805  0416  3184  2446  3183   	fcall	_i2c_write
  2806                           
  2807                           ;config.c: 69:     i2c_write(0x32, 0x23, 0x90);
  2808  0419  3023               	movlw	35
  2809  041A  0020               	movlb	0	; select bank0
  2810  041B  00CF               	movwf	??_gyro_config
  2811  041C  084F               	movf	??_gyro_config,w
  2812  041D  00CC               	movwf	i2c_write@subaddress
  2813  041E  3090               	movlw	144
  2814  041F  00D0               	movwf	??_gyro_config+1
  2815  0420  0850               	movf	??_gyro_config+1,w
  2816  0421  00CD               	movwf	i2c_write@data
  2817  0422  3032               	movlw	50
  2818  0423  3184  2446  3183   	fcall	_i2c_write
  2819                           
  2820                           ;config.c: 70:     i2c_write(0x3C, 0, 0x18);
  2821  0426  0020               	movlb	0	; select bank0
  2822  0427  01CC               	clrf	i2c_write@subaddress
  2823  0428  3018               	movlw	24
  2824  0429  00CF               	movwf	??_gyro_config
  2825  042A  084F               	movf	??_gyro_config,w
  2826  042B  00CD               	movwf	i2c_write@data
  2827  042C  303C               	movlw	60
  2828  042D  3184  2446  3183   	fcall	_i2c_write
  2829                           
  2830                           ;config.c: 71:     i2c_write(0x3C, 1, 0x80);
  2831  0430  0020               	movlb	0	; select bank0
  2832  0431  01CC               	clrf	i2c_write@subaddress
  2833  0432  0ACC               	incf	i2c_write@subaddress,f
  2834  0433  3080               	movlw	128
  2835  0434  00CF               	movwf	??_gyro_config
  2836  0435  084F               	movf	??_gyro_config,w
  2837  0436  00CD               	movwf	i2c_write@data
  2838  0437  303C               	movlw	60
  2839  0438  3184  2446  3183   	fcall	_i2c_write
  2840                           
  2841                           ;config.c: 72:     i2c_write(0x3C, 2, 0);
  2842  043B  3002               	movlw	2
  2843  043C  0020               	movlb	0	; select bank0
  2844  043D  00CF               	movwf	??_gyro_config
  2845  043E  084F               	movf	??_gyro_config,w
  2846  043F  00CC               	movwf	i2c_write@subaddress
  2847  0440  01CD               	clrf	i2c_write@data
  2848  0441  303C               	movlw	60
  2849  0442  3184  2446  3183   	fcall	_i2c_write
  2850  0445                     l258:
  2851  0445  0008               	return
  2852  0446                     __end_of_gyro_config:
  2853                           
  2854                           	psect	text8
  2855  0446                     __ptext8:	
  2856 ;; *************** function _i2c_write *****************
  2857 ;; Defined at:
  2858 ;;		line 87 in file "config.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  address         1    wreg     unsigned char 
  2861 ;;  subaddress      1    2[BANK0 ] unsigned char 
  2862 ;;  data            1    3[BANK0 ] unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  address         1    4[BANK0 ] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, pclath, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;Total ram usage:        3 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    3
  2881 ;; This function calls:
  2882 ;;		_i2c_start
  2883 ;;		_i2c_stop
  2884 ;;		_i2c_write_byte
  2885 ;;		_nack
  2886 ;; This function is called by:
  2887 ;;		_gyro_config
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _i2c_write
  2893  0446                     _i2c_write:
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2897                           ;i2c_write@address stored from wreg
  2898  0446  0020               	movlb	0	; select bank0
  2899  0447  00CE               	movwf	i2c_write@address
  2900  0448                     l1697:
  2901                           
  2902                           ;config.c: 88:     i2c_start();
  2903  0448  3184  24F2  3184   	fcall	_i2c_start
  2904  044B                     l1699:
  2905                           
  2906                           ;config.c: 89:     i2c_write_byte(address);
  2907  044B  0020               	movlb	0	; select bank0
  2908  044C  084E               	movf	i2c_write@address,w
  2909  044D  3184  24B9  3184   	fcall	_i2c_write_byte
  2910  0450                     l1701:
  2911                           
  2912                           ;config.c: 90:     if(nack())
  2913  0450  3184  24CE  3184   	fcall	_nack
  2914  0453  0020               	movlb	0	; select bank0
  2915  0454  084A               	movf	?_nack,w
  2916  0455  044B               	iorwf	?_nack+1,w
  2917  0456  1903               	btfsc	3,2
  2918  0457  2C59               	goto	u1231
  2919  0458  2C5A               	goto	u1230
  2920  0459                     u1231:
  2921  0459  2C5B               	goto	l1705
  2922  045A                     u1230:
  2923  045A  2C7C               	goto	l265
  2924  045B                     l1705:
  2925                           
  2926                           ;config.c: 92:     i2c_write_byte(subaddress);
  2927  045B  084C               	movf	i2c_write@subaddress,w
  2928  045C  3184  24B9  3184   	fcall	_i2c_write_byte
  2929                           
  2930                           ;config.c: 93:     if(nack())
  2931  045F  3184  24CE  3184   	fcall	_nack
  2932  0462  0020               	movlb	0	; select bank0
  2933  0463  084A               	movf	?_nack,w
  2934  0464  044B               	iorwf	?_nack+1,w
  2935  0465  1903               	btfsc	3,2
  2936  0466  2C68               	goto	u1241
  2937  0467  2C69               	goto	u1240
  2938  0468                     u1241:
  2939  0468  2C6A               	goto	l1709
  2940  0469                     u1240:
  2941  0469  2C7C               	goto	l265
  2942  046A                     l1709:
  2943                           
  2944                           ;config.c: 95:     i2c_write_byte(data);
  2945  046A  084D               	movf	i2c_write@data,w
  2946  046B  3184  24B9  3184   	fcall	_i2c_write_byte
  2947                           
  2948                           ;config.c: 96:     if(nack())
  2949  046E  3184  24CE  3184   	fcall	_nack
  2950  0471  0020               	movlb	0	; select bank0
  2951  0472  084A               	movf	?_nack,w
  2952  0473  044B               	iorwf	?_nack+1,w
  2953  0474  1903               	btfsc	3,2
  2954  0475  2C77               	goto	u1251
  2955  0476  2C78               	goto	u1250
  2956  0477                     u1251:
  2957  0477  2C79               	goto	l1713
  2958  0478                     u1250:
  2959  0478  2C7C               	goto	l265
  2960  0479                     l1713:
  2961                           
  2962                           ;config.c: 98:     i2c_stop();
  2963  0479  3184  24E9  3184   	fcall	_i2c_stop
  2964  047C                     l265:
  2965  047C  0008               	return
  2966  047D                     __end_of_i2c_write:
  2967                           
  2968                           	psect	text9
  2969  04CE                     __ptext9:	
  2970 ;; *************** function _nack *****************
  2971 ;; Defined at:
  2972 ;;		line 138 in file "config.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2    0[BANK0 ] int 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, pclath, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;Total ram usage:        2 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    2
  2993 ;; This function calls:
  2994 ;;		_i2c_stop
  2995 ;; This function is called by:
  2996 ;;		_i2c_write
  2997 ;;		_i2c_read
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _nack
  3003  04CE                     _nack:
  3004  04CE                     l1669:	
  3005                           ;incstack = 0
  3006                           ; Regs used in _nack: [wreg+status,2+status,0+pclath+cstack]
  3007                           
  3008                           
  3009                           ;config.c: 139:     if(SSP1CON2bits.ACKSTAT){
  3010  04CE  0024               	movlb	4	; select bank4
  3011  04CF  1F16               	btfss	22,6	;volatile
  3012  04D0  2CD2               	goto	u1191
  3013  04D1  2CD3               	goto	u1190
  3014  04D2                     u1191:
  3015  04D2  2CDC               	goto	l1677
  3016  04D3                     u1190:
  3017  04D3                     l1671:
  3018                           
  3019                           ;config.c: 140:         i2c_stop();
  3020  04D3  3184  24E9  3184   	fcall	_i2c_stop
  3021  04D6                     l1673:
  3022                           
  3023                           ;config.c: 141:         return 1;
  3024  04D6  3001               	movlw	1
  3025  04D7  0020               	movlb	0	; select bank0
  3026  04D8  00CA               	movwf	?_nack
  3027  04D9  3000               	movlw	0
  3028  04DA  00CB               	movwf	?_nack+1
  3029  04DB  2CDF               	goto	l288
  3030  04DC                     l1677:
  3031                           
  3032                           ;config.c: 143:     return 0;
  3033  04DC  0020               	movlb	0	; select bank0
  3034  04DD  01CA               	clrf	?_nack
  3035  04DE  01CB               	clrf	?_nack+1
  3036  04DF                     l288:
  3037  04DF  0008               	return
  3038  04E0                     __end_of_nack:
  3039                           
  3040                           	psect	text10
  3041  04E9                     __ptext10:	
  3042 ;; *************** function _i2c_stop *****************
  3043 ;; Defined at:
  3044 ;;		line 167 in file "config.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		None
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;Total ram usage:        0 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_i2c_write
  3069 ;;		_i2c_read
  3070 ;;		_nack
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _i2c_stop
  3076  04E9                     _i2c_stop:
  3077  04E9                     l1659:	
  3078                           ;incstack = 0
  3079                           ; Regs used in _i2c_stop: []
  3080                           
  3081                           
  3082                           ;config.c: 168:     SSP1CON2bits.PEN = 1;
  3083  04E9  0024               	movlb	4	; select bank4
  3084  04EA  1516               	bsf	22,2	;volatile
  3085  04EB                     l310:	
  3086                           ;config.c: 169:     while(SSP1CON2bits.PEN);
  3087                           
  3088  04EB  1916               	btfsc	22,2	;volatile
  3089  04EC  2CEE               	goto	u1151
  3090  04ED  2CEF               	goto	u1150
  3091  04EE                     u1151:
  3092  04EE  2CEB               	goto	l310
  3093  04EF                     u1150:
  3094  04EF                     l312:
  3095                           
  3096                           ;config.c: 170:     PIR1bits.SSP1IF = 0;
  3097  04EF  0020               	movlb	0	; select bank0
  3098  04F0  1190               	bcf	16,3	;volatile
  3099  04F1                     l313:
  3100  04F1  0008               	return
  3101  04F2                     __end_of_i2c_stop:
  3102                           
  3103                           	psect	text11
  3104  04B9                     __ptext11:	
  3105 ;; *************** function _i2c_write_byte *****************
  3106 ;; Defined at:
  3107 ;;		line 158 in file "config.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  address         1    wreg     unsigned char 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  address         1    0[BANK0 ] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;Total ram usage:        1 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_i2c_write
  3132 ;;		_i2c_read
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _i2c_write_byte
  3138  04B9                     _i2c_write_byte:
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _i2c_write_byte: [wreg]
  3142                           ;i2c_write_byte@address stored from wreg
  3143  04B9  0020               	movlb	0	; select bank0
  3144  04BA  00CA               	movwf	i2c_write_byte@address
  3145  04BB                     l1663:
  3146                           
  3147                           ;config.c: 159:     SSP1CON2bits.RCEN = 0;
  3148  04BB  0024               	movlb	4	; select bank4
  3149  04BC  1196               	bcf	22,3	;volatile
  3150  04BD                     l1665:
  3151                           
  3152                           ;config.c: 160:     SSP1BUF = address;
  3153  04BD  0020               	movlb	0	; select bank0
  3154  04BE  084A               	movf	i2c_write_byte@address,w
  3155  04BF  0024               	movlb	4	; select bank4
  3156  04C0  0091               	movwf	17	;volatile
  3157  04C1                     l303:	
  3158                           ;config.c: 161:     while(SSP1STATbits.BF);
  3159                           
  3160  04C1  1814               	btfsc	20,0	;volatile
  3161  04C2  2CC4               	goto	u1171
  3162  04C3  2CC5               	goto	u1170
  3163  04C4                     u1171:
  3164  04C4  2CC1               	goto	l303
  3165  04C5                     u1170:
  3166  04C5                     l305:
  3167                           
  3168                           ;config.c: 162:     PIR1bits.SSP1IF = 0;
  3169  04C5  0020               	movlb	0	; select bank0
  3170  04C6  1190               	bcf	16,3	;volatile
  3171                           
  3172                           ;config.c: 163:     if(SSP1CON1bits.WCOL)
  3173  04C7  0024               	movlb	4	; select bank4
  3174  04C8  1F95               	btfss	21,7	;volatile
  3175  04C9  2CCB               	goto	u1181
  3176  04CA  2CCC               	goto	u1180
  3177  04CB                     u1181:
  3178  04CB  2CCD               	goto	l307
  3179  04CC                     u1180:
  3180  04CC                     l1667:
  3181                           
  3182                           ;config.c: 164:         SSP1CON1bits.WCOL = 0;
  3183  04CC  1395               	bcf	21,7	;volatile
  3184  04CD                     l307:
  3185  04CD  0008               	return
  3186  04CE                     __end_of_i2c_write_byte:
  3187                           
  3188                           	psect	text12
  3189  04F2                     __ptext12:	
  3190 ;; *************** function _i2c_start *****************
  3191 ;; Defined at:
  3192 ;;		line 146 in file "config.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		None
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    1
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_i2c_write
  3217 ;;		_i2c_read
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _i2c_start
  3223  04F2                     _i2c_start:
  3224  04F2                     l1661:	
  3225                           ;incstack = 0
  3226                           ; Regs used in _i2c_start: []
  3227                           
  3228                           
  3229                           ;config.c: 147:     SSP1CON2bits.SEN = 1;
  3230  04F2  0024               	movlb	4	; select bank4
  3231  04F3  1416               	bsf	22,0	;volatile
  3232  04F4                     l291:	
  3233                           ;config.c: 148:     while((SSP1CON2bits.SEN));
  3234                           
  3235  04F4  1816               	btfsc	22,0	;volatile
  3236  04F5  2CF7               	goto	u1161
  3237  04F6  2CF8               	goto	u1160
  3238  04F7                     u1161:
  3239  04F7  2CF4               	goto	l291
  3240  04F8                     u1160:
  3241  04F8                     l293:
  3242                           
  3243                           ;config.c: 149:     PIR1bits.SSP1IF = 0;
  3244  04F8  0020               	movlb	0	; select bank0
  3245  04F9  1190               	bcf	16,3	;volatile
  3246  04FA                     l294:
  3247  04FA  0008               	return
  3248  04FB                     __end_of_i2c_start:
  3249                           
  3250                           	psect	text13
  3251  0508                     __ptext13:	
  3252 ;; *************** function _calculate_pid *****************
  3253 ;; Defined at:
  3254 ;;		line 178 in file "config.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		None
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    1
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_main
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           
  3283                           ;psect for function _calculate_pid
  3284  0508                     _calculate_pid:
  3285  0508                     l319:	
  3286                           ;incstack = 0
  3287                           ; Regs used in _calculate_pid: []
  3288                           
  3289  0508  0008               	return
  3290  0509                     __end_of_calculate_pid:
  3291                           
  3292                           	psect	text14
  3293  04A0                     __ptext14:	
  3294 ;; *************** function _battery_compensation *****************
  3295 ;; Defined at:
  3296 ;;		line 186 in file "config.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function _battery_compensation
  3326  04A0                     _battery_compensation:
  3327  04A0                     l1829:	
  3328                           ;incstack = 0
  3329                           ; Regs used in _battery_compensation: [wreg]
  3330                           
  3331                           
  3332                           ;config.c: 188:     ADCON0bits.GO = 1;
  3333  04A0  0021               	movlb	1	; select bank1
  3334  04A1  149D               	bsf	29,1	;volatile
  3335  04A2                     l325:	
  3336                           ;config.c: 189:     while(ADCON0bits.GO);
  3337                           
  3338  04A2  189D               	btfsc	29,1	;volatile
  3339  04A3  2CA5               	goto	u1311
  3340  04A4  2CA6               	goto	u1310
  3341  04A5                     u1311:
  3342  04A5  2CA2               	goto	l325
  3343  04A6                     u1310:
  3344  04A6                     l327:
  3345                           
  3346                           ;config.c: 190:     PIR1bits.ADIF = 0;
  3347  04A6  0020               	movlb	0	; select bank0
  3348  04A7  1310               	bcf	16,6	;volatile
  3349  04A8                     l1831:
  3350                           
  3351                           ;config.c: 195:     voltage = (unsigned)((ADRESH << 8) | ADRESL);
  3352  04A8  0021               	movlb	1	; select bank1
  3353  04A9  081C               	movf	28,w	;volatile
  3354  04AA  00F1               	movwf	_voltage+1
  3355  04AB  081B               	movf	27,w	;volatile
  3356  04AC  00F0               	movwf	_voltage
  3357                           
  3358                           ;config.c: 197:     if(voltage < 810)
  3359  04AD  3003               	movlw	3
  3360  04AE  0271               	subwf	_voltage+1,w
  3361  04AF  302A               	movlw	42
  3362  04B0  1903               	skipnz
  3363  04B1  0270               	subwf	_voltage,w
  3364  04B2  1803               	skipnc
  3365  04B3  2CB5               	goto	u1321
  3366  04B4  2CB6               	goto	u1320
  3367  04B5                     u1321:
  3368  04B5  2CB8               	goto	l329
  3369  04B6                     u1320:
  3370  04B6                     l1833:
  3371                           
  3372                           ;config.c: 198:         LATCbits.LATC7 = 1;
  3373  04B6  0022               	movlb	2	; select bank2
  3374  04B7  178E               	bsf	14,7	;volatile
  3375  04B8                     l329:
  3376  04B8  0008               	return
  3377  04B9                     __end_of_battery_compensation:
  3378                           
  3379                           	psect	text15
  3380  0509                     __ptext15:	
  3381 ;; *************** function _balance_drone *****************
  3382 ;; Defined at:
  3383 ;;		line 182 in file "config.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		None
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _balance_drone
  3413  0509                     _balance_drone:
  3414  0509                     l322:	
  3415                           ;incstack = 0
  3416                           ; Regs used in _balance_drone: []
  3417                           
  3418  0509  0008               	return
  3419  050A                     __end_of_balance_drone:
  3420                           
  3421                           	psect	intentry
  3422  0004                     __pintentry:	
  3423 ;; *************** function _remote *****************
  3424 ;; Defined at:
  3425 ;;		line 203 in file "config.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;Total ram usage:        6 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		Interrupt level 1
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452  0004                     _remote:
  3453                           
  3454                           ;incstack = 0
  3455  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3456                           
  3457                           ; Regs used in _remote: [wreg+status,2+status,0]
  3458  0005  3180               	pagesel	$
  3459  0006                     i1l1537:
  3460                           
  3461                           ;config.c: 205:     if(INTCONbits.T0IF)
  3462  0006  1D0B               	btfss	11,2	;volatile
  3463  0007  2809               	goto	u100_21
  3464  0008  280A               	goto	u100_20
  3465  0009                     u100_21:
  3466  0009  2810               	goto	i1l1543
  3467  000A                     u100_20:
  3468  000A                     i1l1539:
  3469                           
  3470                           ;config.c: 206:     {;config.c: 207:         TMR0H++;
  3471  000A  3001               	movlw	1
  3472  000B  0020               	movlb	0	; select bank0
  3473  000C  07AC               	addwf	_TMR0H,f
  3474  000D  3000               	movlw	0
  3475  000E  3DAD               	addwfc	_TMR0H+1,f
  3476  000F                     i1l1541:
  3477                           
  3478                           ;config.c: 208:         INTCONbits.T0IF = 0;
  3479  000F  110B               	bcf	11,2	;volatile
  3480  0010                     i1l1543:
  3481                           
  3482                           ;config.c: 211:     if(PIR1bits.TMR2IF){
  3483  0010  0020               	movlb	0	; select bank0
  3484  0011  1C90               	btfss	16,1	;volatile
  3485  0012  2814               	goto	u101_21
  3486  0013  2815               	goto	u101_20
  3487  0014                     u101_21:
  3488  0014  281A               	goto	i1l1549
  3489  0015                     u101_20:
  3490  0015                     i1l1545:
  3491                           
  3492                           ;config.c: 212:         TMR2H++;
  3493  0015  3001               	movlw	1
  3494  0016  07F2               	addwf	_TMR2H,f
  3495  0017  3000               	movlw	0
  3496  0018  3DF3               	addwfc	_TMR2H+1,f
  3497  0019                     i1l1547:
  3498                           
  3499                           ;config.c: 213:         PIR1bits.TMR2IF = 0;
  3500  0019  1090               	bcf	16,1	;volatile
  3501  001A                     i1l1549:
  3502                           
  3503                           ;config.c: 216:     if(INTCONbits.IOCIF){
  3504  001A  1C0B               	btfss	11,0	;volatile
  3505  001B  281D               	goto	u102_21
  3506  001C  281E               	goto	u102_20
  3507  001D                     u102_21:
  3508  001D  28E6               	goto	i1l353
  3509  001E                     u102_20:
  3510  001E                     i1l1551:
  3511                           
  3512                           ;config.c: 217:         if(IOCCFbits.IOCCF3)
  3513  001E  0027               	movlb	7	; select bank7
  3514  001F  1D99               	btfss	25,3	;volatile
  3515  0020  2822               	goto	u103_21
  3516  0021  2823               	goto	u103_20
  3517  0022                     u103_21:
  3518  0022  284A               	goto	i1l1575
  3519  0023                     u103_20:
  3520  0023                     i1l1553:
  3521                           
  3522                           ;config.c: 218:         {;config.c: 219:             if(p.p1)
  3523  0023  0020               	movlb	0	; select bank0
  3524  0024  1C49               	btfss	_p,0
  3525  0025  2827               	goto	u104_21
  3526  0026  2828               	goto	u104_20
  3527  0027                     u104_21:
  3528  0027  283F               	goto	i1l338
  3529  0028                     u104_20:
  3530  0028                     i1l1555:
  3531                           
  3532                           ;config.c: 220:             {;config.c: 221:                 T1CONbits.TMR1ON = 0;
  3533  0028  1018               	bcf	24,0	;volatile
  3534  0029                     i1l1557:
  3535                           
  3536                           ;config.c: 222:                 if(TMR1 < 2100)
  3537  0029  3008               	movlw	8
  3538  002A  0217               	subwf	23,w	;volatile
  3539  002B  3034               	movlw	52
  3540  002C  1903               	skipnz
  3541  002D  0216               	subwf	22,w	;volatile
  3542  002E  1803               	skipnc
  3543  002F  2831               	goto	u105_21
  3544  0030  2832               	goto	u105_20
  3545  0031                     u105_21:
  3546  0031  2836               	goto	i1l1561
  3547  0032                     u105_20:
  3548  0032                     i1l1559:
  3549                           
  3550                           ;config.c: 223:                     ch1 = TMR1;
  3551  0032  0817               	movf	23,w	;volatile
  3552  0033  00A9               	movwf	_ch1+1
  3553  0034  0816               	movf	22,w	;volatile
  3554  0035  00A8               	movwf	_ch1
  3555  0036                     i1l1561:
  3556                           
  3557                           ;config.c: 224:                 IOCCN &= 0b11110111;
  3558  0036  30F7               	movlw	247
  3559  0037  00F6               	movwf	??_remote
  3560  0038  0876               	movf	??_remote,w
  3561  0039  0027               	movlb	7	; select bank7
  3562  003A  0598               	andwf	24,f	;volatile
  3563  003B                     i1l1563:
  3564                           
  3565                           ;config.c: 225:                 IOCCP |= 0b00001000;
  3566  003B  1597               	bsf	23,3	;volatile
  3567  003C                     i1l1565:
  3568                           
  3569                           ;config.c: 226:                 p.p1 = 0;
  3570  003C  0020               	movlb	0	; select bank0
  3571  003D  1049               	bcf	_p,0
  3572                           
  3573                           ;config.c: 227:             }
  3574  003E  284A               	goto	i1l1575
  3575  003F                     i1l338:	
  3576                           ;config.c: 228:             else
  3577                           
  3578                           
  3579                           ;config.c: 229:             {;config.c: 230:                 T1CONbits.TMR1ON = 1;
  3580  003F  1418               	bsf	24,0	;volatile
  3581  0040                     i1l1567:
  3582                           
  3583                           ;config.c: 231:                 TMR1 = 0;
  3584  0040  0196               	clrf	22	;volatile
  3585  0041  0197               	clrf	23	;volatile
  3586  0042                     i1l1569:
  3587                           
  3588                           ;config.c: 232:                 IOCCP &= 0b11110111;
  3589  0042  30F7               	movlw	247
  3590  0043  00F6               	movwf	??_remote
  3591  0044  0876               	movf	??_remote,w
  3592  0045  0027               	movlb	7	; select bank7
  3593  0046  0597               	andwf	23,f	;volatile
  3594  0047                     i1l1571:
  3595                           
  3596                           ;config.c: 233:                 IOCCN |= 0b00001000;
  3597  0047  1598               	bsf	24,3	;volatile
  3598  0048                     i1l1573:
  3599                           
  3600                           ;config.c: 234:                 p.p1 = 1;
  3601  0048  0020               	movlb	0	; select bank0
  3602  0049  1449               	bsf	_p,0
  3603  004A                     i1l1575:
  3604                           
  3605                           ;config.c: 238:         if(IOCCFbits.IOCCF4)
  3606  004A  0027               	movlb	7	; select bank7
  3607  004B  1E19               	btfss	25,4	;volatile
  3608  004C  284E               	goto	u106_21
  3609  004D  284F               	goto	u106_20
  3610  004E                     u106_21:
  3611  004E  287A               	goto	i1l1603
  3612  004F                     u106_20:
  3613  004F                     i1l1577:
  3614                           
  3615                           ;config.c: 239:         {;config.c: 240:             if(p.p2)
  3616  004F  0020               	movlb	0	; select bank0
  3617  0050  1CC9               	btfss	_p,1
  3618  0051  2853               	goto	u107_21
  3619  0052  2854               	goto	u107_20
  3620  0053                     u107_21:
  3621  0053  286D               	goto	i1l342
  3622  0054                     u107_20:
  3623  0054                     i1l1579:
  3624                           
  3625                           ;config.c: 241:             {;config.c: 242:                 T3CONbits.TMR3ON = 0;
  3626  0054  0029               	movlb	9	; select bank9
  3627  0055  1015               	bcf	21,0	;volatile
  3628  0056                     i1l1581:
  3629                           
  3630                           ;config.c: 243:                 IOCCN &= 0b11101111;
  3631  0056  30EF               	movlw	239
  3632  0057  00F6               	movwf	??_remote
  3633  0058  0876               	movf	??_remote,w
  3634  0059  0027               	movlb	7	; select bank7
  3635  005A  0598               	andwf	24,f	;volatile
  3636  005B                     i1l1583:
  3637                           
  3638                           ;config.c: 244:                 IOCCP |= 0b00010000;
  3639  005B  1617               	bsf	23,4	;volatile
  3640  005C                     i1l1585:
  3641                           
  3642                           ;config.c: 245:                 if(TMR3H < 9)
  3643  005C  3009               	movlw	9
  3644  005D  0029               	movlb	9	; select bank9
  3645  005E  0214               	subwf	20,w	;volatile
  3646  005F  1803               	skipnc
  3647  0060  2862               	goto	u108_21
  3648  0061  2863               	goto	u108_20
  3649  0062                     u108_21:
  3650  0062  286A               	goto	i1l1589
  3651  0063                     u108_20:
  3652  0063                     i1l1587:
  3653                           
  3654                           ;config.c: 246:                     ch2 = ((unsigned)TMR3H<<8) | (unsigned)TMR3L;
  3655  0063  0814               	movf	20,w	;volatile
  3656  0064  0020               	movlb	0	; select bank0
  3657  0065  00A7               	movwf	_ch2+1
  3658  0066  0029               	movlb	9	; select bank9
  3659  0067  0813               	movf	19,w	;volatile
  3660  0068  0020               	movlb	0	; select bank0
  3661  0069  00A6               	movwf	_ch2
  3662  006A                     i1l1589:
  3663                           
  3664                           ;config.c: 247:                 p.p2 = 0;
  3665  006A  0020               	movlb	0	; select bank0
  3666  006B  10C9               	bcf	_p,1
  3667                           
  3668                           ;config.c: 248:             }
  3669  006C  287A               	goto	i1l1603
  3670  006D                     i1l342:	
  3671                           ;config.c: 249:             else
  3672                           
  3673                           
  3674                           ;config.c: 250:             {;config.c: 251:                 IOCCN |= 0b00010000;
  3675  006D  0027               	movlb	7	; select bank7
  3676  006E  1618               	bsf	24,4	;volatile
  3677  006F                     i1l1591:
  3678                           
  3679                           ;config.c: 252:                 IOCCP &= 0b11101111;
  3680  006F  30EF               	movlw	239
  3681  0070  00F6               	movwf	??_remote
  3682  0071  0876               	movf	??_remote,w
  3683  0072  0597               	andwf	23,f	;volatile
  3684  0073                     i1l1593:
  3685                           
  3686                           ;config.c: 253:                 TMR3L = 0;
  3687  0073  0029               	movlb	9	; select bank9
  3688  0074  0193               	clrf	19	;volatile
  3689  0075                     i1l1595:
  3690                           
  3691                           ;config.c: 254:                 TMR3H = 0;
  3692  0075  0194               	clrf	20	;volatile
  3693  0076                     i1l1597:
  3694                           
  3695                           ;config.c: 255:                 TMR3L = 0;
  3696  0076  0193               	clrf	19	;volatile
  3697  0077                     i1l1599:
  3698                           
  3699                           ;config.c: 256:                 T3CONbits.TMR3ON = 1;
  3700  0077  1415               	bsf	21,0	;volatile
  3701  0078                     i1l1601:
  3702                           
  3703                           ;config.c: 257:                 p.p2 = 1;
  3704  0078  0020               	movlb	0	; select bank0
  3705  0079  14C9               	bsf	_p,1
  3706  007A                     i1l1603:
  3707                           
  3708                           ;config.c: 261:         if(IOCCFbits.IOCCF5)
  3709  007A  0027               	movlb	7	; select bank7
  3710  007B  1E99               	btfss	25,5	;volatile
  3711  007C  287E               	goto	u109_21
  3712  007D  287F               	goto	u109_20
  3713  007E                     u109_21:
  3714  007E  28A9               	goto	i1l1629
  3715  007F                     u109_20:
  3716  007F                     i1l1605:
  3717                           
  3718                           ;config.c: 262:         {;config.c: 263:             if(p.p3)
  3719  007F  0020               	movlb	0	; select bank0
  3720  0080  1D49               	btfss	_p,2
  3721  0081  2883               	goto	u110_21
  3722  0082  2884               	goto	u110_20
  3723  0083                     u110_21:
  3724  0083  289D               	goto	i1l346
  3725  0084                     u110_20:
  3726  0084                     i1l1607:
  3727                           
  3728                           ;config.c: 264:             {;config.c: 265:                 T5CONbits.TMR5ON = 0;
  3729  0084  0029               	movlb	9	; select bank9
  3730  0085  101C               	bcf	28,0	;volatile
  3731  0086                     i1l1609:
  3732                           
  3733                           ;config.c: 266:                 IOCCN &= 0b11011111;
  3734  0086  30DF               	movlw	223
  3735  0087  00F6               	movwf	??_remote
  3736  0088  0876               	movf	??_remote,w
  3737  0089  0027               	movlb	7	; select bank7
  3738  008A  0598               	andwf	24,f	;volatile
  3739  008B                     i1l1611:
  3740                           
  3741                           ;config.c: 267:                 IOCCP |= 0b00100000;
  3742  008B  1697               	bsf	23,5	;volatile
  3743  008C                     i1l1613:
  3744                           
  3745                           ;config.c: 268:                 if(TMR5H < 9)
  3746  008C  3009               	movlw	9
  3747  008D  0029               	movlb	9	; select bank9
  3748  008E  021B               	subwf	27,w	;volatile
  3749  008F  1803               	skipnc
  3750  0090  2892               	goto	u111_21
  3751  0091  2893               	goto	u111_20
  3752  0092                     u111_21:
  3753  0092  289A               	goto	i1l1617
  3754  0093                     u111_20:
  3755  0093                     i1l1615:
  3756                           
  3757                           ;config.c: 269:                     ch3 = ((unsigned)TMR5H << 8) | (unsigned)TMR5L;
  3758  0093  081B               	movf	27,w	;volatile
  3759  0094  0020               	movlb	0	; select bank0
  3760  0095  00A5               	movwf	_ch3+1
  3761  0096  0029               	movlb	9	; select bank9
  3762  0097  081A               	movf	26,w	;volatile
  3763  0098  0020               	movlb	0	; select bank0
  3764  0099  00A4               	movwf	_ch3
  3765  009A                     i1l1617:
  3766                           
  3767                           ;config.c: 270:                 p.p3 = 0;
  3768  009A  0020               	movlb	0	; select bank0
  3769  009B  1149               	bcf	_p,2
  3770                           
  3771                           ;config.c: 271:             }
  3772  009C  28A9               	goto	i1l1629
  3773  009D                     i1l346:	
  3774                           ;config.c: 272:             else
  3775                           
  3776                           
  3777                           ;config.c: 273:             {;config.c: 274:                 IOCCN |= 0b00100000;
  3778  009D  0027               	movlb	7	; select bank7
  3779  009E  1698               	bsf	24,5	;volatile
  3780  009F                     i1l1619:
  3781                           
  3782                           ;config.c: 275:                 IOCCP &= 0b11011111;
  3783  009F  30DF               	movlw	223
  3784  00A0  00F6               	movwf	??_remote
  3785  00A1  0876               	movf	??_remote,w
  3786  00A2  0597               	andwf	23,f	;volatile
  3787  00A3                     i1l1621:
  3788                           
  3789                           ;config.c: 276:                 TMR5L = 0;
  3790  00A3  0029               	movlb	9	; select bank9
  3791  00A4  019A               	clrf	26	;volatile
  3792  00A5                     i1l1623:
  3793                           
  3794                           ;config.c: 277:                 TMR5H = 0;
  3795  00A5  019B               	clrf	27	;volatile
  3796  00A6                     i1l1625:
  3797                           
  3798                           ;config.c: 278:                 T5CONbits.TMR5ON = 1;
  3799  00A6  141C               	bsf	28,0	;volatile
  3800  00A7                     i1l1627:
  3801                           
  3802                           ;config.c: 279:                 p.p3 = 1;
  3803  00A7  0020               	movlb	0	; select bank0
  3804  00A8  1549               	bsf	_p,2
  3805  00A9                     i1l1629:
  3806                           
  3807                           ;config.c: 283:         if(IOCCFbits.IOCCF6)
  3808  00A9  0027               	movlb	7	; select bank7
  3809  00AA  1F19               	btfss	25,6	;volatile
  3810  00AB  28AD               	goto	u112_21
  3811  00AC  28AE               	goto	u112_20
  3812  00AD                     u112_21:
  3813  00AD  28E3               	goto	i1l1655
  3814  00AE                     u112_20:
  3815  00AE                     i1l1631:
  3816                           
  3817                           ;config.c: 284:         {;config.c: 285:             if(p.p4)
  3818  00AE  0020               	movlb	0	; select bank0
  3819  00AF  1DC9               	btfss	_p,3
  3820  00B0  28B2               	goto	u113_21
  3821  00B1  28B3               	goto	u113_20
  3822  00B2                     u113_21:
  3823  00B2  28D7               	goto	i1l350
  3824  00B3                     u113_20:
  3825  00B3                     i1l1633:
  3826                           
  3827                           ;config.c: 286:             {;config.c: 287:                 T2CONbits.ON = 0;
  3828  00B3  139C               	bcf	28,7	;volatile
  3829  00B4                     i1l1635:
  3830                           
  3831                           ;config.c: 288:                 IOCCN &= 0b10111111;
  3832  00B4  30BF               	movlw	191
  3833  00B5  00F6               	movwf	??_remote
  3834  00B6  0876               	movf	??_remote,w
  3835  00B7  0027               	movlb	7	; select bank7
  3836  00B8  0598               	andwf	24,f	;volatile
  3837  00B9                     i1l1637:
  3838                           
  3839                           ;config.c: 289:                 IOCCP |= 0b01000000;
  3840  00B9  1717               	bsf	23,6	;volatile
  3841  00BA                     i1l1639:
  3842                           
  3843                           ;config.c: 290:                 if(TMR2H < 9)
  3844  00BA  3000               	movlw	0
  3845  00BB  0273               	subwf	_TMR2H+1,w
  3846  00BC  3009               	movlw	9
  3847  00BD  1903               	skipnz
  3848  00BE  0272               	subwf	_TMR2H,w
  3849  00BF  1803               	skipnc
  3850  00C0  28C2               	goto	u114_21
  3851  00C1  28C3               	goto	u114_20
  3852  00C2                     u114_21:
  3853  00C2  28D4               	goto	i1l1643
  3854  00C3                     u114_20:
  3855  00C3                     i1l1641:
  3856                           
  3857                           ;config.c: 291:                     ch4 = (TMR2H<<8) | TMR2;
  3858  00C3  0020               	movlb	0	; select bank0
  3859  00C4  081A               	movf	26,w	;volatile
  3860  00C5  00F6               	movwf	??_remote
  3861  00C6  01F7               	clrf	??_remote+1
  3862  00C7  0872               	movf	_TMR2H,w
  3863  00C8  00F9               	movwf	??_remote+3
  3864  00C9  01F8               	clrf	??_remote+2
  3865  00CA  0876               	movf	??_remote,w
  3866  00CB  0478               	iorwf	??_remote+2,w
  3867  00CC  00FA               	movwf	??_remote+4
  3868  00CD  0877               	movf	??_remote+1,w
  3869  00CE  0479               	iorwf	??_remote+3,w
  3870  00CF  00FB               	movwf	??_remote+5
  3871  00D0  087A               	movf	??_remote+4,w
  3872  00D1  00A2               	movwf	_ch4
  3873  00D2  087B               	movf	??_remote+5,w
  3874  00D3  00A3               	movwf	_ch4+1
  3875  00D4                     i1l1643:
  3876                           
  3877                           ;config.c: 292:                 p.p4 = 0;
  3878  00D4  0020               	movlb	0	; select bank0
  3879  00D5  11C9               	bcf	_p,3
  3880                           
  3881                           ;config.c: 293:             }
  3882  00D6  28E3               	goto	i1l1655
  3883  00D7                     i1l350:	
  3884                           ;config.c: 294:             else
  3885                           
  3886                           
  3887                           ;config.c: 295:             {;config.c: 296:                 IOCCN |= 0b01000000;
  3888  00D7  0027               	movlb	7	; select bank7
  3889  00D8  1718               	bsf	24,6	;volatile
  3890  00D9                     i1l1645:
  3891                           
  3892                           ;config.c: 297:                 IOCCP &= 0b10111111;
  3893  00D9  30BF               	movlw	191
  3894  00DA  00F6               	movwf	??_remote
  3895  00DB  0876               	movf	??_remote,w
  3896  00DC  0597               	andwf	23,f	;volatile
  3897  00DD                     i1l1647:
  3898                           
  3899                           ;config.c: 298:                 TMR2 = 0;
  3900  00DD  0020               	movlb	0	; select bank0
  3901  00DE  019A               	clrf	26	;volatile
  3902  00DF                     i1l1649:
  3903                           
  3904                           ;config.c: 299:                 TMR2H = 0;
  3905  00DF  01F2               	clrf	_TMR2H
  3906  00E0  01F3               	clrf	_TMR2H+1
  3907  00E1                     i1l1651:
  3908                           
  3909                           ;config.c: 300:                 T2CONbits.ON = 1;
  3910  00E1  179C               	bsf	28,7	;volatile
  3911  00E2                     i1l1653:
  3912                           
  3913                           ;config.c: 301:                 p.p4 = 1;
  3914  00E2  15C9               	bsf	_p,3
  3915  00E3                     i1l1655:
  3916                           
  3917                           ;config.c: 304:         IOCCF = 0;
  3918  00E3  0027               	movlb	7	; select bank7
  3919  00E4  0199               	clrf	25	;volatile
  3920  00E5                     i1l1657:
  3921                           
  3922                           ;config.c: 305:         INTCONbits.IOCIF = 0;
  3923  00E5  100B               	bcf	11,0	;volatile
  3924  00E6                     i1l353:
  3925  00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3926  00E7  0009               	retfie
  3927  00E8                     __end_of_remote:
  3928  007E                     btemp	set	126	;btemp
  3929  007E                     int$flags	set	126
  3930  007E                     wtemp0	set	126
  3931                           
  3932                           	psect	config
  3933                           
  3934                           ;Config register CONFIG1 @ 0x8007
  3935                           ;	Oscillator Selection Bits
  3936                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3937                           ;	Power-up Timer Enable
  3938                           ;	PWRTE = OFF, PWRT disabled
  3939                           ;	MCLR Pin Function Select
  3940                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3941                           ;	Flash Program Memory Code Protection
  3942                           ;	CP = OFF, Program memory code protection is disabled
  3943                           ;	Brown-out Reset Enable
  3944                           ;	BOREN = OFF, Brown-out Reset disabled
  3945                           ;	Clock Out Enable
  3946                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3947                           ;	Internal/External Switch Over
  3948                           ;	IESO = ON, Internal External Switch Over mode is enabled
  3949                           ;	Fail-Safe Clock Monitor Enable
  3950                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3951  8007                     	org	32775
  3952  8007  39BC               	dw	14780
  3953                           
  3954                           ;Config register CONFIG2 @ 0x8008
  3955                           ;	Flash Memory Self-Write Protection
  3956                           ;	WRT = OFF, Write protection off
  3957                           ;	Peripheral Pin Select one-way control
  3958                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3959                           ;	Zero Cross Detect Disable Bit
  3960                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3961                           ;	PLL Enable Bit
  3962                           ;	PLLEN = ON, 4x PLL is always enabled
  3963                           ;	Stack Overflow/Underflow Reset Enable
  3964                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3965                           ;	Brown-out Reset Voltage Selection
  3966                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3967                           ;	Low-Power Brown Out Reset
  3968                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3969                           ;	Low-Voltage Programming Enable
  3970                           ;	LVP = ON, Low-voltage programming enabled
  3971  8008                     	org	32776
  3972  8008  3FFF               	dw	16383
  3973                           
  3974                           ;Config register CONFIG3 @ 0x8009
  3975                           ;	WDT Period Select
  3976                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3977                           ;	Watchdog Timer Enable
  3978                           ;	WDTE = OFF, WDT disabled
  3979                           ;	WDT Window Select
  3980                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3981                           ;	WDT Input Clock Selector
  3982                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3983  8009                     	org	32777
  3984  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _remote in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_sensor
    _read_sensor->_i2c_read
    _i2c_read->_i2c_read_byte
    _gyro_config->_i2c_write
    _i2c_write->_nack

Critical Paths under _remote in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _remote in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _remote in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _remote in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _remote in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _remote in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _remote in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _remote in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _remote in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _remote in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _remote in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _remote in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _remote in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2544
                                             18 BANK0      8     8      0
                      _balance_drone
               _battery_compensation
                      _calculate_pid
                        _gyro_config
                           _pic_init
                        _read_sensor
                   _reset_timer_loop
 ---------------------------------------------------------------------------------
 (1) _reset_timer_loop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_sensor                                          1     1      0    1160
                                             17 BANK0      1     1      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                            10     8      2    1160
                                              7 BANK0     10     8      2
                      _i2c_read_byte
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_byte                                        7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gyro_config                                          2     2      0    1384
                                              5 BANK0      2     2      0
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    1384
                                              2 BANK0      3     1      2
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _nack                                                 2     0      2       0
                                              0 BANK0      2     0      2
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_write_byte                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calculate_pid                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _battery_compensation                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _balance_drone                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _remote                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _balance_drone
   _battery_compensation
   _calculate_pid
   _gyro_config
     _i2c_write
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _pic_init
   _read_sensor
     _i2c_read
       _i2c_read_byte
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _reset_timer_loop

 _remote (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Apr 21 20:40:36 2022

                            _p 0049                             l93 0230                             l94 0250  
                           l95 0270                             l87 01E4                             l88 01F1  
                           l89 01FE                            l300 04E8                            l310 04EB  
                          l303 04C1                            l312 04EF                            l305 04C5  
                          l313 04F1                            l322 0509                            l307 04CD  
                          l252 0398                            l316 0501                            l325 04A2  
                          l261 031E                            l254 039C                            l327 04A6  
                          l319 0508                            l255 03F1                            l271 0390  
                          l329 04B8                            l265 047C                            l281 0495  
                          l258 0445                            l291 04F4                            l283 0499  
                          l284 049F                            l293 04F8                            l294 04FA  
                          l278 0481                            l288 04DF                            l297 04E2  
                          l299 04E6                            _ch1 0028                            _ch2 0026  
                          _ch3 0024                            _ch4 0022                            wreg 0009  
      __size_of_i2c_write_byte 0015                           l1701 0450                           l1713 0479  
                         l1705 045B                           l1801 03D4                           l1721 0333  
                         l1811 03E1                           l1803 03D6                           l1731 0345  
                         l1715 0321                           l1661 04F2                           l1709 046A  
                         l1821 03F0                           l1813 03E5                           l1805 03DA  
                         l1741 0359                           l1733 0348                           l1725 0336  
                         l1717 0324                           l1901 01E0                           l1831 04A8  
                         l1663 04BB                           l1671 04D3                           l1823 03F2  
                         l1815 03E6                           l1807 03DB                           l1743 036B  
                         l1735 034E                           l1719 0329                           l1911 0210  
                         l1903 01ED                           l1833 04B6                           l1665 04BD  
                         l1673 04D6                           l1817 03EA                           l1809 03DF  
                         l1761 03A4                           l1681 04E0                           l1753 0383  
                         l1745 036E                           l1825 04FB                           l1913 022C  
                         l1921 0290                           l1905 01FA                           l1841 0106  
                         l1667 04CC                           l1659 04E9                           l1819 03EC  
                         l1771 03B0                           l1763 03A6                           l1691 0494  
                         l1683 047F                           l1747 0375                           l1827 02A8  
                         l1915 024C                           l1907 0207                           l1923 0296  
                         l1851 0128                           l1843 010B                           l1835 00FC  
                         l1829 04A0                           l1677 04DC                           l1669 04CE  
                         l1781 03BB                           l1773 03B3                           l1765 03A7  
                         l1757 0391                           l1693 049B                           l1685 0485  
                         l1925 029F                           l1917 026C                           l1909 020B  
                         l1861 0145                           l1853 012A                           l1845 010E  
                         l1837 0102                           l1791 03C6                           l1783 03BF  
                         l1775 03B5                           l1767 03AB                           l1759 03A1  
                         l1687 048D                           l1919 028C                           l1871 0167  
                         l1863 014B                           l1855 012F                           l1847 0114  
                         l1839 0104                           l1697 0448                           l1793 03CA  
                         l1785 03C1                           l1777 03B7                           l1769 03AE  
                         l1689 048E                           l1881 0180                           l1873 0170  
                         l1865 0154                           l1857 0138                           l1849 0124  
                         l1699 044B                           l1795 03CC                           l1787 03C2  
                         l1779 03B9                           l1891 01AD                           l1883 0183  
                         l1875 0179                           l1867 015D                           l1859 0141  
                         l1797 03CF                           l1789 03C4                           l1893 01B1  
                         l1885 0186                           l1877 017A                           l1869 0161  
                         l1799 03D1                           l1895 01CC                           l1887 0197  
                         l1879 017D                           l1897 01D2                           l1889 01A7  
                         l1899 01D7                           u1200 04E6                           u1201 04E5  
                         u1210 0485                           u1211 0484                           u1300 039C  
                         u1220 0499                           u1301 039B                           u1221 0498  
                         u1310 04A6                           u1150 04EF                           u1230 045A  
                         u1311 04A5                           u1151 04EE                           u1231 0459  
                         u1320 04B6                           u1160 04F8                           u1240 0469  
                         u1400 0167                           u1321 04B5                           u1161 04F7  
                         u1241 0468                           u1401 0166                           u1170 04C5  
                         u1250 0478                           u1410 0170                           u1330 0114  
                         u1171 04C4                           u1251 0477                           u1411 016F  
                         u1331 0113                           u1180 04CC                           u1260 0333  
                         u1500 022C                           u1420 0179                           u1340 012F  
                         u1181 04CB                           u1261 0332                           u1501 022B  
                         u1421 0178                           u1341 012E                           u1190 04D3  
                         u1270 0344                           u1510 024C                           u1430 01AD  
                         u1350 0138                           u1191 04D2                           u1271 0343  
                         u1511 024B                           u1431 01AC                           u1351 0137  
                         u1280 0358                           u1520 026C                           u1440 01CC  
                         u1360 0141                           u1281 0357                           u1521 026B  
                         u1505 0228                           u1441 01CB                           u1361 0140  
                         u1290 0375                           u1530 028C                           u1450 01D2  
                         u1370 014B                           u1291 0374                           u1531 028B  
                         u1515 0248                           u1451 01D1                           u1371 014A  
                         u1540 0296                           u1460 01E0                           u1380 0154  
                         u1541 0295                           u1525 0268                           u1461 01DF  
                         u1381 0153                           u1550 029F                           u1470 01ED  
                         u1390 015D                           u1551 029E                           u1535 0288  
                         u1471 01EC                           u1391 015C                           u1560 02A5  
                         u1480 01FA                           u1561 02A4                           u1481 01F9  
                         u1490 0207                           u1491 0206                           _RCEN 10B3  
                         _TMR0 0015                           _TMR1 0016                           _TMR2 001A  
                         _accx 0046                           _accy 0044                           _accz 0042  
                         _esc1 0034                           _esc2 0032                           _esc3 0030  
                         _esc4 002E                  _i2c_read_byte 047D                           _nack 04CE  
                         _main 00FC                           _magx 003A                           _magy 0038  
                         _magz 0036                           fsr0h 0005                           indf0 0000  
                         fsr0l 0004                           btemp 007E                           start 00E8  
                ??_i2c_restart 004A       __end_of_reset_timer_loop 0502                          ?_nack 004A  
                        ?_main 0076                          _IOCCF 0399                          _IOCCN 0398  
                        _IOCCP 0397                    i2c_read@low 0056                          _T2RST 001F  
                        i1l350 00D7                          i1l342 006D                          i1l353 00E6  
                        i1l346 009D                          i1l338 003F                          _TMR0H 002C  
                        _TMR2H 0072                          _TMR3H 0494                          _TMR3L 0493  
                        _TMR5H 049B                          _TMR5L 049A                          _PORTA 000C  
                        _TRISA 008C                          _TRISB 008D                          _TRISC 008E  
       ??_battery_compensation 004A                          _count 0074                   ?_read_sensor 0076  
                        _gyrox 0040                          _gyroy 003E                          _gyroz 003C  
                        _start 0048                 ?_i2c_read_byte 004A                          status 0003  
                        wtemp0 007E                __initialization 00EA                   __end_of_nack 04E0  
                 __end_of_main 02A8               __end_of_i2c_read 0391               __end_of_i2c_stop 04F2  
          __end_of_i2c_restart 04E9                         ??_nack 004C                         ??_main 005C  
                       _ADRESH 009C                         _ADRESL 009B                         _ANSELA 018C  
                       _ANSELB 018D                         _ANSELC 018E                   ?_gyro_config 0076  
                 i2c_read@high 0058                         u100_20 000A                         u100_21 0009  
                       _RB4PPS 0E9C                         u101_20 0015                         u101_21 0014  
                       u110_20 0084                         u102_20 001E                         u110_21 0083  
                       u102_21 001D                         _RB6PPS 0E9E                         u111_20 0093  
                       u103_20 0023                         u111_21 0092                         u103_21 0022  
                       u112_20 00AE                         u104_20 0028                         u112_21 00AD  
                       i1l1601 0078                         u104_21 0027                         i1l1611 008B  
                       i1l1603 007A                         i1l1621 00A3                         i1l1613 008C  
                       i1l1605 007F                         i1l1541 000F                         i1l1631 00AE  
                       i1l1623 00A5                         i1l1615 0093                         i1l1607 0084  
                       i1l1551 001E                         i1l1543 0010                         u113_20 00B3  
                       u105_20 0032                         i1l1641 00C3                         i1l1633 00B3  
                       u113_21 00B2                         i1l1625 00A6                         i1l1617 009A  
                       i1l1609 0086                         i1l1561 0036                         u105_21 0031  
                       i1l1553 0023                         i1l1545 0015                         i1l1537 0006  
                       i1l1651 00E1                         i1l1643 00D4                         i1l1635 00B4  
                       i1l1627 00A7                         i1l1619 009F                         i1l1571 0047  
                       i1l1563 003B                         i1l1555 0028                         i1l1547 0019  
                       i1l1539 000A                         i1l1653 00E2                         i1l1645 00D9  
                       i1l1637 00B9                         i1l1629 00A9                         i1l1581 0056  
                       i1l1573 0048                         i1l1565 003C                         i1l1557 0029  
                       i1l1549 001A                         i1l1647 00DD                         i1l1639 00BA  
                       i1l1655 00E3                         i1l1591 006F                         i1l1583 005B  
                       i1l1567 0040                         i1l1559 0032                         i1l1575 004A  
                       u114_20 00C3                         u106_20 004F                         i1l1657 00E5  
                       i1l1649 00DF                         u114_21 00C2                         i1l1593 0073  
                       i1l1585 005C                         i1l1577 004F                         u106_21 004E  
                       i1l1569 0042                         i1l1595 0075                         i1l1587 0063  
                       i1l1579 0054                         i1l1597 0076                         i1l1589 006A  
                       i1l1599 0077                         u107_20 0054                         u107_21 0053  
                       u108_20 0063                         u108_21 0062                         u109_20 007F  
                       u109_21 007E             __size_of_i2c_start 0009             __size_of_i2c_write 0037  
             __end_of_pic_init 03F2                         _remote 0004         __size_of_balance_drone 0001  
               _i2c_write_byte 04B9                ??_i2c_read_byte 004C        __end_of__initialization 00F8  
               __pcstackCOMMON 0076                    _i2c_restart 04E0              __end_of_i2c_start 04FB  
            __end_of_i2c_write 047D                 _OPTION_REGbits 0095         __end_of_i2c_write_byte 04CE  
                   __pbssBANK0 0020           __size_of_read_sensor 0077                      ?_i2c_read 0051  
                    ?_i2c_stop 0076                  _balance_drone 0509                     __pmaintext 00FC  
                   __pintentry 0004                        ?_remote 0076              ?_reset_timer_loop 0076  
       __size_of_calculate_pid 0001                ?_i2c_write_byte 0076             ??_reset_timer_loop 004A  
                      _SSP1ADD 0212                        _SSP1BUF 0211          i2c_write_byte@address 004A  
                   ??_i2c_read 0053                     ??_i2c_stop 004A                 ?_balance_drone 0076  
         __size_of_gyro_config 0054                      ?_pic_init 0076                i2c_read@address 005A  
              __size_of_remote 00E4                        __ptext1 04FB                        __ptext2 02A8  
                      __ptext3 031F                        __ptext4 04E0                        __ptext5 047D  
                      __ptext6 0391                        __ptext7 03F2                        __ptext8 0446  
                      __ptext9 04CE                      _T1CONbits 0018                      _T2CONbits 001C  
                    _T3CONbits 0495                      _T2HLTbits 001D                      _T5CONbits 049C  
                    _IOCCFbits 0399                        _tmrLoop 002A  __size_of_battery_compensation 0019  
                      clrloop0 0503                        _voltage 0070           end_of_initialization 00F8  
                   ??_pic_init 004A                  _calculate_pid 0508                      _SSPDATPPS 0E21  
                    _SSPCLKPPS 0E20                  i2c_write@data 004D                ??_balance_drone 004A  
               ?_calculate_pid 0076                   ?_i2c_restart 0076             i2c_read@subaddress 0051  
               __end_of_remote 00E8            start_initialization 00EA                      _i2c_start 04F2  
                    _i2c_write 0446          __end_of_i2c_read_byte 04A0              __size_of_i2c_read 0072  
            __size_of_i2c_stop 0009               ??_i2c_write_byte 004A                       ??_remote 0076  
                  __pbssCOMMON 0070                      ___latbits 0002                  __pcstackBANK0 004A  
                   ?_i2c_start 0076                     ?_i2c_write 004C                  ??_read_sensor 005B  
              ??_calculate_pid 004A      __size_of_reset_timer_loop 0007              __size_of_pic_init 0061  
                     _T2CLKCON 001E                  ??_gyro_config 004F                       _LATCbits 010E  
          __end_of_read_sensor 031F                      clear_ram0 0502                       _PIE1bits 0090  
                     _PIR1bits 0010   __end_of_battery_compensation 04B9           __size_of_i2c_restart 0009  
                   _ADCON0bits 009D                     _ADCON1bits 009E                    ??_i2c_start 004A  
                  ??_i2c_write 004E                       _i2c_read 031F                       _i2c_stop 04E9  
          __end_of_gyro_config 0446                       __ptext10 04E9                       __ptext11 04B9  
                     __ptext12 04F2                       __ptext13 0508                       __ptext14 04A0  
                     __ptext15 0509                   _SSP1CON1bits 0215                   _SSP1CON2bits 0216  
                  _read_sensor 02A8          __end_of_balance_drone 050A               _reset_timer_loop 04FB  
                __size_of_nack 0012                  __size_of_main 01AC                       _pic_init 0391  
                     _setpoint 0020                       int$flags 007E                     _ODCONBbits 028D  
                 _SSP1STATbits 0214                    _OSCSTATbits 009A                     _INTCONbits 000B  
         _battery_compensation 04A0                    _gyro_config 03F2                       intlevel1 0000  
          i2c_write@subaddress 004C                    _SSP1CONbits 0215                     _OSCCONbits 0099  
       __size_of_i2c_read_byte 0023               i2c_write@address 004E                    _SSPCON2bits 0216  
        ?_battery_compensation 0076              i2c_read_byte@temp 004F          __end_of_calculate_pid 0509  
             i2c_read_byte@ack 004E  
