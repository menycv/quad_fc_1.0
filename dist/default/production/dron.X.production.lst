

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Apr 18 21:17:35 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1619 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011C                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0199                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  020E                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  028C                     	;# 
   183  028D                     	;# 
   184  028E                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029E                     	;# 
   196  030C                     	;# 
   197  030D                     	;# 
   198  030E                     	;# 
   199  038C                     	;# 
   200  038D                     	;# 
   201  038E                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0397                     	;# 
   209  0398                     	;# 
   210  0399                     	;# 
   211  040E                     	;# 
   212  0413                     	;# 
   213  0413                     	;# 
   214  0414                     	;# 
   215  0414                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  0418                     	;# 
   220  041A                     	;# 
   221  041A                     	;# 
   222  041B                     	;# 
   223  041B                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  041F                     	;# 
   228  0493                     	;# 
   229  0494                     	;# 
   230  0495                     	;# 
   231  0496                     	;# 
   232  049A                     	;# 
   233  049B                     	;# 
   234  049C                     	;# 
   235  049D                     	;# 
   236  058C                     	;# 
   237  058C                     	;# 
   238  058D                     	;# 
   239  058E                     	;# 
   240  058E                     	;# 
   241  058F                     	;# 
   242  0590                     	;# 
   243  0590                     	;# 
   244  0591                     	;# 
   245  0592                     	;# 
   246  0592                     	;# 
   247  0593                     	;# 
   248  0594                     	;# 
   249  0594                     	;# 
   250  0595                     	;# 
   251  0596                     	;# 
   252  0596                     	;# 
   253  0597                     	;# 
   254  0598                     	;# 
   255  0599                     	;# 
   256  059A                     	;# 
   257  059B                     	;# 
   258  059B                     	;# 
   259  059C                     	;# 
   260  059D                     	;# 
   261  060C                     	;# 
   262  060C                     	;# 
   263  060D                     	;# 
   264  060E                     	;# 
   265  060F                     	;# 
   266  060F                     	;# 
   267  0610                     	;# 
   268  0611                     	;# 
   269  0612                     	;# 
   270  0613                     	;# 
   271  0614                     	;# 
   272  0617                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  061A                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  0691                     	;# 
   281  0692                     	;# 
   282  0693                     	;# 
   283  0694                     	;# 
   284  0695                     	;# 
   285  0696                     	;# 
   286  0697                     	;# 
   287  0699                     	;# 
   288  069A                     	;# 
   289  0711                     	;# 
   290  0712                     	;# 
   291  0713                     	;# 
   292  0714                     	;# 
   293  0715                     	;# 
   294  0718                     	;# 
   295  0718                     	;# 
   296  0719                     	;# 
   297  071A                     	;# 
   298  071A                     	;# 
   299  071B                     	;# 
   300  071C                     	;# 
   301  071D                     	;# 
   302  0791                     	;# 
   303  0791                     	;# 
   304  0792                     	;# 
   305  0793                     	;# 
   306  0793                     	;# 
   307  0794                     	;# 
   308  0795                     	;# 
   309  0795                     	;# 
   310  0796                     	;# 
   311  0797                     	;# 
   312  0797                     	;# 
   313  0798                     	;# 
   314  0799                     	;# 
   315  079A                     	;# 
   316  080C                     	;# 
   317  080C                     	;# 
   318  080D                     	;# 
   319  080E                     	;# 
   320  080E                     	;# 
   321  080F                     	;# 
   322  0810                     	;# 
   323  0810                     	;# 
   324  0811                     	;# 
   325  0812                     	;# 
   326  0812                     	;# 
   327  0813                     	;# 
   328  0814                     	;# 
   329  0815                     	;# 
   330  0816                     	;# 
   331  0817                     	;# 
   332  0818                     	;# 
   333  0819                     	;# 
   334  081A                     	;# 
   335  081A                     	;# 
   336  081B                     	;# 
   337  081C                     	;# 
   338  081C                     	;# 
   339  081D                     	;# 
   340  088C                     	;# 
   341  088D                     	;# 
   342  088E                     	;# 
   343  088F                     	;# 
   344  088F                     	;# 
   345  0890                     	;# 
   346  0891                     	;# 
   347  0892                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0894                     	;# 
   351  0895                     	;# 
   352  0896                     	;# 
   353  0897                     	;# 
   354  0897                     	;# 
   355  0898                     	;# 
   356  0899                     	;# 
   357  0D8C                     	;# 
   358  0D8C                     	;# 
   359  0D8D                     	;# 
   360  0D8E                     	;# 
   361  0D8F                     	;# 
   362  0D8F                     	;# 
   363  0D90                     	;# 
   364  0D91                     	;# 
   365  0D92                     	;# 
   366  0D92                     	;# 
   367  0D93                     	;# 
   368  0D94                     	;# 
   369  0D95                     	;# 
   370  0D95                     	;# 
   371  0D96                     	;# 
   372  0D97                     	;# 
   373  0D98                     	;# 
   374  0D99                     	;# 
   375  0D9A                     	;# 
   376  0D9B                     	;# 
   377  0D9C                     	;# 
   378  0D9D                     	;# 
   379  0D9E                     	;# 
   380  0D9E                     	;# 
   381  0D9F                     	;# 
   382  0DA0                     	;# 
   383  0DA1                     	;# 
   384  0DA1                     	;# 
   385  0DA2                     	;# 
   386  0DA3                     	;# 
   387  0DA4                     	;# 
   388  0DA4                     	;# 
   389  0DA5                     	;# 
   390  0DA6                     	;# 
   391  0DA7                     	;# 
   392  0DA7                     	;# 
   393  0DA8                     	;# 
   394  0DA9                     	;# 
   395  0DAA                     	;# 
   396  0DAB                     	;# 
   397  0DAC                     	;# 
   398  0DAD                     	;# 
   399  0DAE                     	;# 
   400  0DAF                     	;# 
   401  0E0F                     	;# 
   402  0E10                     	;# 
   403  0E11                     	;# 
   404  0E12                     	;# 
   405  0E13                     	;# 
   406  0E14                     	;# 
   407  0E15                     	;# 
   408  0E16                     	;# 
   409  0E17                     	;# 
   410  0E18                     	;# 
   411  0E19                     	;# 
   412  0E1A                     	;# 
   413  0E1B                     	;# 
   414  0E1C                     	;# 
   415  0E1D                     	;# 
   416  0E1E                     	;# 
   417  0E1F                     	;# 
   418  0E20                     	;# 
   419  0E21                     	;# 
   420  0E22                     	;# 
   421  0E23                     	;# 
   422  0E24                     	;# 
   423  0E25                     	;# 
   424  0E26                     	;# 
   425  0E27                     	;# 
   426  0E28                     	;# 
   427  0E29                     	;# 
   428  0E2A                     	;# 
   429  0E2B                     	;# 
   430  0E2C                     	;# 
   431  0E2D                     	;# 
   432  0E2E                     	;# 
   433  0E90                     	;# 
   434  0E91                     	;# 
   435  0E92                     	;# 
   436  0E94                     	;# 
   437  0E95                     	;# 
   438  0E9C                     	;# 
   439  0E9D                     	;# 
   440  0E9E                     	;# 
   441  0E9F                     	;# 
   442  0EA0                     	;# 
   443  0EA1                     	;# 
   444  0EA2                     	;# 
   445  0EA3                     	;# 
   446  0EA4                     	;# 
   447  0EA5                     	;# 
   448  0EA6                     	;# 
   449  0EA7                     	;# 
   450  0F0F                     	;# 
   451  0F10                     	;# 
   452  0F11                     	;# 
   453  0F12                     	;# 
   454  0F13                     	;# 
   455  0F14                     	;# 
   456  0F15                     	;# 
   457  0F16                     	;# 
   458  0F17                     	;# 
   459  0F18                     	;# 
   460  0F19                     	;# 
   461  0F1A                     	;# 
   462  0F1B                     	;# 
   463  0F1C                     	;# 
   464  0F1D                     	;# 
   465  0F1E                     	;# 
   466  0F1F                     	;# 
   467  0F20                     	;# 
   468  0F21                     	;# 
   469  0F22                     	;# 
   470  0F23                     	;# 
   471  0F24                     	;# 
   472  0F25                     	;# 
   473  0F26                     	;# 
   474  0F27                     	;# 
   475  0F28                     	;# 
   476  0F29                     	;# 
   477  0F2A                     	;# 
   478  0F2B                     	;# 
   479  0F2C                     	;# 
   480  0F2D                     	;# 
   481  0F2E                     	;# 
   482  0F2F                     	;# 
   483  0F30                     	;# 
   484  0F31                     	;# 
   485  0F32                     	;# 
   486  0F33                     	;# 
   487  0F34                     	;# 
   488  0F35                     	;# 
   489  0F36                     	;# 
   490  0F37                     	;# 
   491  0FE4                     	;# 
   492  0FE5                     	;# 
   493  0FE6                     	;# 
   494  0FE7                     	;# 
   495  0FE8                     	;# 
   496  0FE9                     	;# 
   497  0FEA                     	;# 
   498  0FEB                     	;# 
   499  0FED                     	;# 
   500  0FEE                     	;# 
   501  0FEF                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  0010                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0013                     	;# 
   521  0014                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  001D                     	;# 
   534  001E                     	;# 
   535  001F                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  0090                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011C                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  0211                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0212                     	;# 
   612  0213                     	;# 
   613  0213                     	;# 
   614  0214                     	;# 
   615  0214                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  028C                     	;# 
   625  028D                     	;# 
   626  028E                     	;# 
   627  0291                     	;# 
   628  0291                     	;# 
   629  0292                     	;# 
   630  0293                     	;# 
   631  0294                     	;# 
   632  0298                     	;# 
   633  0298                     	;# 
   634  0299                     	;# 
   635  029A                     	;# 
   636  029B                     	;# 
   637  029E                     	;# 
   638  030C                     	;# 
   639  030D                     	;# 
   640  030E                     	;# 
   641  038C                     	;# 
   642  038D                     	;# 
   643  038E                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  040E                     	;# 
   654  0413                     	;# 
   655  0413                     	;# 
   656  0414                     	;# 
   657  0414                     	;# 
   658  0415                     	;# 
   659  0416                     	;# 
   660  0417                     	;# 
   661  0418                     	;# 
   662  041A                     	;# 
   663  041A                     	;# 
   664  041B                     	;# 
   665  041B                     	;# 
   666  041C                     	;# 
   667  041D                     	;# 
   668  041E                     	;# 
   669  041F                     	;# 
   670  0493                     	;# 
   671  0494                     	;# 
   672  0495                     	;# 
   673  0496                     	;# 
   674  049A                     	;# 
   675  049B                     	;# 
   676  049C                     	;# 
   677  049D                     	;# 
   678  058C                     	;# 
   679  058C                     	;# 
   680  058D                     	;# 
   681  058E                     	;# 
   682  058E                     	;# 
   683  058F                     	;# 
   684  0590                     	;# 
   685  0590                     	;# 
   686  0591                     	;# 
   687  0592                     	;# 
   688  0592                     	;# 
   689  0593                     	;# 
   690  0594                     	;# 
   691  0594                     	;# 
   692  0595                     	;# 
   693  0596                     	;# 
   694  0596                     	;# 
   695  0597                     	;# 
   696  0598                     	;# 
   697  0599                     	;# 
   698  059A                     	;# 
   699  059B                     	;# 
   700  059B                     	;# 
   701  059C                     	;# 
   702  059D                     	;# 
   703  060C                     	;# 
   704  060C                     	;# 
   705  060D                     	;# 
   706  060E                     	;# 
   707  060F                     	;# 
   708  060F                     	;# 
   709  0610                     	;# 
   710  0611                     	;# 
   711  0612                     	;# 
   712  0613                     	;# 
   713  0614                     	;# 
   714  0617                     	;# 
   715  0617                     	;# 
   716  0618                     	;# 
   717  0619                     	;# 
   718  061A                     	;# 
   719  061A                     	;# 
   720  061B                     	;# 
   721  061C                     	;# 
   722  0691                     	;# 
   723  0692                     	;# 
   724  0693                     	;# 
   725  0694                     	;# 
   726  0695                     	;# 
   727  0696                     	;# 
   728  0697                     	;# 
   729  0699                     	;# 
   730  069A                     	;# 
   731  0711                     	;# 
   732  0712                     	;# 
   733  0713                     	;# 
   734  0714                     	;# 
   735  0715                     	;# 
   736  0718                     	;# 
   737  0718                     	;# 
   738  0719                     	;# 
   739  071A                     	;# 
   740  071A                     	;# 
   741  071B                     	;# 
   742  071C                     	;# 
   743  071D                     	;# 
   744  0791                     	;# 
   745  0791                     	;# 
   746  0792                     	;# 
   747  0793                     	;# 
   748  0793                     	;# 
   749  0794                     	;# 
   750  0795                     	;# 
   751  0795                     	;# 
   752  0796                     	;# 
   753  0797                     	;# 
   754  0797                     	;# 
   755  0798                     	;# 
   756  0799                     	;# 
   757  079A                     	;# 
   758  080C                     	;# 
   759  080C                     	;# 
   760  080D                     	;# 
   761  080E                     	;# 
   762  080E                     	;# 
   763  080F                     	;# 
   764  0810                     	;# 
   765  0810                     	;# 
   766  0811                     	;# 
   767  0812                     	;# 
   768  0812                     	;# 
   769  0813                     	;# 
   770  0814                     	;# 
   771  0815                     	;# 
   772  0816                     	;# 
   773  0817                     	;# 
   774  0818                     	;# 
   775  0819                     	;# 
   776  081A                     	;# 
   777  081A                     	;# 
   778  081B                     	;# 
   779  081C                     	;# 
   780  081C                     	;# 
   781  081D                     	;# 
   782  088C                     	;# 
   783  088D                     	;# 
   784  088E                     	;# 
   785  088F                     	;# 
   786  088F                     	;# 
   787  0890                     	;# 
   788  0891                     	;# 
   789  0892                     	;# 
   790  0893                     	;# 
   791  0893                     	;# 
   792  0894                     	;# 
   793  0895                     	;# 
   794  0896                     	;# 
   795  0897                     	;# 
   796  0897                     	;# 
   797  0898                     	;# 
   798  0899                     	;# 
   799  0D8C                     	;# 
   800  0D8C                     	;# 
   801  0D8D                     	;# 
   802  0D8E                     	;# 
   803  0D8F                     	;# 
   804  0D8F                     	;# 
   805  0D90                     	;# 
   806  0D91                     	;# 
   807  0D92                     	;# 
   808  0D92                     	;# 
   809  0D93                     	;# 
   810  0D94                     	;# 
   811  0D95                     	;# 
   812  0D95                     	;# 
   813  0D96                     	;# 
   814  0D97                     	;# 
   815  0D98                     	;# 
   816  0D99                     	;# 
   817  0D9A                     	;# 
   818  0D9B                     	;# 
   819  0D9C                     	;# 
   820  0D9D                     	;# 
   821  0D9E                     	;# 
   822  0D9E                     	;# 
   823  0D9F                     	;# 
   824  0DA0                     	;# 
   825  0DA1                     	;# 
   826  0DA1                     	;# 
   827  0DA2                     	;# 
   828  0DA3                     	;# 
   829  0DA4                     	;# 
   830  0DA4                     	;# 
   831  0DA5                     	;# 
   832  0DA6                     	;# 
   833  0DA7                     	;# 
   834  0DA7                     	;# 
   835  0DA8                     	;# 
   836  0DA9                     	;# 
   837  0DAA                     	;# 
   838  0DAB                     	;# 
   839  0DAC                     	;# 
   840  0DAD                     	;# 
   841  0DAE                     	;# 
   842  0DAF                     	;# 
   843  0E0F                     	;# 
   844  0E10                     	;# 
   845  0E11                     	;# 
   846  0E12                     	;# 
   847  0E13                     	;# 
   848  0E14                     	;# 
   849  0E15                     	;# 
   850  0E16                     	;# 
   851  0E17                     	;# 
   852  0E18                     	;# 
   853  0E19                     	;# 
   854  0E1A                     	;# 
   855  0E1B                     	;# 
   856  0E1C                     	;# 
   857  0E1D                     	;# 
   858  0E1E                     	;# 
   859  0E1F                     	;# 
   860  0E20                     	;# 
   861  0E21                     	;# 
   862  0E22                     	;# 
   863  0E23                     	;# 
   864  0E24                     	;# 
   865  0E25                     	;# 
   866  0E26                     	;# 
   867  0E27                     	;# 
   868  0E28                     	;# 
   869  0E29                     	;# 
   870  0E2A                     	;# 
   871  0E2B                     	;# 
   872  0E2C                     	;# 
   873  0E2D                     	;# 
   874  0E2E                     	;# 
   875  0E90                     	;# 
   876  0E91                     	;# 
   877  0E92                     	;# 
   878  0E94                     	;# 
   879  0E95                     	;# 
   880  0E9C                     	;# 
   881  0E9D                     	;# 
   882  0E9E                     	;# 
   883  0E9F                     	;# 
   884  0EA0                     	;# 
   885  0EA1                     	;# 
   886  0EA2                     	;# 
   887  0EA3                     	;# 
   888  0EA4                     	;# 
   889  0EA5                     	;# 
   890  0EA6                     	;# 
   891  0EA7                     	;# 
   892  0F0F                     	;# 
   893  0F10                     	;# 
   894  0F11                     	;# 
   895  0F12                     	;# 
   896  0F13                     	;# 
   897  0F14                     	;# 
   898  0F15                     	;# 
   899  0F16                     	;# 
   900  0F17                     	;# 
   901  0F18                     	;# 
   902  0F19                     	;# 
   903  0F1A                     	;# 
   904  0F1B                     	;# 
   905  0F1C                     	;# 
   906  0F1D                     	;# 
   907  0F1E                     	;# 
   908  0F1F                     	;# 
   909  0F20                     	;# 
   910  0F21                     	;# 
   911  0F22                     	;# 
   912  0F23                     	;# 
   913  0F24                     	;# 
   914  0F25                     	;# 
   915  0F26                     	;# 
   916  0F27                     	;# 
   917  0F28                     	;# 
   918  0F29                     	;# 
   919  0F2A                     	;# 
   920  0F2B                     	;# 
   921  0F2C                     	;# 
   922  0F2D                     	;# 
   923  0F2E                     	;# 
   924  0F2F                     	;# 
   925  0F30                     	;# 
   926  0F31                     	;# 
   927  0F32                     	;# 
   928  0F33                     	;# 
   929  0F34                     	;# 
   930  0F35                     	;# 
   931  0F36                     	;# 
   932  0F37                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944  0016                     _TMR1	set	22
   945  001A                     _TMR2	set	26
   946  0010                     _PIR1bits	set	16
   947  001F                     _T2RST	set	31
   948  001D                     _T2HLTbits	set	29
   949  001C                     _T2CONbits	set	28
   950  001E                     _T2CLKCON	set	30
   951  0018                     _T1CONbits	set	24
   952  000B                     _INTCONbits	set	11
   953  000C                     _PORTA	set	12
   954  0015                     _TMR0	set	21
   955  008E                     _TRISC	set	142
   956  008D                     _TRISB	set	141
   957  008C                     _TRISA	set	140
   958  0095                     _OPTION_REGbits	set	149
   959  0090                     _PIE1bits	set	144
   960  009A                     _OSCSTATbits	set	154
   961  0099                     _OSCCONbits	set	153
   962  010E                     _LATCbits	set	270
   963  018E                     _ANSELC	set	398
   964  018D                     _ANSELB	set	397
   965  018C                     _ANSELA	set	396
   966  0215                     _SSP1CON1bits	set	533
   967  0214                     _SSP1STATbits	set	532
   968  0216                     _SSPCON2bits	set	534
   969  0211                     _SSP1BUF	set	529
   970  0216                     _SSP1CON2bits	set	534
   971  0212                     _SSP1ADD	set	530
   972  0215                     _SSP1CONbits	set	533
   973  10B3                     _RCEN	set	4275
   974  028D                     _ODCONBbits	set	653
   975  0399                     _IOCCF	set	921
   976  0398                     _IOCCN	set	920
   977  0399                     _IOCCFbits	set	921
   978  0397                     _IOCCP	set	919
   979  049A                     _TMR5L	set	1178
   980  049B                     _TMR5H	set	1179
   981  0493                     _TMR3L	set	1171
   982  0494                     _TMR3H	set	1172
   983  049C                     _T5CONbits	set	1180
   984  0495                     _T3CONbits	set	1173
   985  0E20                     _SSPCLKPPS	set	3616
   986  0E21                     _SSPDATPPS	set	3617
   987  0E9E                     _RB6PPS	set	3742
   988  0E9C                     _RB4PPS	set	3740
   989                           
   990                           	psect	cinit
   991  00EA                     start_initialization:	
   992                           ; #config settings
   993                           
   994  00EA                     __initialization:
   995                           
   996                           ; Clear objects allocated to COMMON
   997  00EA  01F0               	clrf	__pbssCOMMON& (0+127)
   998  00EB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   999  00EC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1000  00ED  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1001  00EE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1002  00EF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1003                           
  1004                           ; Clear objects allocated to BANK0
  1005  00F0  3020               	movlw	low __pbssBANK0
  1006  00F1  0084               	movwf	4
  1007  00F2  3000               	movlw	high __pbssBANK0
  1008  00F3  0085               	movwf	5
  1009  00F4  302A               	movlw	42
  1010  00F5  3184  24D2  3180   	fcall	clear_ram0
  1011  00F8                     end_of_initialization:	
  1012                           ;End of C runtime variable initialization code
  1013                           
  1014  00F8                     __end_of__initialization:
  1015  00F8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1016  00F9  0020               	movlb	0
  1017  00FA  3180  28FC         	ljmp	_main	;jump to C main() function
  1018                           
  1019                           	psect	bssCOMMON
  1020  0070                     __pbssCOMMON:
  1021  0070                     _ch1:
  1022  0070                     	ds	2
  1023  0072                     _TMR2H:
  1024  0072                     	ds	2
  1025  0074                     _count:
  1026  0074                     	ds	2
  1027                           
  1028                           	psect	bssBANK0
  1029  0020                     __pbssBANK0:
  1030  0020                     _voltaje:
  1031  0020                     	ds	4
  1032  0024                     _ch2:
  1033  0024                     	ds	2
  1034  0026                     _magz:
  1035  0026                     	ds	2
  1036  0028                     _magy:
  1037  0028                     	ds	2
  1038  002A                     _magx:
  1039  002A                     	ds	2
  1040  002C                     _gyroz:
  1041  002C                     	ds	2
  1042  002E                     _gyroy:
  1043  002E                     	ds	2
  1044  0030                     _gyrox:
  1045  0030                     	ds	2
  1046  0032                     _accz:
  1047  0032                     	ds	2
  1048  0034                     _accy:
  1049  0034                     	ds	2
  1050  0036                     _accx:
  1051  0036                     	ds	2
  1052  0038                     _esc4:
  1053  0038                     	ds	2
  1054  003A                     _esc3:
  1055  003A                     	ds	2
  1056  003C                     _esc2:
  1057  003C                     	ds	2
  1058  003E                     _esc1:
  1059  003E                     	ds	2
  1060  0040                     _tmrLoop:
  1061  0040                     	ds	2
  1062  0042                     _ch4:
  1063  0042                     	ds	2
  1064  0044                     _TMR0H:
  1065  0044                     	ds	2
  1066  0046                     _ch3:
  1067  0046                     	ds	2
  1068  0048                     _start:
  1069  0048                     	ds	1
  1070  0049                     _p:
  1071  0049                     	ds	1
  1072                           
  1073                           	psect	clrtext
  1074  04D2                     clear_ram0:	
  1075                           ;	Called with FSR0 containing the base address, and
  1076                           ;	WREG with the size to clear
  1077                           
  1078  04D2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1079  04D3                     clrloop0:
  1080  04D3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1081  04D4  3101               	addfsr 0,1
  1082  04D5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1083  04D6  2CD3               	goto	clrloop0	;have we reached the end yet?
  1084  04D7  3400               	retlw	0	;all done for this memory range, return
  1085                           
  1086                           	psect	cstackCOMMON
  1087  0076                     __pcstackCOMMON:
  1088  0076                     ?_pic_init:
  1089  0076                     ?_gyro_config:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0076                     ?_read_sensor:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0076                     ?_i2c_start:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0076                     ?_i2c_write_byte:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0076                     ?_i2c_stop:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0076                     ?_i2c_restart:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0076                     ?_main:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0076                     ?_remote:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0076                     ??_remote:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0x0
  1118  0076                     	ds	6
  1119                           
  1120                           	psect	cstackBANK0
  1121  004A                     __pcstackBANK0:
  1122  004A                     ??_pic_init:
  1123  004A                     ??_i2c_start:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  004A                     ??_i2c_write_byte:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  004A                     ??_i2c_stop:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  004A                     ??_i2c_restart:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  004A                     ?_nack:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  004A                     ?_i2c_read_byte:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141  004A                     i2c_write_byte@address:	
  1142                           ; 2 bytes @ 0x0
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0x0
  1146  004A                     	ds	2
  1147  004C                     ?_i2c_write:
  1148  004C                     ??_nack:	
  1149                           ; 1 bytes @ 0x2
  1150                           
  1151  004C                     ??_i2c_read_byte:	
  1152                           ; 1 bytes @ 0x2
  1153                           
  1154  004C                     i2c_write@subaddress:	
  1155                           ; 1 bytes @ 0x2
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x2
  1159  004C                     	ds	1
  1160  004D                     i2c_write@data:
  1161                           
  1162                           ; 1 bytes @ 0x3
  1163  004D                     	ds	1
  1164  004E                     ??_i2c_write:
  1165  004E                     i2c_write@address:	
  1166                           ; 1 bytes @ 0x4
  1167                           
  1168  004E                     i2c_read_byte@ack:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0x4
  1173  004E                     	ds	1
  1174  004F                     ??_gyro_config:
  1175  004F                     i2c_read_byte@temp:	
  1176                           ; 1 bytes @ 0x5
  1177                           
  1178                           
  1179                           ; 2 bytes @ 0x5
  1180  004F                     	ds	2
  1181  0051                     ?_i2c_read:
  1182  0051                     i2c_read@subaddress:	
  1183                           ; 2 bytes @ 0x7
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x7
  1187  0051                     	ds	2
  1188  0053                     ??_i2c_read:
  1189                           
  1190                           ; 1 bytes @ 0x9
  1191  0053                     	ds	3
  1192  0056                     i2c_read@low:
  1193                           
  1194                           ; 2 bytes @ 0xC
  1195  0056                     	ds	2
  1196  0058                     i2c_read@high:
  1197                           
  1198                           ; 2 bytes @ 0xE
  1199  0058                     	ds	2
  1200  005A                     i2c_read@address:
  1201                           
  1202                           ; 1 bytes @ 0x10
  1203  005A                     	ds	1
  1204  005B                     ??_read_sensor:
  1205                           
  1206                           ; 1 bytes @ 0x11
  1207  005B                     	ds	1
  1208  005C                     ??_main:
  1209                           
  1210                           ; 1 bytes @ 0x12
  1211  005C                     	ds	8
  1212                           
  1213                           	psect	maintext
  1214  00FC                     __pmaintext:	
  1215 ;;
  1216 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1217 ;;
  1218 ;; *************** function _main *****************
  1219 ;; Defined at:
  1220 ;;		line 31 in file "main.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : B1F/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1236 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1237 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;Total ram usage:        8 bytes
  1239 ;; Hardware stack levels required when called:    5
  1240 ;; This function calls:
  1241 ;;		_gyro_config
  1242 ;;		_pic_init
  1243 ;;		_read_sensor
  1244 ;; This function is called by:
  1245 ;;		Startup code after reset
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _main
  1251  00FC                     _main:
  1252  00FC                     l1733:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;main.c: 33:     pic_init();
  1258  00FC  3183  238E  3180   	fcall	_pic_init
  1259                           
  1260                           ;main.c: 34:     gyro_config();
  1261  00FF  3183  23E2  3180   	fcall	_gyro_config
  1262  0102                     l1735:
  1263                           
  1264                           ;main.c: 36:     start = 0;
  1265  0102  0020               	movlb	0	; select bank0
  1266  0103  01C8               	clrf	_start
  1267  0104                     l1737:
  1268                           
  1269                           ;main.c: 37:     LATCbits.LATC7 = 0;
  1270  0104  0022               	movlb	2	; select bank2
  1271  0105  138E               	bcf	14,7	;volatile
  1272  0106                     l1739:
  1273                           
  1274                           ;main.c: 38:     ch3 = 1000;
  1275  0106  30E8               	movlw	232
  1276  0107  0020               	movlb	0	; select bank0
  1277  0108  00C6               	movwf	_ch3
  1278  0109  3003               	movlw	3
  1279  010A  00C7               	movwf	_ch3+1
  1280  010B                     l1741:
  1281                           
  1282                           ;main.c: 41:         TMR0H = 0;
  1283  010B  01C4               	clrf	_TMR0H
  1284  010C  01C5               	clrf	_TMR0H+1
  1285  010D                     l1743:
  1286                           
  1287                           ;main.c: 42:         TMR0 = 0;
  1288  010D  0195               	clrf	21	;volatile
  1289  010E                     l1745:
  1290                           
  1291                           ;main.c: 43:         TMR0H = 0;
  1292  010E  01C4               	clrf	_TMR0H
  1293  010F  01C5               	clrf	_TMR0H+1
  1294  0110                     l1747:
  1295                           
  1296                           ;main.c: 45:         if(!start){
  1297  0110  0848               	movf	_start,w
  1298  0111  1D03               	btfss	3,2
  1299  0112  2914               	goto	u1111
  1300  0113  2915               	goto	u1110
  1301  0114                     u1111:
  1302  0114  292B               	goto	l1755
  1303  0115                     u1110:
  1304  0115                     l1749:
  1305                           
  1306                           ;main.c: 47:             esc1 = esc2 = esc3 = esc4 = 1000;
  1307  0115  30E8               	movlw	232
  1308  0116  00B8               	movwf	_esc4
  1309  0117  3003               	movlw	3
  1310  0118  00B9               	movwf	_esc4+1
  1311  0119  0839               	movf	_esc4+1,w
  1312  011A  00BB               	movwf	_esc3+1
  1313  011B  0838               	movf	_esc4,w
  1314  011C  00BA               	movwf	_esc3
  1315  011D  083B               	movf	_esc3+1,w
  1316  011E  00BD               	movwf	_esc2+1
  1317  011F  083A               	movf	_esc3,w
  1318  0120  00BC               	movwf	_esc2
  1319  0121  083D               	movf	_esc2+1,w
  1320  0122  00BF               	movwf	_esc1+1
  1321  0123  083C               	movf	_esc2,w
  1322  0124  00BE               	movwf	_esc1
  1323  0125                     l1751:
  1324                           
  1325                           ;main.c: 48:             p.p1 = p.p2 = p.p3 = p.p4 = 0;
  1326  0125  11C9               	bcf	_p,3
  1327  0126  1149               	bcf	_p,2
  1328  0127  10C9               	bcf	_p,1
  1329  0128  1049               	bcf	_p,0
  1330  0129                     l1753:
  1331                           
  1332                           ;main.c: 49:             start = 1;
  1333  0129  01C8               	clrf	_start
  1334  012A  0AC8               	incf	_start,f
  1335  012B                     l1755:
  1336                           
  1337                           ;main.c: 51:         if(start == 1 && ch4 > 1900 && ch3 < 1050){
  1338  012B  0348               	decf	_start,w
  1339  012C  1D03               	btfss	3,2
  1340  012D  292F               	goto	u1121
  1341  012E  2930               	goto	u1120
  1342  012F                     u1121:
  1343  012F  2946               	goto	l1763
  1344  0130                     u1120:
  1345  0130                     l1757:
  1346  0130  3007               	movlw	7
  1347  0131  0243               	subwf	_ch4+1,w
  1348  0132  306D               	movlw	109
  1349  0133  1903               	skipnz
  1350  0134  0242               	subwf	_ch4,w
  1351  0135  1C03               	skipc
  1352  0136  2938               	goto	u1131
  1353  0137  2939               	goto	u1130
  1354  0138                     u1131:
  1355  0138  2946               	goto	l1763
  1356  0139                     u1130:
  1357  0139                     l1759:
  1358  0139  3004               	movlw	4
  1359  013A  0247               	subwf	_ch3+1,w
  1360  013B  301A               	movlw	26
  1361  013C  1903               	skipnz
  1362  013D  0246               	subwf	_ch3,w
  1363  013E  1803               	skipnc
  1364  013F  2941               	goto	u1141
  1365  0140  2942               	goto	u1140
  1366  0141                     u1141:
  1367  0141  2946               	goto	l1763
  1368  0142                     u1140:
  1369  0142                     l1761:
  1370                           
  1371                           ;main.c: 52:             start = 2;
  1372  0142  3002               	movlw	2
  1373  0143  00DC               	movwf	??_main
  1374  0144  085C               	movf	??_main,w
  1375  0145  00C8               	movwf	_start
  1376  0146                     l1763:
  1377                           
  1378                           ;main.c: 55:         if(start == 2 && ch4 < 1600 && ch3 < 1050){
  1379  0146  3002               	movlw	2
  1380  0147  0648               	xorwf	_start,w
  1381  0148  1D03               	btfss	3,2
  1382  0149  294B               	goto	u1151
  1383  014A  294C               	goto	u1150
  1384  014B                     u1151:
  1385  014B  2964               	goto	l1773
  1386  014C                     u1150:
  1387  014C                     l1765:
  1388  014C  3006               	movlw	6
  1389  014D  0243               	subwf	_ch4+1,w
  1390  014E  3040               	movlw	64
  1391  014F  1903               	skipnz
  1392  0150  0242               	subwf	_ch4,w
  1393  0151  1803               	skipnc
  1394  0152  2954               	goto	u1161
  1395  0153  2955               	goto	u1160
  1396  0154                     u1161:
  1397  0154  2964               	goto	l1773
  1398  0155                     u1160:
  1399  0155                     l1767:
  1400  0155  3004               	movlw	4
  1401  0156  0247               	subwf	_ch3+1,w
  1402  0157  301A               	movlw	26
  1403  0158  1903               	skipnz
  1404  0159  0246               	subwf	_ch3,w
  1405  015A  1803               	skipnc
  1406  015B  295D               	goto	u1171
  1407  015C  295E               	goto	u1170
  1408  015D                     u1171:
  1409  015D  2964               	goto	l1773
  1410  015E                     u1170:
  1411  015E                     l1769:
  1412                           
  1413                           ;main.c: 56:             start = 3;
  1414  015E  3003               	movlw	3
  1415  015F  00DC               	movwf	??_main
  1416  0160  085C               	movf	??_main,w
  1417  0161  00C8               	movwf	_start
  1418  0162                     l1771:
  1419                           
  1420                           ;main.c: 57:             LATCbits.LATC7 = 1;
  1421  0162  0022               	movlb	2	; select bank2
  1422  0163  178E               	bsf	14,7	;volatile
  1423  0164                     l1773:
  1424                           
  1425                           ;main.c: 61:         if(start == 3 && ch4 < 1050 && ch3 < 1050){
  1426  0164  3003               	movlw	3
  1427  0165  0020               	movlb	0	; select bank0
  1428  0166  0648               	xorwf	_start,w
  1429  0167  1D03               	btfss	3,2
  1430  0168  296A               	goto	u1181
  1431  0169  296B               	goto	u1180
  1432  016A                     u1181:
  1433  016A  2980               	goto	l1783
  1434  016B                     u1180:
  1435  016B                     l1775:
  1436  016B  3004               	movlw	4
  1437  016C  0243               	subwf	_ch4+1,w
  1438  016D  301A               	movlw	26
  1439  016E  1903               	skipnz
  1440  016F  0242               	subwf	_ch4,w
  1441  0170  1803               	skipnc
  1442  0171  2973               	goto	u1191
  1443  0172  2974               	goto	u1190
  1444  0173                     u1191:
  1445  0173  2980               	goto	l1783
  1446  0174                     u1190:
  1447  0174                     l1777:
  1448  0174  3004               	movlw	4
  1449  0175  0247               	subwf	_ch3+1,w
  1450  0176  301A               	movlw	26
  1451  0177  1903               	skipnz
  1452  0178  0246               	subwf	_ch3,w
  1453  0179  1803               	skipnc
  1454  017A  297C               	goto	u1201
  1455  017B  297D               	goto	u1200
  1456  017C                     u1201:
  1457  017C  2980               	goto	l1783
  1458  017D                     u1200:
  1459  017D                     l1779:
  1460                           
  1461                           ;main.c: 62:             start = 0;
  1462  017D  01C8               	clrf	_start
  1463  017E                     l1781:
  1464                           
  1465                           ;main.c: 63:             LATCbits.LATC7 = 0;
  1466  017E  0022               	movlb	2	; select bank2
  1467  017F  138E               	bcf	14,7	;volatile
  1468  0180                     l1783:
  1469                           
  1470                           ;main.c: 66:         read_sensor();
  1471  0180  3182  22A5  3180   	fcall	_read_sensor
  1472  0183                     l1785:
  1473                           
  1474                           ;main.c: 68:         esc1 = esc2 = esc3 = esc4 = ch3;
  1475  0183  0020               	movlb	0	; select bank0
  1476  0184  0847               	movf	_ch3+1,w
  1477  0185  00B9               	movwf	_esc4+1
  1478  0186  0846               	movf	_ch3,w
  1479  0187  00B8               	movwf	_esc4
  1480  0188  0839               	movf	_esc4+1,w
  1481  0189  00BB               	movwf	_esc3+1
  1482  018A  0838               	movf	_esc4,w
  1483  018B  00BA               	movwf	_esc3
  1484  018C  083B               	movf	_esc3+1,w
  1485  018D  00BD               	movwf	_esc2+1
  1486  018E  083A               	movf	_esc3,w
  1487  018F  00BC               	movwf	_esc2
  1488  0190  083D               	movf	_esc2+1,w
  1489  0191  00BF               	movwf	_esc1+1
  1490  0192  083C               	movf	_esc2,w
  1491  0193  00BE               	movwf	_esc1
  1492  0194                     l1787:
  1493                           
  1494                           ;main.c: 69:         tmrLoop = (TMR0H << 8) | TMR0;
  1495  0194  0815               	movf	21,w	;volatile
  1496  0195  00DC               	movwf	??_main
  1497  0196  01DD               	clrf	??_main+1
  1498  0197  0844               	movf	_TMR0H,w
  1499  0198  00DF               	movwf	??_main+3
  1500  0199  01DE               	clrf	??_main+2
  1501  019A  085C               	movf	??_main,w
  1502  019B  045E               	iorwf	??_main+2,w
  1503  019C  00E0               	movwf	??_main+4
  1504  019D  085D               	movf	??_main+1,w
  1505  019E  045F               	iorwf	??_main+3,w
  1506  019F  00E1               	movwf	??_main+5
  1507  01A0  0860               	movf	??_main+4,w
  1508  01A1  00C0               	movwf	_tmrLoop
  1509  01A2  0861               	movf	??_main+5,w
  1510  01A3  00C1               	movwf	_tmrLoop+1
  1511  01A4                     l1789:
  1512                           
  1513                           ;main.c: 71:         if(start < 3){
  1514  01A4  3003               	movlw	3
  1515  01A5  0248               	subwf	_start,w
  1516  01A6  1803               	skipnc
  1517  01A7  29A9               	goto	u1211
  1518  01A8  29AA               	goto	u1210
  1519  01A9                     u1211:
  1520  01A9  29D4               	goto	l1799
  1521  01AA                     u1210:
  1522  01AA                     l1791:
  1523                           
  1524                           ;main.c: 72:             PORTA |= 0b00010111;
  1525  01AA  3017               	movlw	23
  1526  01AB  00DC               	movwf	??_main
  1527  01AC  085C               	movf	??_main,w
  1528  01AD  048C               	iorwf	12,f	;volatile
  1529  01AE                     l1793:	
  1530                           ;main.c: 73:             while((((TMR0H << 8) | TMR0) - tmrLoop) < 1000 || TMR0 < 0xE8);
  1531                           
  1532  01AE  0815               	movf	21,w	;volatile
  1533  01AF  00DC               	movwf	??_main
  1534  01B0  01DD               	clrf	??_main+1
  1535  01B1  0844               	movf	_TMR0H,w
  1536  01B2  00DF               	movwf	??_main+3
  1537  01B3  01DE               	clrf	??_main+2
  1538  01B4  085C               	movf	??_main,w
  1539  01B5  045E               	iorwf	??_main+2,w
  1540  01B6  00E0               	movwf	??_main+4
  1541  01B7  085D               	movf	??_main+1,w
  1542  01B8  045F               	iorwf	??_main+3,w
  1543  01B9  00E1               	movwf	??_main+5
  1544  01BA  0840               	movf	_tmrLoop,w
  1545  01BB  0260               	subwf	??_main+4,w
  1546  01BC  00E2               	movwf	??_main+6
  1547  01BD  0841               	movf	_tmrLoop+1,w
  1548  01BE  3B61               	subwfb	??_main+5,w
  1549  01BF  00E3               	movwf	??_main+7
  1550  01C0  3003               	movlw	3
  1551  01C1  0263               	subwf	??_main+7,w
  1552  01C2  30E8               	movlw	232
  1553  01C3  1903               	skipnz
  1554  01C4  0262               	subwf	??_main+6,w
  1555  01C5  1C03               	skipc
  1556  01C6  29C8               	goto	u1221
  1557  01C7  29C9               	goto	u1220
  1558  01C8                     u1221:
  1559  01C8  29AE               	goto	l1793
  1560  01C9                     u1220:
  1561  01C9                     l1795:
  1562  01C9  30E8               	movlw	232
  1563  01CA  0215               	subwf	21,w	;volatile
  1564  01CB  1C03               	skipc
  1565  01CC  29CE               	goto	u1231
  1566  01CD  29CF               	goto	u1230
  1567  01CE                     u1231:
  1568  01CE  29AE               	goto	l1793
  1569  01CF                     u1230:
  1570  01CF                     l1797:
  1571                           
  1572                           ;main.c: 74:             PORTA &= 0b11101000;
  1573  01CF  30E8               	movlw	232
  1574  01D0  00DC               	movwf	??_main
  1575  01D1  085C               	movf	??_main,w
  1576  01D2  058C               	andwf	12,f	;volatile
  1577                           
  1578                           ;main.c: 75:         }
  1579  01D3  2A93               	goto	l1823
  1580  01D4                     l1799:
  1581                           
  1582                           ;main.c: 78:             if(esc1 < 1200)esc1 = 1200;
  1583  01D4  3004               	movlw	4
  1584  01D5  023F               	subwf	_esc1+1,w
  1585  01D6  30B0               	movlw	176
  1586  01D7  1903               	skipnz
  1587  01D8  023E               	subwf	_esc1,w
  1588  01D9  1803               	skipnc
  1589  01DA  29DC               	goto	u1241
  1590  01DB  29DD               	goto	u1240
  1591  01DC                     u1241:
  1592  01DC  29E1               	goto	l51
  1593  01DD                     u1240:
  1594  01DD                     l1801:
  1595  01DD  30B0               	movlw	176
  1596  01DE  00BE               	movwf	_esc1
  1597  01DF  3004               	movlw	4
  1598  01E0  00BF               	movwf	_esc1+1
  1599  01E1                     l51:
  1600                           
  1601                           ;main.c: 79:             if(esc2 < 1200)esc2 = 1200;
  1602  01E1  3004               	movlw	4
  1603  01E2  023D               	subwf	_esc2+1,w
  1604  01E3  30B0               	movlw	176
  1605  01E4  1903               	skipnz
  1606  01E5  023C               	subwf	_esc2,w
  1607  01E6  1803               	skipnc
  1608  01E7  29E9               	goto	u1251
  1609  01E8  29EA               	goto	u1250
  1610  01E9                     u1251:
  1611  01E9  29EE               	goto	l52
  1612  01EA                     u1250:
  1613  01EA                     l1803:
  1614  01EA  30B0               	movlw	176
  1615  01EB  00BC               	movwf	_esc2
  1616  01EC  3004               	movlw	4
  1617  01ED  00BD               	movwf	_esc2+1
  1618  01EE                     l52:
  1619                           
  1620                           ;main.c: 80:             if(esc3 < 1200)esc3 = 1200;
  1621  01EE  3004               	movlw	4
  1622  01EF  023B               	subwf	_esc3+1,w
  1623  01F0  30B0               	movlw	176
  1624  01F1  1903               	skipnz
  1625  01F2  023A               	subwf	_esc3,w
  1626  01F3  1803               	skipnc
  1627  01F4  29F6               	goto	u1261
  1628  01F5  29F7               	goto	u1260
  1629  01F6                     u1261:
  1630  01F6  29FB               	goto	l53
  1631  01F7                     u1260:
  1632  01F7                     l1805:
  1633  01F7  30B0               	movlw	176
  1634  01F8  00BA               	movwf	_esc3
  1635  01F9  3004               	movlw	4
  1636  01FA  00BB               	movwf	_esc3+1
  1637  01FB                     l53:
  1638                           
  1639                           ;main.c: 81:             if(esc4 < 1200)esc4 = 1200;
  1640  01FB  3004               	movlw	4
  1641  01FC  0239               	subwf	_esc4+1,w
  1642  01FD  30B0               	movlw	176
  1643  01FE  1903               	skipnz
  1644  01FF  0238               	subwf	_esc4,w
  1645  0200  1803               	skipnc
  1646  0201  2A03               	goto	u1271
  1647  0202  2A04               	goto	u1270
  1648  0203                     u1271:
  1649  0203  2A08               	goto	l1809
  1650  0204                     u1270:
  1651  0204                     l1807:
  1652  0204  30B0               	movlw	176
  1653  0205  00B8               	movwf	_esc4
  1654  0206  3004               	movlw	4
  1655  0207  00B9               	movwf	_esc4+1
  1656  0208                     l1809:
  1657                           
  1658                           ;main.c: 82:             PORTA |= 0b00010111;
  1659  0208  3017               	movlw	23
  1660  0209  00DC               	movwf	??_main
  1661  020A  085C               	movf	??_main,w
  1662  020B  048C               	iorwf	12,f	;volatile
  1663                           
  1664                           ;main.c: 83:             while((PORTA & 0b00010111) > 0){
  1665  020C  2A8D               	goto	l1821
  1666  020D                     l1811:
  1667                           
  1668                           ;main.c: 84:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc1)PORTA &= 0b1111
      +                          1110;
  1669  020D  0815               	movf	21,w	;volatile
  1670  020E  00DC               	movwf	??_main
  1671  020F  01DD               	clrf	??_main+1
  1672  0210  0844               	movf	_TMR0H,w
  1673  0211  00DF               	movwf	??_main+3
  1674  0212  01DE               	clrf	??_main+2
  1675  0213  085C               	movf	??_main,w
  1676  0214  045E               	iorwf	??_main+2,w
  1677  0215  00E0               	movwf	??_main+4
  1678  0216  085D               	movf	??_main+1,w
  1679  0217  045F               	iorwf	??_main+3,w
  1680  0218  00E1               	movwf	??_main+5
  1681  0219  0840               	movf	_tmrLoop,w
  1682  021A  0260               	subwf	??_main+4,w
  1683  021B  00E2               	movwf	??_main+6
  1684  021C  0841               	movf	_tmrLoop+1,w
  1685  021D  3B61               	subwfb	??_main+5,w
  1686  021E  00E3               	movwf	??_main+7
  1687  021F  0863               	movf	??_main+7,w
  1688  0220  023F               	subwf	_esc1+1,w
  1689  0221  1D03               	skipz
  1690  0222  2A25               	goto	u1285
  1691  0223  0862               	movf	??_main+6,w
  1692  0224  023E               	subwf	_esc1,w
  1693  0225                     u1285:
  1694  0225  1803               	skipnc
  1695  0226  2A28               	goto	u1281
  1696  0227  2A29               	goto	u1280
  1697  0228                     u1281:
  1698  0228  2A2D               	goto	l57
  1699  0229                     u1280:
  1700  0229                     l1813:
  1701  0229  30FE               	movlw	254
  1702  022A  00DC               	movwf	??_main
  1703  022B  085C               	movf	??_main,w
  1704  022C  058C               	andwf	12,f	;volatile
  1705  022D                     l57:
  1706                           
  1707                           ;main.c: 85:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc2)PORTA &= 0b1111
      +                          1101;
  1708  022D  0815               	movf	21,w	;volatile
  1709  022E  00DC               	movwf	??_main
  1710  022F  01DD               	clrf	??_main+1
  1711  0230  0844               	movf	_TMR0H,w
  1712  0231  00DF               	movwf	??_main+3
  1713  0232  01DE               	clrf	??_main+2
  1714  0233  085C               	movf	??_main,w
  1715  0234  045E               	iorwf	??_main+2,w
  1716  0235  00E0               	movwf	??_main+4
  1717  0236  085D               	movf	??_main+1,w
  1718  0237  045F               	iorwf	??_main+3,w
  1719  0238  00E1               	movwf	??_main+5
  1720  0239  0840               	movf	_tmrLoop,w
  1721  023A  0260               	subwf	??_main+4,w
  1722  023B  00E2               	movwf	??_main+6
  1723  023C  0841               	movf	_tmrLoop+1,w
  1724  023D  3B61               	subwfb	??_main+5,w
  1725  023E  00E3               	movwf	??_main+7
  1726  023F  0863               	movf	??_main+7,w
  1727  0240  023D               	subwf	_esc2+1,w
  1728  0241  1D03               	skipz
  1729  0242  2A45               	goto	u1295
  1730  0243  0862               	movf	??_main+6,w
  1731  0244  023C               	subwf	_esc2,w
  1732  0245                     u1295:
  1733  0245  1803               	skipnc
  1734  0246  2A48               	goto	u1291
  1735  0247  2A49               	goto	u1290
  1736  0248                     u1291:
  1737  0248  2A4D               	goto	l58
  1738  0249                     u1290:
  1739  0249                     l1815:
  1740  0249  30FD               	movlw	253
  1741  024A  00DC               	movwf	??_main
  1742  024B  085C               	movf	??_main,w
  1743  024C  058C               	andwf	12,f	;volatile
  1744  024D                     l58:
  1745                           
  1746                           ;main.c: 86:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc3)PORTA &= 0b1111
      +                          1011;
  1747  024D  0815               	movf	21,w	;volatile
  1748  024E  00DC               	movwf	??_main
  1749  024F  01DD               	clrf	??_main+1
  1750  0250  0844               	movf	_TMR0H,w
  1751  0251  00DF               	movwf	??_main+3
  1752  0252  01DE               	clrf	??_main+2
  1753  0253  085C               	movf	??_main,w
  1754  0254  045E               	iorwf	??_main+2,w
  1755  0255  00E0               	movwf	??_main+4
  1756  0256  085D               	movf	??_main+1,w
  1757  0257  045F               	iorwf	??_main+3,w
  1758  0258  00E1               	movwf	??_main+5
  1759  0259  0840               	movf	_tmrLoop,w
  1760  025A  0260               	subwf	??_main+4,w
  1761  025B  00E2               	movwf	??_main+6
  1762  025C  0841               	movf	_tmrLoop+1,w
  1763  025D  3B61               	subwfb	??_main+5,w
  1764  025E  00E3               	movwf	??_main+7
  1765  025F  0863               	movf	??_main+7,w
  1766  0260  023B               	subwf	_esc3+1,w
  1767  0261  1D03               	skipz
  1768  0262  2A65               	goto	u1305
  1769  0263  0862               	movf	??_main+6,w
  1770  0264  023A               	subwf	_esc3,w
  1771  0265                     u1305:
  1772  0265  1803               	skipnc
  1773  0266  2A68               	goto	u1301
  1774  0267  2A69               	goto	u1300
  1775  0268                     u1301:
  1776  0268  2A6D               	goto	l59
  1777  0269                     u1300:
  1778  0269                     l1817:
  1779  0269  30FB               	movlw	251
  1780  026A  00DC               	movwf	??_main
  1781  026B  085C               	movf	??_main,w
  1782  026C  058C               	andwf	12,f	;volatile
  1783  026D                     l59:
  1784                           
  1785                           ;main.c: 87:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc4)PORTA &= 0b1110
      +                          1111;
  1786  026D  0815               	movf	21,w	;volatile
  1787  026E  00DC               	movwf	??_main
  1788  026F  01DD               	clrf	??_main+1
  1789  0270  0844               	movf	_TMR0H,w
  1790  0271  00DF               	movwf	??_main+3
  1791  0272  01DE               	clrf	??_main+2
  1792  0273  085C               	movf	??_main,w
  1793  0274  045E               	iorwf	??_main+2,w
  1794  0275  00E0               	movwf	??_main+4
  1795  0276  085D               	movf	??_main+1,w
  1796  0277  045F               	iorwf	??_main+3,w
  1797  0278  00E1               	movwf	??_main+5
  1798  0279  0840               	movf	_tmrLoop,w
  1799  027A  0260               	subwf	??_main+4,w
  1800  027B  00E2               	movwf	??_main+6
  1801  027C  0841               	movf	_tmrLoop+1,w
  1802  027D  3B61               	subwfb	??_main+5,w
  1803  027E  00E3               	movwf	??_main+7
  1804  027F  0863               	movf	??_main+7,w
  1805  0280  0239               	subwf	_esc4+1,w
  1806  0281  1D03               	skipz
  1807  0282  2A85               	goto	u1315
  1808  0283  0862               	movf	??_main+6,w
  1809  0284  0238               	subwf	_esc4,w
  1810  0285                     u1315:
  1811  0285  1803               	skipnc
  1812  0286  2A88               	goto	u1311
  1813  0287  2A89               	goto	u1310
  1814  0288                     u1311:
  1815  0288  2A8D               	goto	l1821
  1816  0289                     u1310:
  1817  0289                     l1819:
  1818  0289  30EF               	movlw	239
  1819  028A  00DC               	movwf	??_main
  1820  028B  085C               	movf	??_main,w
  1821  028C  058C               	andwf	12,f	;volatile
  1822  028D                     l1821:
  1823                           
  1824                           ;main.c: 83:             while((PORTA & 0b00010111) > 0){
  1825  028D  080C               	movf	12,w	;volatile
  1826  028E  3917               	andlw	23
  1827  028F  1D03               	btfss	3,2
  1828  0290  2A92               	goto	u1321
  1829  0291  2A93               	goto	u1320
  1830  0292                     u1321:
  1831  0292  2A0D               	goto	l1811
  1832  0293                     u1320:
  1833  0293                     l1823:
  1834  0293  3000               	movlw	0
  1835  0294  0245               	subwf	_TMR0H+1,w
  1836  0295  304E               	movlw	78
  1837  0296  1903               	skipnz
  1838  0297  0244               	subwf	_TMR0H,w
  1839  0298  1C03               	skipc
  1840  0299  2A9B               	goto	u1331
  1841  029A  2A9C               	goto	u1330
  1842  029B                     u1331:
  1843  029B  2A93               	goto	l1823
  1844  029C                     u1330:
  1845  029C                     l1825:
  1846  029C  3014               	movlw	20
  1847  029D  0215               	subwf	21,w	;volatile
  1848  029E  1C03               	skipc
  1849  029F  2AA1               	goto	u1341
  1850  02A0  2AA2               	goto	u1340
  1851  02A1                     u1341:
  1852  02A1  2A93               	goto	l1823
  1853  02A2                     u1340:
  1854  02A2  290B               	goto	l1741
  1855  02A3  3180  28E8         	ljmp	start
  1856  02A5                     __end_of_main:
  1857                           
  1858                           	psect	text1
  1859  02A5                     __ptext1:	
  1860 ;; *************** function _read_sensor *****************
  1861 ;; Defined at:
  1862 ;;		line 72 in file "config.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;Total ram usage:        1 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    4
  1883 ;; This function calls:
  1884 ;;		_i2c_read
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _read_sensor
  1892  02A5                     _read_sensor:
  1893  02A5                     l1731:	
  1894                           ;incstack = 0
  1895                           ; Regs used in _read_sensor: [wreg+status,2+status,0+pclath+cstack]
  1896                           
  1897                           
  1898                           ;config.c: 73:     gyrox = i2c_read(0xD2, 0xA8);
  1899  02A5  30A8               	movlw	168
  1900  02A6  0020               	movlb	0	; select bank0
  1901  02A7  00DB               	movwf	??_read_sensor
  1902  02A8  085B               	movf	??_read_sensor,w
  1903  02A9  00D1               	movwf	i2c_read@subaddress
  1904  02AA  30D2               	movlw	210
  1905  02AB  3183  231C  3182   	fcall	_i2c_read
  1906  02AE  0020               	movlb	0	; select bank0
  1907  02AF  0852               	movf	?_i2c_read+1,w
  1908  02B0  00B1               	movwf	_gyrox+1
  1909  02B1  0851               	movf	?_i2c_read,w
  1910  02B2  00B0               	movwf	_gyrox
  1911                           
  1912                           ;config.c: 74:     gyroy = i2c_read(0xD2, 0xAA);
  1913  02B3  30AA               	movlw	170
  1914  02B4  00DB               	movwf	??_read_sensor
  1915  02B5  085B               	movf	??_read_sensor,w
  1916  02B6  00D1               	movwf	i2c_read@subaddress
  1917  02B7  30D2               	movlw	210
  1918  02B8  3183  231C  3182   	fcall	_i2c_read
  1919  02BB  0020               	movlb	0	; select bank0
  1920  02BC  0852               	movf	?_i2c_read+1,w
  1921  02BD  00AF               	movwf	_gyroy+1
  1922  02BE  0851               	movf	?_i2c_read,w
  1923  02BF  00AE               	movwf	_gyroy
  1924                           
  1925                           ;config.c: 75:     gyroz = i2c_read(0xD2, 0xAC);
  1926  02C0  30AC               	movlw	172
  1927  02C1  00DB               	movwf	??_read_sensor
  1928  02C2  085B               	movf	??_read_sensor,w
  1929  02C3  00D1               	movwf	i2c_read@subaddress
  1930  02C4  30D2               	movlw	210
  1931  02C5  3183  231C  3182   	fcall	_i2c_read
  1932  02C8  0020               	movlb	0	; select bank0
  1933  02C9  0852               	movf	?_i2c_read+1,w
  1934  02CA  00AD               	movwf	_gyroz+1
  1935  02CB  0851               	movf	?_i2c_read,w
  1936  02CC  00AC               	movwf	_gyroz
  1937                           
  1938                           ;config.c: 76:     accx = i2c_read(0x32, 0xA8);
  1939  02CD  30A8               	movlw	168
  1940  02CE  00DB               	movwf	??_read_sensor
  1941  02CF  085B               	movf	??_read_sensor,w
  1942  02D0  00D1               	movwf	i2c_read@subaddress
  1943  02D1  3032               	movlw	50
  1944  02D2  3183  231C  3182   	fcall	_i2c_read
  1945  02D5  0020               	movlb	0	; select bank0
  1946  02D6  0852               	movf	?_i2c_read+1,w
  1947  02D7  00B7               	movwf	_accx+1
  1948  02D8  0851               	movf	?_i2c_read,w
  1949  02D9  00B6               	movwf	_accx
  1950                           
  1951                           ;config.c: 77:     accy = i2c_read(0x32, 0xAA);
  1952  02DA  30AA               	movlw	170
  1953  02DB  00DB               	movwf	??_read_sensor
  1954  02DC  085B               	movf	??_read_sensor,w
  1955  02DD  00D1               	movwf	i2c_read@subaddress
  1956  02DE  3032               	movlw	50
  1957  02DF  3183  231C  3182   	fcall	_i2c_read
  1958  02E2  0020               	movlb	0	; select bank0
  1959  02E3  0852               	movf	?_i2c_read+1,w
  1960  02E4  00B5               	movwf	_accy+1
  1961  02E5  0851               	movf	?_i2c_read,w
  1962  02E6  00B4               	movwf	_accy
  1963                           
  1964                           ;config.c: 78:     accz = i2c_read(0x32, 0xAC);
  1965  02E7  30AC               	movlw	172
  1966  02E8  00DB               	movwf	??_read_sensor
  1967  02E9  085B               	movf	??_read_sensor,w
  1968  02EA  00D1               	movwf	i2c_read@subaddress
  1969  02EB  3032               	movlw	50
  1970  02EC  3183  231C  3182   	fcall	_i2c_read
  1971  02EF  0020               	movlb	0	; select bank0
  1972  02F0  0852               	movf	?_i2c_read+1,w
  1973  02F1  00B3               	movwf	_accz+1
  1974  02F2  0851               	movf	?_i2c_read,w
  1975  02F3  00B2               	movwf	_accz
  1976                           
  1977                           ;config.c: 79:     magx = i2c_read(0x3C, 0x83);
  1978  02F4  3083               	movlw	131
  1979  02F5  00DB               	movwf	??_read_sensor
  1980  02F6  085B               	movf	??_read_sensor,w
  1981  02F7  00D1               	movwf	i2c_read@subaddress
  1982  02F8  303C               	movlw	60
  1983  02F9  3183  231C  3182   	fcall	_i2c_read
  1984  02FC  0020               	movlb	0	; select bank0
  1985  02FD  0852               	movf	?_i2c_read+1,w
  1986  02FE  00AB               	movwf	_magx+1
  1987  02FF  0851               	movf	?_i2c_read,w
  1988  0300  00AA               	movwf	_magx
  1989                           
  1990                           ;config.c: 80:     magy = i2c_read(0x3C, 0x85);
  1991  0301  3085               	movlw	133
  1992  0302  00DB               	movwf	??_read_sensor
  1993  0303  085B               	movf	??_read_sensor,w
  1994  0304  00D1               	movwf	i2c_read@subaddress
  1995  0305  303C               	movlw	60
  1996  0306  3183  231C  3182   	fcall	_i2c_read
  1997  0309  0020               	movlb	0	; select bank0
  1998  030A  0852               	movf	?_i2c_read+1,w
  1999  030B  00A9               	movwf	_magy+1
  2000  030C  0851               	movf	?_i2c_read,w
  2001  030D  00A8               	movwf	_magy
  2002                           
  2003                           ;config.c: 81:     magz = i2c_read(0x3C, 0x87);
  2004  030E  3087               	movlw	135
  2005  030F  00DB               	movwf	??_read_sensor
  2006  0310  085B               	movf	??_read_sensor,w
  2007  0311  00D1               	movwf	i2c_read@subaddress
  2008  0312  303C               	movlw	60
  2009  0313  3183  231C  3182   	fcall	_i2c_read
  2010  0316  0020               	movlb	0	; select bank0
  2011  0317  0852               	movf	?_i2c_read+1,w
  2012  0318  00A7               	movwf	_magz+1
  2013  0319  0851               	movf	?_i2c_read,w
  2014  031A  00A6               	movwf	_magz
  2015  031B                     l215:
  2016  031B  0008               	return
  2017  031C                     __end_of_read_sensor:
  2018                           
  2019                           	psect	text2
  2020  031C                     __ptext2:	
  2021 ;; *************** function _i2c_read *****************
  2022 ;; Defined at:
  2023 ;;		line 98 in file "config.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  address         1    wreg     unsigned char 
  2026 ;;  subaddress      1    7[BANK0 ] unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  address         1   16[BANK0 ] unsigned char 
  2029 ;;  high            2   14[BANK0 ] int 
  2030 ;;  low             2   12[BANK0 ] int 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2    7[BANK0 ] int 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2042 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;Total ram usage:       10 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    3
  2047 ;; This function calls:
  2048 ;;		_i2c_read_byte
  2049 ;;		_i2c_restart
  2050 ;;		_i2c_start
  2051 ;;		_i2c_stop
  2052 ;;		_i2c_write_byte
  2053 ;;		_nack
  2054 ;; This function is called by:
  2055 ;;		_read_sensor
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _i2c_read
  2061  031C                     _i2c_read:
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2065                           ;i2c_read@address stored from wreg
  2066  031C  0020               	movlb	0	; select bank0
  2067  031D  00DA               	movwf	i2c_read@address
  2068  031E                     l1625:
  2069                           
  2070                           ;config.c: 99:     int low, high;;config.c: 100:     i2c_start();
  2071  031E  3184  24C9  3183   	fcall	_i2c_start
  2072  0321                     l1627:
  2073                           
  2074                           ;config.c: 101:     i2c_write_byte(address);
  2075  0321  0020               	movlb	0	; select bank0
  2076  0322  085A               	movf	i2c_read@address,w
  2077  0323  3184  2490  3183   	fcall	_i2c_write_byte
  2078  0326                     l1629:
  2079                           
  2080                           ;config.c: 102:     if(nack())
  2081  0326  3184  24A5  3183   	fcall	_nack
  2082  0329  0020               	movlb	0	; select bank0
  2083  032A  084A               	movf	?_nack,w
  2084  032B  044B               	iorwf	?_nack+1,w
  2085  032C  1903               	btfsc	3,2
  2086  032D  2B2F               	goto	u1061
  2087  032E  2B30               	goto	u1060
  2088  032F                     u1061:
  2089  032F  2B33               	goto	l1635
  2090  0330                     u1060:
  2091  0330                     l1631:
  2092                           
  2093                           ;config.c: 103:         return 0;
  2094  0330  01D1               	clrf	?_i2c_read
  2095  0331  01D2               	clrf	?_i2c_read+1
  2096  0332  2B8D               	goto	l225
  2097  0333                     l1635:
  2098                           
  2099                           ;config.c: 105:     i2c_write_byte(subaddress);
  2100  0333  0851               	movf	i2c_read@subaddress,w
  2101  0334  3184  2490  3183   	fcall	_i2c_write_byte
  2102                           
  2103                           ;config.c: 106:     if(nack())
  2104  0337  3184  24A5  3183   	fcall	_nack
  2105  033A  0020               	movlb	0	; select bank0
  2106  033B  084A               	movf	?_nack,w
  2107  033C  044B               	iorwf	?_nack+1,w
  2108  033D  1903               	btfsc	3,2
  2109  033E  2B40               	goto	u1071
  2110  033F  2B41               	goto	u1070
  2111  0340                     u1071:
  2112  0340  2B42               	goto	l1641
  2113  0341                     u1070:
  2114  0341  2B30               	goto	l1631
  2115  0342                     l1641:
  2116                           
  2117                           ;config.c: 108:     i2c_restart();
  2118  0342  3184  24B7  3183   	fcall	_i2c_restart
  2119  0345                     l1643:
  2120                           
  2121                           ;config.c: 109:     i2c_write_byte(address | 1);
  2122  0345  0020               	movlb	0	; select bank0
  2123  0346  085A               	movf	i2c_read@address,w
  2124  0347  3801               	iorlw	1
  2125  0348  3184  2490  3183   	fcall	_i2c_write_byte
  2126  034B                     l1645:
  2127                           
  2128                           ;config.c: 110:     if(nack())
  2129  034B  3184  24A5  3183   	fcall	_nack
  2130  034E  0020               	movlb	0	; select bank0
  2131  034F  084A               	movf	?_nack,w
  2132  0350  044B               	iorwf	?_nack+1,w
  2133  0351  1903               	btfsc	3,2
  2134  0352  2B54               	goto	u1081
  2135  0353  2B55               	goto	u1080
  2136  0354                     u1081:
  2137  0354  2B56               	goto	l1651
  2138  0355                     u1080:
  2139  0355  2B30               	goto	l1631
  2140  0356                     l1651:
  2141                           
  2142                           ;config.c: 112:     low = i2c_read_byte(0);
  2143  0356  3000               	movlw	0
  2144  0357  3184  246D  3183   	fcall	_i2c_read_byte
  2145  035A  0020               	movlb	0	; select bank0
  2146  035B  084B               	movf	?_i2c_read_byte+1,w
  2147  035C  00D7               	movwf	i2c_read@low+1
  2148  035D  084A               	movf	?_i2c_read_byte,w
  2149  035E  00D6               	movwf	i2c_read@low
  2150                           
  2151                           ;config.c: 113:     high = i2c_read_byte(1);
  2152  035F  3001               	movlw	1
  2153  0360  3184  246D  3183   	fcall	_i2c_read_byte
  2154  0363  0020               	movlb	0	; select bank0
  2155  0364  084B               	movf	?_i2c_read_byte+1,w
  2156  0365  00D9               	movwf	i2c_read@high+1
  2157  0366  084A               	movf	?_i2c_read_byte,w
  2158  0367  00D8               	movwf	i2c_read@high
  2159  0368                     l1653:
  2160                           
  2161                           ;config.c: 114:     i2c_stop();
  2162  0368  3184  24C0  3183   	fcall	_i2c_stop
  2163  036B                     l1655:
  2164                           
  2165                           ;config.c: 115:     if(address != 0x3C)
  2166  036B  303C               	movlw	60
  2167  036C  0020               	movlb	0	; select bank0
  2168  036D  065A               	xorwf	i2c_read@address,w
  2169  036E  1903               	btfsc	3,2
  2170  036F  2B71               	goto	u1091
  2171  0370  2B72               	goto	u1090
  2172  0371                     u1091:
  2173  0371  2B80               	goto	l1663
  2174  0372                     u1090:
  2175  0372                     l1657:
  2176                           
  2177                           ;config.c: 116:         return((high << 8) | low);
  2178  0372  0859               	movf	i2c_read@high+1,w
  2179  0373  00D4               	movwf	??_i2c_read+1
  2180  0374  0858               	movf	i2c_read@high,w
  2181  0375  00D3               	movwf	??_i2c_read
  2182  0376  0853               	movf	??_i2c_read,w
  2183  0377  00D4               	movwf	??_i2c_read+1
  2184  0378  01D3               	clrf	??_i2c_read
  2185  0379  0856               	movf	i2c_read@low,w
  2186  037A  0453               	iorwf	??_i2c_read,w
  2187  037B  00D1               	movwf	?_i2c_read
  2188  037C  0857               	movf	i2c_read@low+1,w
  2189  037D  0454               	iorwf	??_i2c_read+1,w
  2190  037E  00D2               	movwf	?_i2c_read+1
  2191  037F  2B8D               	goto	l225
  2192  0380                     l1663:
  2193                           
  2194                           ;config.c: 118:         return((low << 8) | high);
  2195  0380  0857               	movf	i2c_read@low+1,w
  2196  0381  00D4               	movwf	??_i2c_read+1
  2197  0382  0856               	movf	i2c_read@low,w
  2198  0383  00D3               	movwf	??_i2c_read
  2199  0384  0853               	movf	??_i2c_read,w
  2200  0385  00D4               	movwf	??_i2c_read+1
  2201  0386  01D3               	clrf	??_i2c_read
  2202  0387  0858               	movf	i2c_read@high,w
  2203  0388  0453               	iorwf	??_i2c_read,w
  2204  0389  00D1               	movwf	?_i2c_read
  2205  038A  0859               	movf	i2c_read@high+1,w
  2206  038B  0454               	iorwf	??_i2c_read+1,w
  2207  038C  00D2               	movwf	?_i2c_read+1
  2208  038D                     l225:
  2209  038D  0008               	return
  2210  038E                     __end_of_i2c_read:
  2211                           
  2212                           	psect	text3
  2213  04B7                     __ptext3:	
  2214 ;; *************** function _i2c_restart *****************
  2215 ;; Defined at:
  2216 ;;		line 149 in file "config.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		None
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_i2c_read
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _i2c_restart
  2246  04B7                     _i2c_restart:
  2247  04B7                     l1591:	
  2248                           ;incstack = 0
  2249                           ; Regs used in _i2c_restart: []
  2250                           
  2251                           
  2252                           ;config.c: 150:     SSPCON2bits.RSEN = 1;
  2253  04B7  0024               	movlb	4	; select bank4
  2254  04B8  1496               	bsf	22,1	;volatile
  2255  04B9                     l251:	
  2256                           ;config.c: 151:     while(SSPCON2bits.RSEN);
  2257                           
  2258  04B9  1896               	btfsc	22,1	;volatile
  2259  04BA  2CBC               	goto	u1001
  2260  04BB  2CBD               	goto	u1000
  2261  04BC                     u1001:
  2262  04BC  2CB9               	goto	l251
  2263  04BD                     u1000:
  2264  04BD                     l253:
  2265                           
  2266                           ;config.c: 152:     PIR1bits.SSP1IF = 0;
  2267  04BD  0020               	movlb	0	; select bank0
  2268  04BE  1190               	bcf	16,3	;volatile
  2269  04BF                     l254:
  2270  04BF  0008               	return
  2271  04C0                     __end_of_i2c_restart:
  2272                           
  2273                           	psect	text4
  2274  046D                     __ptext4:	
  2275 ;; *************** function _i2c_read_byte *****************
  2276 ;; Defined at:
  2277 ;;		line 121 in file "config.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  ack             1    wreg     unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  ack             1    4[BANK0 ] unsigned char 
  2282 ;;  temp            2    5[BANK0 ] int 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  2    0[BANK0 ] int 
  2285 ;; Registers used:
  2286 ;;		wreg, status,0
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2296 ;;Total ram usage:        7 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_i2c_read
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function _i2c_read_byte
  2308  046D                     _i2c_read_byte:
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _i2c_read_byte: [wreg+status,0]
  2312                           ;i2c_read_byte@ack stored from wreg
  2313  046D  0020               	movlb	0	; select bank0
  2314  046E  00CE               	movwf	i2c_read_byte@ack
  2315  046F                     l1593:
  2316                           
  2317                           ;config.c: 122:     int temp;;config.c: 123:     SSP1CON2bits.RCEN = 1;
  2318  046F  0024               	movlb	4	; select bank4
  2319  0470  1596               	bsf	22,3	;volatile
  2320  0471                     l232:	
  2321                           ;config.c: 124:     while(RCEN);
  2322                           
  2323  0471  1996               	btfsc	22,3	;volatile
  2324  0472  2C74               	goto	u1011
  2325  0473  2C75               	goto	u1010
  2326  0474                     u1011:
  2327  0474  2C71               	goto	l232
  2328  0475                     u1010:
  2329  0475                     l1595:
  2330                           
  2331                           ;config.c: 125:     temp = SSP1BUF;
  2332  0475  0811               	movf	17,w	;volatile
  2333  0476  0020               	movlb	0	; select bank0
  2334  0477  00CC               	movwf	??_i2c_read_byte
  2335  0478  01CD               	clrf	??_i2c_read_byte+1
  2336  0479  084C               	movf	??_i2c_read_byte,w
  2337  047A  00CF               	movwf	i2c_read_byte@temp
  2338  047B  084D               	movf	??_i2c_read_byte+1,w
  2339  047C  00D0               	movwf	i2c_read_byte@temp+1
  2340  047D                     l1597:
  2341                           
  2342                           ;config.c: 126:     PIR1bits.SSP1IF = 0;
  2343  047D  1190               	bcf	16,3	;volatile
  2344  047E                     l1599:
  2345                           
  2346                           ;config.c: 128:     SSP1CON2bits.ACKDT = ack;
  2347  047E  0C4E               	rrf	i2c_read_byte@ack,w
  2348  047F  0024               	movlb	4	; select bank4
  2349  0480  1C03               	skipc
  2350  0481  1296               	bcf	22,5	;volatile
  2351  0482  1803               	skipnc
  2352  0483  1696               	bsf	22,5	;volatile
  2353  0484                     l1601:
  2354                           
  2355                           ;config.c: 129:     SSP1CON2bits.ACKEN = 1;
  2356  0484  1616               	bsf	22,4	;volatile
  2357  0485                     l235:	
  2358                           ;config.c: 130:     while(SSP1CON2bits.ACKEN);
  2359                           
  2360  0485  1A16               	btfsc	22,4	;volatile
  2361  0486  2C88               	goto	u1021
  2362  0487  2C89               	goto	u1020
  2363  0488                     u1021:
  2364  0488  2C85               	goto	l235
  2365  0489                     u1020:
  2366  0489                     l237:
  2367                           
  2368                           ;config.c: 131:     PIR1bits.SSP1IF = 0;
  2369  0489  0020               	movlb	0	; select bank0
  2370  048A  1190               	bcf	16,3	;volatile
  2371  048B                     l1603:
  2372                           
  2373                           ;config.c: 132:     return temp;
  2374  048B  0850               	movf	i2c_read_byte@temp+1,w
  2375  048C  00CB               	movwf	?_i2c_read_byte+1
  2376  048D  084F               	movf	i2c_read_byte@temp,w
  2377  048E  00CA               	movwf	?_i2c_read_byte
  2378  048F                     l238:
  2379  048F  0008               	return
  2380  0490                     __end_of_i2c_read_byte:
  2381                           
  2382                           	psect	text5
  2383  038E                     __ptext5:	
  2384 ;; *************** function _pic_init *****************
  2385 ;; Defined at:
  2386 ;;		line 10 in file "config.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _pic_init
  2416  038E                     _pic_init:
  2417  038E                     l1667:	
  2418                           ;incstack = 0
  2419                           ; Regs used in _pic_init: [wreg+status,2+status,0]
  2420                           
  2421                           
  2422                           ;config.c: 13:     OSCCONbits.IRCF = 0b1110;
  2423  038E  0021               	movlb	1	; select bank1
  2424  038F  0819               	movf	25,w	;volatile
  2425  0390  3987               	andlw	-121
  2426  0391  3870               	iorlw	112
  2427  0392  0099               	movwf	25	;volatile
  2428                           
  2429                           ;config.c: 14:     OSCCONbits.SCS = 0;
  2430  0393  30FC               	movlw	-4
  2431  0394  0599               	andwf	25,f	;volatile
  2432  0395                     l206:	
  2433                           ;config.c: 15:     while(!OSCSTATbits.PLLR);
  2434                           
  2435  0395  1F1A               	btfss	26,6	;volatile
  2436  0396  2B98               	goto	u1101
  2437  0397  2B99               	goto	u1100
  2438  0398                     u1101:
  2439  0398  2B95               	goto	l206
  2440  0399                     u1100:
  2441  0399                     l208:
  2442                           
  2443                           ;config.c: 17:     INTCONbits.GIE = 1;
  2444  0399  178B               	bsf	11,7	;volatile
  2445                           
  2446                           ;config.c: 18:     INTCONbits.IOCIE = 1;
  2447  039A  158B               	bsf	11,3	;volatile
  2448                           
  2449                           ;config.c: 19:     INTCONbits.PEIE = 1;
  2450  039B  170B               	bsf	11,6	;volatile
  2451                           
  2452                           ;config.c: 20:     PIE1bits.TMR2IE = 1;
  2453  039C  1490               	bsf	16,1	;volatile
  2454                           
  2455                           ;config.c: 21:     INTCONbits.TMR0IE = 1;
  2456  039D  168B               	bsf	11,5	;volatile
  2457  039E                     l1669:
  2458                           
  2459                           ;config.c: 22:     IOCCP = 0b01111000;
  2460  039E  3078               	movlw	120
  2461  039F  0027               	movlb	7	; select bank7
  2462  03A0  0097               	movwf	23	;volatile
  2463  03A1                     l1671:
  2464                           
  2465                           ;config.c: 26:     OPTION_REGbits.TMR0CS = 0;
  2466  03A1  0021               	movlb	1	; select bank1
  2467  03A2  1295               	bcf	21,5	;volatile
  2468  03A3                     l1673:
  2469                           
  2470                           ;config.c: 27:     OPTION_REGbits.PSA = 0;
  2471  03A3  1195               	bcf	21,3	;volatile
  2472  03A4                     l1675:
  2473                           
  2474                           ;config.c: 28:     OPTION_REGbits.PS = 2;
  2475  03A4  0815               	movf	21,w	;volatile
  2476  03A5  39F8               	andlw	-8
  2477  03A6  3802               	iorlw	2
  2478  03A7  0095               	movwf	21	;volatile
  2479  03A8                     l1677:
  2480                           
  2481                           ;config.c: 30:     T1CONbits.TMR1CS = 0;
  2482  03A8  303F               	movlw	-193
  2483  03A9  0020               	movlb	0	; select bank0
  2484  03AA  0598               	andwf	24,f	;volatile
  2485  03AB                     l1679:
  2486                           
  2487                           ;config.c: 31:     T1CONbits.T1CKPS = 3;
  2488  03AB  3030               	movlw	48
  2489  03AC  0498               	iorwf	24,f	;volatile
  2490  03AD                     l1681:
  2491                           
  2492                           ;config.c: 33:     T3CONbits.TMR3CS = 0;
  2493  03AD  303F               	movlw	-193
  2494  03AE  0029               	movlb	9	; select bank9
  2495  03AF  0595               	andwf	21,f	;volatile
  2496  03B0                     l1683:
  2497                           
  2498                           ;config.c: 34:     T3CONbits.T3CKPS = 3;
  2499  03B0  3030               	movlw	48
  2500  03B1  0495               	iorwf	21,f	;volatile
  2501  03B2                     l1685:
  2502                           
  2503                           ;config.c: 36:     T5CONbits.TMR5CS = 0;
  2504  03B2  303F               	movlw	-193
  2505  03B3  059C               	andwf	28,f	;volatile
  2506  03B4                     l1687:
  2507                           
  2508                           ;config.c: 37:     T5CONbits.T5CKPS = 3;
  2509  03B4  3030               	movlw	48
  2510  03B5  049C               	iorwf	28,f	;volatile
  2511  03B6                     l1689:
  2512                           
  2513                           ;config.c: 39:     T2CLKCON = 0;
  2514  03B6  0020               	movlb	0	; select bank0
  2515  03B7  019E               	clrf	30	;volatile
  2516  03B8                     l1691:
  2517                           
  2518                           ;config.c: 40:     T2CONbits.CKPS = 3;
  2519  03B8  081C               	movf	28,w	;volatile
  2520  03B9  398F               	andlw	-113
  2521  03BA  3830               	iorlw	48
  2522  03BB  009C               	movwf	28	;volatile
  2523  03BC                     l1693:
  2524                           
  2525                           ;config.c: 41:     T2CONbits.OUTPS = 0;
  2526  03BC  30F0               	movlw	-16
  2527  03BD  059C               	andwf	28,f	;volatile
  2528  03BE                     l1695:
  2529                           
  2530                           ;config.c: 42:     T2HLTbits.PSYNC = 1;
  2531  03BE  179D               	bsf	29,7	;volatile
  2532  03BF                     l1697:
  2533                           
  2534                           ;config.c: 43:     T2RST = 15;
  2535  03BF  300F               	movlw	15
  2536  03C0  009F               	movwf	31	;volatile
  2537  03C1                     l1699:
  2538                           
  2539                           ;config.c: 45:     SSP1CONbits.SSPEN = 1;
  2540  03C1  0024               	movlb	4	; select bank4
  2541  03C2  1695               	bsf	21,5	;volatile
  2542  03C3                     l1701:
  2543                           
  2544                           ;config.c: 46:     SSP1CONbits.SSPM = 8;
  2545  03C3  0815               	movf	21,w	;volatile
  2546  03C4  39F0               	andlw	-16
  2547  03C5  3808               	iorlw	8
  2548  03C6  0095               	movwf	21	;volatile
  2549  03C7                     l1703:
  2550                           
  2551                           ;config.c: 47:     SSP1ADD = 19;
  2552  03C7  3013               	movlw	19
  2553  03C8  0092               	movwf	18	;volatile
  2554  03C9                     l1705:
  2555                           
  2556                           ;config.c: 48:     RB4PPS = 17;
  2557  03C9  3011               	movlw	17
  2558  03CA  003D               	movlb	29	; select bank29
  2559  03CB  009C               	movwf	28	;volatile
  2560  03CC                     l1707:
  2561                           
  2562                           ;config.c: 49:     RB6PPS = 16;
  2563  03CC  3010               	movlw	16
  2564  03CD  009E               	movwf	30	;volatile
  2565  03CE                     l1709:
  2566                           
  2567                           ;config.c: 50:     SSPDATPPS = 12;
  2568  03CE  300C               	movlw	12
  2569  03CF  003C               	movlb	28	; select bank28
  2570  03D0  00A1               	movwf	33	;volatile
  2571  03D1                     l1711:
  2572                           
  2573                           ;config.c: 51:     SSPCLKPPS = 14;
  2574  03D1  300E               	movlw	14
  2575  03D2  00A0               	movwf	32	;volatile
  2576  03D3                     l1713:
  2577                           
  2578                           ;config.c: 53:     ANSELA = 0;
  2579  03D3  0023               	movlb	3	; select bank3
  2580  03D4  018C               	clrf	12	;volatile
  2581  03D5                     l1715:
  2582                           
  2583                           ;config.c: 54:     ANSELB = 0;
  2584  03D5  018D               	clrf	13	;volatile
  2585  03D6                     l1717:
  2586                           
  2587                           ;config.c: 55:     ANSELC = 0;
  2588  03D6  018E               	clrf	14	;volatile
  2589  03D7                     l1719:
  2590                           
  2591                           ;config.c: 56:     TRISA = 0;
  2592  03D7  0021               	movlb	1	; select bank1
  2593  03D8  018C               	clrf	12	;volatile
  2594  03D9                     l1721:
  2595                           
  2596                           ;config.c: 57:     TRISB = 0b01010000;
  2597  03D9  3050               	movlw	80
  2598  03DA  008D               	movwf	13	;volatile
  2599  03DB                     l1723:
  2600                           
  2601                           ;config.c: 58:     ODCONBbits.ODB4 = 1;
  2602  03DB  0025               	movlb	5	; select bank5
  2603  03DC  160D               	bsf	13,4	;volatile
  2604  03DD                     l1725:
  2605                           
  2606                           ;config.c: 59:     ODCONBbits.ODB6 = 1;
  2607  03DD  170D               	bsf	13,6	;volatile
  2608  03DE                     l1727:
  2609                           
  2610                           ;config.c: 60:     TRISC = 0b01111000;
  2611  03DE  3078               	movlw	120
  2612  03DF  0021               	movlb	1	; select bank1
  2613  03E0  008E               	movwf	14	;volatile
  2614  03E1                     l209:
  2615  03E1  0008               	return
  2616  03E2                     __end_of_pic_init:
  2617                           
  2618                           	psect	text6
  2619  03E2                     __ptext6:	
  2620 ;; *************** function _gyro_config *****************
  2621 ;; Defined at:
  2622 ;;		line 62 in file "config.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;Total ram usage:        2 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    4
  2643 ;; This function calls:
  2644 ;;		_i2c_write
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _gyro_config
  2652  03E2                     _gyro_config:
  2653  03E2                     l1729:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _gyro_config: [wreg+status,2+status,0+pclath+cstack]
  2656                           
  2657                           
  2658                           ;config.c: 63:     i2c_write(0xD2, 0x20, 0x0F);
  2659  03E2  3020               	movlw	32
  2660  03E3  0020               	movlb	0	; select bank0
  2661  03E4  00CF               	movwf	??_gyro_config
  2662  03E5  084F               	movf	??_gyro_config,w
  2663  03E6  00CC               	movwf	i2c_write@subaddress
  2664  03E7  300F               	movlw	15
  2665  03E8  00D0               	movwf	??_gyro_config+1
  2666  03E9  0850               	movf	??_gyro_config+1,w
  2667  03EA  00CD               	movwf	i2c_write@data
  2668  03EB  30D2               	movlw	210
  2669  03EC  3184  2436  3183   	fcall	_i2c_write
  2670                           
  2671                           ;config.c: 64:     i2c_write(0xD2, 0x23, 0x90);
  2672  03EF  3023               	movlw	35
  2673  03F0  0020               	movlb	0	; select bank0
  2674  03F1  00CF               	movwf	??_gyro_config
  2675  03F2  084F               	movf	??_gyro_config,w
  2676  03F3  00CC               	movwf	i2c_write@subaddress
  2677  03F4  3090               	movlw	144
  2678  03F5  00D0               	movwf	??_gyro_config+1
  2679  03F6  0850               	movf	??_gyro_config+1,w
  2680  03F7  00CD               	movwf	i2c_write@data
  2681  03F8  30D2               	movlw	210
  2682  03F9  3184  2436  3183   	fcall	_i2c_write
  2683                           
  2684                           ;config.c: 65:     i2c_write(0x32, 0x20, 0x57);
  2685  03FC  3020               	movlw	32
  2686  03FD  0020               	movlb	0	; select bank0
  2687  03FE  00CF               	movwf	??_gyro_config
  2688  03FF  084F               	movf	??_gyro_config,w
  2689  0400  00CC               	movwf	i2c_write@subaddress
  2690  0401  3057               	movlw	87
  2691  0402  00D0               	movwf	??_gyro_config+1
  2692  0403  0850               	movf	??_gyro_config+1,w
  2693  0404  00CD               	movwf	i2c_write@data
  2694  0405  3032               	movlw	50
  2695  0406  3184  2436  3183   	fcall	_i2c_write
  2696                           
  2697                           ;config.c: 66:     i2c_write(0x32, 0x23, 0x90);
  2698  0409  3023               	movlw	35
  2699  040A  0020               	movlb	0	; select bank0
  2700  040B  00CF               	movwf	??_gyro_config
  2701  040C  084F               	movf	??_gyro_config,w
  2702  040D  00CC               	movwf	i2c_write@subaddress
  2703  040E  3090               	movlw	144
  2704  040F  00D0               	movwf	??_gyro_config+1
  2705  0410  0850               	movf	??_gyro_config+1,w
  2706  0411  00CD               	movwf	i2c_write@data
  2707  0412  3032               	movlw	50
  2708  0413  3184  2436  3183   	fcall	_i2c_write
  2709                           
  2710                           ;config.c: 67:     i2c_write(0x3C, 0, 0x18);
  2711  0416  0020               	movlb	0	; select bank0
  2712  0417  01CC               	clrf	i2c_write@subaddress
  2713  0418  3018               	movlw	24
  2714  0419  00CF               	movwf	??_gyro_config
  2715  041A  084F               	movf	??_gyro_config,w
  2716  041B  00CD               	movwf	i2c_write@data
  2717  041C  303C               	movlw	60
  2718  041D  3184  2436  3183   	fcall	_i2c_write
  2719                           
  2720                           ;config.c: 68:     i2c_write(0x3C, 1, 0x80);
  2721  0420  0020               	movlb	0	; select bank0
  2722  0421  01CC               	clrf	i2c_write@subaddress
  2723  0422  0ACC               	incf	i2c_write@subaddress,f
  2724  0423  3080               	movlw	128
  2725  0424  00CF               	movwf	??_gyro_config
  2726  0425  084F               	movf	??_gyro_config,w
  2727  0426  00CD               	movwf	i2c_write@data
  2728  0427  303C               	movlw	60
  2729  0428  3184  2436  3183   	fcall	_i2c_write
  2730                           
  2731                           ;config.c: 69:     i2c_write(0x3C, 2, 0);
  2732  042B  3002               	movlw	2
  2733  042C  0020               	movlb	0	; select bank0
  2734  042D  00CF               	movwf	??_gyro_config
  2735  042E  084F               	movf	??_gyro_config,w
  2736  042F  00CC               	movwf	i2c_write@subaddress
  2737  0430  01CD               	clrf	i2c_write@data
  2738  0431  303C               	movlw	60
  2739  0432  3184  2436  3183   	fcall	_i2c_write
  2740  0435                     l212:
  2741  0435  0008               	return
  2742  0436                     __end_of_gyro_config:
  2743                           
  2744                           	psect	text7
  2745  0436                     __ptext7:	
  2746 ;; *************** function _i2c_write *****************
  2747 ;; Defined at:
  2748 ;;		line 84 in file "config.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  address         1    wreg     unsigned char 
  2751 ;;  subaddress      1    2[BANK0 ] unsigned char 
  2752 ;;  data            1    3[BANK0 ] unsigned char 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  address         1    4[BANK0 ] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, pclath, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    3
  2771 ;; This function calls:
  2772 ;;		_i2c_start
  2773 ;;		_i2c_stop
  2774 ;;		_i2c_write_byte
  2775 ;;		_nack
  2776 ;; This function is called by:
  2777 ;;		_gyro_config
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _i2c_write
  2783  0436                     _i2c_write:
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2787                           ;i2c_write@address stored from wreg
  2788  0436  0020               	movlb	0	; select bank0
  2789  0437  00CE               	movwf	i2c_write@address
  2790  0438                     l1607:
  2791                           
  2792                           ;config.c: 85:     i2c_start();
  2793  0438  3184  24C9  3184   	fcall	_i2c_start
  2794  043B                     l1609:
  2795                           
  2796                           ;config.c: 86:     i2c_write_byte(address);
  2797  043B  0020               	movlb	0	; select bank0
  2798  043C  084E               	movf	i2c_write@address,w
  2799  043D  3184  2490  3184   	fcall	_i2c_write_byte
  2800  0440                     l1611:
  2801                           
  2802                           ;config.c: 87:     if(nack())
  2803  0440  3184  24A5  3184   	fcall	_nack
  2804  0443  0020               	movlb	0	; select bank0
  2805  0444  084A               	movf	?_nack,w
  2806  0445  044B               	iorwf	?_nack+1,w
  2807  0446  1903               	btfsc	3,2
  2808  0447  2C49               	goto	u1031
  2809  0448  2C4A               	goto	u1030
  2810  0449                     u1031:
  2811  0449  2C4B               	goto	l1615
  2812  044A                     u1030:
  2813  044A  2C6C               	goto	l219
  2814  044B                     l1615:
  2815                           
  2816                           ;config.c: 89:     i2c_write_byte(subaddress);
  2817  044B  084C               	movf	i2c_write@subaddress,w
  2818  044C  3184  2490  3184   	fcall	_i2c_write_byte
  2819                           
  2820                           ;config.c: 90:     if(nack())
  2821  044F  3184  24A5  3184   	fcall	_nack
  2822  0452  0020               	movlb	0	; select bank0
  2823  0453  084A               	movf	?_nack,w
  2824  0454  044B               	iorwf	?_nack+1,w
  2825  0455  1903               	btfsc	3,2
  2826  0456  2C58               	goto	u1041
  2827  0457  2C59               	goto	u1040
  2828  0458                     u1041:
  2829  0458  2C5A               	goto	l1619
  2830  0459                     u1040:
  2831  0459  2C6C               	goto	l219
  2832  045A                     l1619:
  2833                           
  2834                           ;config.c: 92:     i2c_write_byte(data);
  2835  045A  084D               	movf	i2c_write@data,w
  2836  045B  3184  2490  3184   	fcall	_i2c_write_byte
  2837                           
  2838                           ;config.c: 93:     if(nack())
  2839  045E  3184  24A5  3184   	fcall	_nack
  2840  0461  0020               	movlb	0	; select bank0
  2841  0462  084A               	movf	?_nack,w
  2842  0463  044B               	iorwf	?_nack+1,w
  2843  0464  1903               	btfsc	3,2
  2844  0465  2C67               	goto	u1051
  2845  0466  2C68               	goto	u1050
  2846  0467                     u1051:
  2847  0467  2C69               	goto	l1623
  2848  0468                     u1050:
  2849  0468  2C6C               	goto	l219
  2850  0469                     l1623:
  2851                           
  2852                           ;config.c: 95:     i2c_stop();
  2853  0469  3184  24C0  3184   	fcall	_i2c_stop
  2854  046C                     l219:
  2855  046C  0008               	return
  2856  046D                     __end_of_i2c_write:
  2857                           
  2858                           	psect	text8
  2859  04A5                     __ptext8:	
  2860 ;; *************** function _nack *****************
  2861 ;; Defined at:
  2862 ;;		line 135 in file "config.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  2    0[BANK0 ] int 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, pclath, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    2
  2883 ;; This function calls:
  2884 ;;		_i2c_stop
  2885 ;; This function is called by:
  2886 ;;		_i2c_write
  2887 ;;		_i2c_read
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _nack
  2893  04A5                     _nack:
  2894  04A5                     l1579:	
  2895                           ;incstack = 0
  2896                           ; Regs used in _nack: [wreg+status,2+status,0+pclath+cstack]
  2897                           
  2898                           
  2899                           ;config.c: 136:     if(SSP1CON2bits.ACKSTAT){
  2900  04A5  0024               	movlb	4	; select bank4
  2901  04A6  1F16               	btfss	22,6	;volatile
  2902  04A7  2CA9               	goto	u991
  2903  04A8  2CAA               	goto	u990
  2904  04A9                     u991:
  2905  04A9  2CB3               	goto	l1587
  2906  04AA                     u990:
  2907  04AA                     l1581:
  2908                           
  2909                           ;config.c: 137:         i2c_stop();
  2910  04AA  3184  24C0  3184   	fcall	_i2c_stop
  2911  04AD                     l1583:
  2912                           
  2913                           ;config.c: 138:         return 1;
  2914  04AD  3001               	movlw	1
  2915  04AE  0020               	movlb	0	; select bank0
  2916  04AF  00CA               	movwf	?_nack
  2917  04B0  3000               	movlw	0
  2918  04B1  00CB               	movwf	?_nack+1
  2919  04B2  2CB6               	goto	l242
  2920  04B3                     l1587:
  2921                           
  2922                           ;config.c: 140:     return 0;
  2923  04B3  0020               	movlb	0	; select bank0
  2924  04B4  01CA               	clrf	?_nack
  2925  04B5  01CB               	clrf	?_nack+1
  2926  04B6                     l242:
  2927  04B6  0008               	return
  2928  04B7                     __end_of_nack:
  2929                           
  2930                           	psect	text9
  2931  04C0                     __ptext9:	
  2932 ;; *************** function _i2c_stop *****************
  2933 ;; Defined at:
  2934 ;;		line 164 in file "config.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		None
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    1
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_i2c_write
  2959 ;;		_i2c_read
  2960 ;;		_nack
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _i2c_stop
  2966  04C0                     _i2c_stop:
  2967  04C0                     l1569:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _i2c_stop: []
  2970                           
  2971                           
  2972                           ;config.c: 165:     SSP1CON2bits.PEN = 1;
  2973  04C0  0024               	movlb	4	; select bank4
  2974  04C1  1516               	bsf	22,2	;volatile
  2975  04C2                     l264:	
  2976                           ;config.c: 166:     while(SSP1CON2bits.PEN);
  2977                           
  2978  04C2  1916               	btfsc	22,2	;volatile
  2979  04C3  2CC5               	goto	u951
  2980  04C4  2CC6               	goto	u950
  2981  04C5                     u951:
  2982  04C5  2CC2               	goto	l264
  2983  04C6                     u950:
  2984  04C6                     l266:
  2985                           
  2986                           ;config.c: 167:     PIR1bits.SSP1IF = 0;
  2987  04C6  0020               	movlb	0	; select bank0
  2988  04C7  1190               	bcf	16,3	;volatile
  2989  04C8                     l267:
  2990  04C8  0008               	return
  2991  04C9                     __end_of_i2c_stop:
  2992                           
  2993                           	psect	text10
  2994  0490                     __ptext10:	
  2995 ;; *************** function _i2c_write_byte *****************
  2996 ;; Defined at:
  2997 ;;		line 155 in file "config.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  address         1    wreg     unsigned char 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  address         1    0[BANK0 ] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_i2c_write
  3022 ;;		_i2c_read
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           
  3027                           ;psect for function _i2c_write_byte
  3028  0490                     _i2c_write_byte:
  3029                           
  3030                           ;incstack = 0
  3031                           ; Regs used in _i2c_write_byte: [wreg]
  3032                           ;i2c_write_byte@address stored from wreg
  3033  0490  0020               	movlb	0	; select bank0
  3034  0491  00CA               	movwf	i2c_write_byte@address
  3035  0492                     l1573:
  3036                           
  3037                           ;config.c: 156:     SSP1CON2bits.RCEN = 0;
  3038  0492  0024               	movlb	4	; select bank4
  3039  0493  1196               	bcf	22,3	;volatile
  3040  0494                     l1575:
  3041                           
  3042                           ;config.c: 157:     SSP1BUF = address;
  3043  0494  0020               	movlb	0	; select bank0
  3044  0495  084A               	movf	i2c_write_byte@address,w
  3045  0496  0024               	movlb	4	; select bank4
  3046  0497  0091               	movwf	17	;volatile
  3047  0498                     l257:	
  3048                           ;config.c: 158:     while(SSP1STATbits.BF);
  3049                           
  3050  0498  1814               	btfsc	20,0	;volatile
  3051  0499  2C9B               	goto	u971
  3052  049A  2C9C               	goto	u970
  3053  049B                     u971:
  3054  049B  2C98               	goto	l257
  3055  049C                     u970:
  3056  049C                     l259:
  3057                           
  3058                           ;config.c: 159:     PIR1bits.SSP1IF = 0;
  3059  049C  0020               	movlb	0	; select bank0
  3060  049D  1190               	bcf	16,3	;volatile
  3061                           
  3062                           ;config.c: 160:     if(SSP1CON1bits.WCOL)
  3063  049E  0024               	movlb	4	; select bank4
  3064  049F  1F95               	btfss	21,7	;volatile
  3065  04A0  2CA2               	goto	u981
  3066  04A1  2CA3               	goto	u980
  3067  04A2                     u981:
  3068  04A2  2CA4               	goto	l261
  3069  04A3                     u980:
  3070  04A3                     l1577:
  3071                           
  3072                           ;config.c: 161:         SSP1CON1bits.WCOL = 0;
  3073  04A3  1395               	bcf	21,7	;volatile
  3074  04A4                     l261:
  3075  04A4  0008               	return
  3076  04A5                     __end_of_i2c_write_byte:
  3077                           
  3078                           	psect	text11
  3079  04C9                     __ptext11:	
  3080 ;; *************** function _i2c_start *****************
  3081 ;; Defined at:
  3082 ;;		line 143 in file "config.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		None
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_i2c_write
  3107 ;;		_i2c_read
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _i2c_start
  3113  04C9                     _i2c_start:
  3114  04C9                     l1571:	
  3115                           ;incstack = 0
  3116                           ; Regs used in _i2c_start: []
  3117                           
  3118                           
  3119                           ;config.c: 144:     SSP1CON2bits.SEN = 1;
  3120  04C9  0024               	movlb	4	; select bank4
  3121  04CA  1416               	bsf	22,0	;volatile
  3122  04CB                     l245:	
  3123                           ;config.c: 145:     while((SSP1CON2bits.SEN));
  3124                           
  3125  04CB  1816               	btfsc	22,0	;volatile
  3126  04CC  2CCE               	goto	u961
  3127  04CD  2CCF               	goto	u960
  3128  04CE                     u961:
  3129  04CE  2CCB               	goto	l245
  3130  04CF                     u960:
  3131  04CF                     l247:
  3132                           
  3133                           ;config.c: 146:     PIR1bits.SSP1IF = 0;
  3134  04CF  0020               	movlb	0	; select bank0
  3135  04D0  1190               	bcf	16,3	;volatile
  3136  04D1                     l248:
  3137  04D1  0008               	return
  3138  04D2                     __end_of_i2c_start:
  3139                           
  3140                           	psect	intentry
  3141  0004                     __pintentry:	
  3142 ;; *************** function _remote *****************
  3143 ;; Defined at:
  3144 ;;		line 170 in file "config.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;Total ram usage:        6 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		Interrupt level 1
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171  0004                     _remote:
  3172                           
  3173                           ;incstack = 0
  3174  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3175                           
  3176                           ; Regs used in _remote: [wreg+status,2+status,0]
  3177  0005  3180               	pagesel	$
  3178  0006                     i1l1447:
  3179                           
  3180                           ;config.c: 172:     if(INTCONbits.T0IF)
  3181  0006  1D0B               	btfss	11,2	;volatile
  3182  0007  2809               	goto	u80_21
  3183  0008  280A               	goto	u80_20
  3184  0009                     u80_21:
  3185  0009  2810               	goto	i1l1453
  3186  000A                     u80_20:
  3187  000A                     i1l1449:
  3188                           
  3189                           ;config.c: 173:     {;config.c: 174:         TMR0H++;
  3190  000A  3001               	movlw	1
  3191  000B  0020               	movlb	0	; select bank0
  3192  000C  07C4               	addwf	_TMR0H,f
  3193  000D  3000               	movlw	0
  3194  000E  3DC5               	addwfc	_TMR0H+1,f
  3195  000F                     i1l1451:
  3196                           
  3197                           ;config.c: 175:         INTCONbits.T0IF = 0;
  3198  000F  110B               	bcf	11,2	;volatile
  3199  0010                     i1l1453:
  3200                           
  3201                           ;config.c: 178:     if(PIR1bits.TMR2IF){
  3202  0010  0020               	movlb	0	; select bank0
  3203  0011  1C90               	btfss	16,1	;volatile
  3204  0012  2814               	goto	u81_21
  3205  0013  2815               	goto	u81_20
  3206  0014                     u81_21:
  3207  0014  281A               	goto	i1l1459
  3208  0015                     u81_20:
  3209  0015                     i1l1455:
  3210                           
  3211                           ;config.c: 179:         TMR2H++;
  3212  0015  3001               	movlw	1
  3213  0016  07F2               	addwf	_TMR2H,f
  3214  0017  3000               	movlw	0
  3215  0018  3DF3               	addwfc	_TMR2H+1,f
  3216  0019                     i1l1457:
  3217                           
  3218                           ;config.c: 180:         PIR1bits.TMR2IF = 0;
  3219  0019  1090               	bcf	16,1	;volatile
  3220  001A                     i1l1459:
  3221                           
  3222                           ;config.c: 183:     if(INTCONbits.IOCIF){
  3223  001A  1C0B               	btfss	11,0	;volatile
  3224  001B  281D               	goto	u82_21
  3225  001C  281E               	goto	u82_20
  3226  001D                     u82_21:
  3227  001D  28E6               	goto	i1l291
  3228  001E                     u82_20:
  3229  001E                     i1l1461:
  3230                           
  3231                           ;config.c: 184:         if(IOCCFbits.IOCCF3)
  3232  001E  0027               	movlb	7	; select bank7
  3233  001F  1D99               	btfss	25,3	;volatile
  3234  0020  2822               	goto	u83_21
  3235  0021  2823               	goto	u83_20
  3236  0022                     u83_21:
  3237  0022  284A               	goto	i1l1485
  3238  0023                     u83_20:
  3239  0023                     i1l1463:
  3240                           
  3241                           ;config.c: 185:         {;config.c: 186:             if(p.p1)
  3242  0023  0020               	movlb	0	; select bank0
  3243  0024  1C49               	btfss	_p,0
  3244  0025  2827               	goto	u84_21
  3245  0026  2828               	goto	u84_20
  3246  0027                     u84_21:
  3247  0027  283F               	goto	i1l276
  3248  0028                     u84_20:
  3249  0028                     i1l1465:
  3250                           
  3251                           ;config.c: 187:             {;config.c: 188:                 T1CONbits.TMR1ON = 0;
  3252  0028  1018               	bcf	24,0	;volatile
  3253  0029                     i1l1467:
  3254                           
  3255                           ;config.c: 189:                 if(TMR1 < 2100)
  3256  0029  3008               	movlw	8
  3257  002A  0217               	subwf	23,w	;volatile
  3258  002B  3034               	movlw	52
  3259  002C  1903               	skipnz
  3260  002D  0216               	subwf	22,w	;volatile
  3261  002E  1803               	skipnc
  3262  002F  2831               	goto	u85_21
  3263  0030  2832               	goto	u85_20
  3264  0031                     u85_21:
  3265  0031  2836               	goto	i1l1471
  3266  0032                     u85_20:
  3267  0032                     i1l1469:
  3268                           
  3269                           ;config.c: 190:                     ch1 = TMR1;
  3270  0032  0817               	movf	23,w	;volatile
  3271  0033  00F1               	movwf	_ch1+1
  3272  0034  0816               	movf	22,w	;volatile
  3273  0035  00F0               	movwf	_ch1
  3274  0036                     i1l1471:
  3275                           
  3276                           ;config.c: 191:                 IOCCN &= 0b11110111;
  3277  0036  30F7               	movlw	247
  3278  0037  00F6               	movwf	??_remote
  3279  0038  0876               	movf	??_remote,w
  3280  0039  0027               	movlb	7	; select bank7
  3281  003A  0598               	andwf	24,f	;volatile
  3282  003B                     i1l1473:
  3283                           
  3284                           ;config.c: 192:                 IOCCP |= 0b00001000;
  3285  003B  1597               	bsf	23,3	;volatile
  3286  003C                     i1l1475:
  3287                           
  3288                           ;config.c: 193:                 p.p1 = 0;
  3289  003C  0020               	movlb	0	; select bank0
  3290  003D  1049               	bcf	_p,0
  3291                           
  3292                           ;config.c: 194:             }
  3293  003E  284A               	goto	i1l1485
  3294  003F                     i1l276:	
  3295                           ;config.c: 195:             else
  3296                           
  3297                           
  3298                           ;config.c: 196:             {;config.c: 197:                 T1CONbits.TMR1ON = 1;
  3299  003F  1418               	bsf	24,0	;volatile
  3300  0040                     i1l1477:
  3301                           
  3302                           ;config.c: 198:                 TMR1 = 0;
  3303  0040  0196               	clrf	22	;volatile
  3304  0041  0197               	clrf	23	;volatile
  3305  0042                     i1l1479:
  3306                           
  3307                           ;config.c: 199:                 IOCCP &= 0b11110111;
  3308  0042  30F7               	movlw	247
  3309  0043  00F6               	movwf	??_remote
  3310  0044  0876               	movf	??_remote,w
  3311  0045  0027               	movlb	7	; select bank7
  3312  0046  0597               	andwf	23,f	;volatile
  3313  0047                     i1l1481:
  3314                           
  3315                           ;config.c: 200:                 IOCCN |= 0b00001000;
  3316  0047  1598               	bsf	24,3	;volatile
  3317  0048                     i1l1483:
  3318                           
  3319                           ;config.c: 201:                 p.p1 = 1;
  3320  0048  0020               	movlb	0	; select bank0
  3321  0049  1449               	bsf	_p,0
  3322  004A                     i1l1485:
  3323                           
  3324                           ;config.c: 205:         if(IOCCFbits.IOCCF4)
  3325  004A  0027               	movlb	7	; select bank7
  3326  004B  1E19               	btfss	25,4	;volatile
  3327  004C  284E               	goto	u86_21
  3328  004D  284F               	goto	u86_20
  3329  004E                     u86_21:
  3330  004E  287A               	goto	i1l1513
  3331  004F                     u86_20:
  3332  004F                     i1l1487:
  3333                           
  3334                           ;config.c: 206:         {;config.c: 207:             if(p.p2)
  3335  004F  0020               	movlb	0	; select bank0
  3336  0050  1CC9               	btfss	_p,1
  3337  0051  2853               	goto	u87_21
  3338  0052  2854               	goto	u87_20
  3339  0053                     u87_21:
  3340  0053  286D               	goto	i1l280
  3341  0054                     u87_20:
  3342  0054                     i1l1489:
  3343                           
  3344                           ;config.c: 208:             {;config.c: 209:                 T3CONbits.TMR3ON = 0;
  3345  0054  0029               	movlb	9	; select bank9
  3346  0055  1015               	bcf	21,0	;volatile
  3347  0056                     i1l1491:
  3348                           
  3349                           ;config.c: 210:                 IOCCN &= 0b11101111;
  3350  0056  30EF               	movlw	239
  3351  0057  00F6               	movwf	??_remote
  3352  0058  0876               	movf	??_remote,w
  3353  0059  0027               	movlb	7	; select bank7
  3354  005A  0598               	andwf	24,f	;volatile
  3355  005B                     i1l1493:
  3356                           
  3357                           ;config.c: 211:                 IOCCP |= 0b00010000;
  3358  005B  1617               	bsf	23,4	;volatile
  3359  005C                     i1l1495:
  3360                           
  3361                           ;config.c: 212:                 if(TMR3H < 9)
  3362  005C  3009               	movlw	9
  3363  005D  0029               	movlb	9	; select bank9
  3364  005E  0214               	subwf	20,w	;volatile
  3365  005F  1803               	skipnc
  3366  0060  2862               	goto	u88_21
  3367  0061  2863               	goto	u88_20
  3368  0062                     u88_21:
  3369  0062  286A               	goto	i1l1499
  3370  0063                     u88_20:
  3371  0063                     i1l1497:
  3372                           
  3373                           ;config.c: 213:                     ch2 = ((unsigned)TMR3H<<8) | (unsigned)TMR3L;
  3374  0063  0814               	movf	20,w	;volatile
  3375  0064  0020               	movlb	0	; select bank0
  3376  0065  00A5               	movwf	_ch2+1
  3377  0066  0029               	movlb	9	; select bank9
  3378  0067  0813               	movf	19,w	;volatile
  3379  0068  0020               	movlb	0	; select bank0
  3380  0069  00A4               	movwf	_ch2
  3381  006A                     i1l1499:
  3382                           
  3383                           ;config.c: 214:                 p.p2 = 0;
  3384  006A  0020               	movlb	0	; select bank0
  3385  006B  10C9               	bcf	_p,1
  3386                           
  3387                           ;config.c: 215:             }
  3388  006C  287A               	goto	i1l1513
  3389  006D                     i1l280:	
  3390                           ;config.c: 216:             else
  3391                           
  3392                           
  3393                           ;config.c: 217:             {;config.c: 218:                 IOCCN |= 0b00010000;
  3394  006D  0027               	movlb	7	; select bank7
  3395  006E  1618               	bsf	24,4	;volatile
  3396  006F                     i1l1501:
  3397                           
  3398                           ;config.c: 219:                 IOCCP &= 0b11101111;
  3399  006F  30EF               	movlw	239
  3400  0070  00F6               	movwf	??_remote
  3401  0071  0876               	movf	??_remote,w
  3402  0072  0597               	andwf	23,f	;volatile
  3403  0073                     i1l1503:
  3404                           
  3405                           ;config.c: 220:                 TMR3L = 0;
  3406  0073  0029               	movlb	9	; select bank9
  3407  0074  0193               	clrf	19	;volatile
  3408  0075                     i1l1505:
  3409                           
  3410                           ;config.c: 221:                 TMR3H = 0;
  3411  0075  0194               	clrf	20	;volatile
  3412  0076                     i1l1507:
  3413                           
  3414                           ;config.c: 222:                 TMR3L = 0;
  3415  0076  0193               	clrf	19	;volatile
  3416  0077                     i1l1509:
  3417                           
  3418                           ;config.c: 223:                 T3CONbits.TMR3ON = 1;
  3419  0077  1415               	bsf	21,0	;volatile
  3420  0078                     i1l1511:
  3421                           
  3422                           ;config.c: 224:                 p.p2 = 1;
  3423  0078  0020               	movlb	0	; select bank0
  3424  0079  14C9               	bsf	_p,1
  3425  007A                     i1l1513:
  3426                           
  3427                           ;config.c: 228:         if(IOCCFbits.IOCCF5)
  3428  007A  0027               	movlb	7	; select bank7
  3429  007B  1E99               	btfss	25,5	;volatile
  3430  007C  287E               	goto	u89_21
  3431  007D  287F               	goto	u89_20
  3432  007E                     u89_21:
  3433  007E  28A9               	goto	i1l1539
  3434  007F                     u89_20:
  3435  007F                     i1l1515:
  3436                           
  3437                           ;config.c: 229:         {;config.c: 230:             if(p.p3)
  3438  007F  0020               	movlb	0	; select bank0
  3439  0080  1D49               	btfss	_p,2
  3440  0081  2883               	goto	u90_21
  3441  0082  2884               	goto	u90_20
  3442  0083                     u90_21:
  3443  0083  289D               	goto	i1l284
  3444  0084                     u90_20:
  3445  0084                     i1l1517:
  3446                           
  3447                           ;config.c: 231:             {;config.c: 232:                 T5CONbits.TMR5ON = 0;
  3448  0084  0029               	movlb	9	; select bank9
  3449  0085  101C               	bcf	28,0	;volatile
  3450  0086                     i1l1519:
  3451                           
  3452                           ;config.c: 233:                 IOCCN &= 0b11011111;
  3453  0086  30DF               	movlw	223
  3454  0087  00F6               	movwf	??_remote
  3455  0088  0876               	movf	??_remote,w
  3456  0089  0027               	movlb	7	; select bank7
  3457  008A  0598               	andwf	24,f	;volatile
  3458  008B                     i1l1521:
  3459                           
  3460                           ;config.c: 234:                 IOCCP |= 0b00100000;
  3461  008B  1697               	bsf	23,5	;volatile
  3462  008C                     i1l1523:
  3463                           
  3464                           ;config.c: 235:                 if(TMR5H < 9)
  3465  008C  3009               	movlw	9
  3466  008D  0029               	movlb	9	; select bank9
  3467  008E  021B               	subwf	27,w	;volatile
  3468  008F  1803               	skipnc
  3469  0090  2892               	goto	u91_21
  3470  0091  2893               	goto	u91_20
  3471  0092                     u91_21:
  3472  0092  289A               	goto	i1l1527
  3473  0093                     u91_20:
  3474  0093                     i1l1525:
  3475                           
  3476                           ;config.c: 236:                     ch3 = ((unsigned)TMR5H << 8) | (unsigned)TMR5L;
  3477  0093  081B               	movf	27,w	;volatile
  3478  0094  0020               	movlb	0	; select bank0
  3479  0095  00C7               	movwf	_ch3+1
  3480  0096  0029               	movlb	9	; select bank9
  3481  0097  081A               	movf	26,w	;volatile
  3482  0098  0020               	movlb	0	; select bank0
  3483  0099  00C6               	movwf	_ch3
  3484  009A                     i1l1527:
  3485                           
  3486                           ;config.c: 237:                 p.p3 = 0;
  3487  009A  0020               	movlb	0	; select bank0
  3488  009B  1149               	bcf	_p,2
  3489                           
  3490                           ;config.c: 238:             }
  3491  009C  28A9               	goto	i1l1539
  3492  009D                     i1l284:	
  3493                           ;config.c: 239:             else
  3494                           
  3495                           
  3496                           ;config.c: 240:             {;config.c: 241:                 IOCCN |= 0b00100000;
  3497  009D  0027               	movlb	7	; select bank7
  3498  009E  1698               	bsf	24,5	;volatile
  3499  009F                     i1l1529:
  3500                           
  3501                           ;config.c: 242:                 IOCCP &= 0b11011111;
  3502  009F  30DF               	movlw	223
  3503  00A0  00F6               	movwf	??_remote
  3504  00A1  0876               	movf	??_remote,w
  3505  00A2  0597               	andwf	23,f	;volatile
  3506  00A3                     i1l1531:
  3507                           
  3508                           ;config.c: 243:                 TMR5L = 0;
  3509  00A3  0029               	movlb	9	; select bank9
  3510  00A4  019A               	clrf	26	;volatile
  3511  00A5                     i1l1533:
  3512                           
  3513                           ;config.c: 244:                 TMR5H = 0;
  3514  00A5  019B               	clrf	27	;volatile
  3515  00A6                     i1l1535:
  3516                           
  3517                           ;config.c: 245:                 T5CONbits.TMR5ON = 1;
  3518  00A6  141C               	bsf	28,0	;volatile
  3519  00A7                     i1l1537:
  3520                           
  3521                           ;config.c: 246:                 p.p3 = 1;
  3522  00A7  0020               	movlb	0	; select bank0
  3523  00A8  1549               	bsf	_p,2
  3524  00A9                     i1l1539:
  3525                           
  3526                           ;config.c: 250:         if(IOCCFbits.IOCCF6)
  3527  00A9  0027               	movlb	7	; select bank7
  3528  00AA  1F19               	btfss	25,6	;volatile
  3529  00AB  28AD               	goto	u92_21
  3530  00AC  28AE               	goto	u92_20
  3531  00AD                     u92_21:
  3532  00AD  28E3               	goto	i1l1565
  3533  00AE                     u92_20:
  3534  00AE                     i1l1541:
  3535                           
  3536                           ;config.c: 251:         {;config.c: 252:             if(p.p4)
  3537  00AE  0020               	movlb	0	; select bank0
  3538  00AF  1DC9               	btfss	_p,3
  3539  00B0  28B2               	goto	u93_21
  3540  00B1  28B3               	goto	u93_20
  3541  00B2                     u93_21:
  3542  00B2  28D7               	goto	i1l288
  3543  00B3                     u93_20:
  3544  00B3                     i1l1543:
  3545                           
  3546                           ;config.c: 253:             {;config.c: 254:                 T2CONbits.ON = 0;
  3547  00B3  139C               	bcf	28,7	;volatile
  3548  00B4                     i1l1545:
  3549                           
  3550                           ;config.c: 255:                 IOCCN &= 0b10111111;
  3551  00B4  30BF               	movlw	191
  3552  00B5  00F6               	movwf	??_remote
  3553  00B6  0876               	movf	??_remote,w
  3554  00B7  0027               	movlb	7	; select bank7
  3555  00B8  0598               	andwf	24,f	;volatile
  3556  00B9                     i1l1547:
  3557                           
  3558                           ;config.c: 256:                 IOCCP |= 0b01000000;
  3559  00B9  1717               	bsf	23,6	;volatile
  3560  00BA                     i1l1549:
  3561                           
  3562                           ;config.c: 257:                 if(TMR2H < 9)
  3563  00BA  3000               	movlw	0
  3564  00BB  0273               	subwf	_TMR2H+1,w
  3565  00BC  3009               	movlw	9
  3566  00BD  1903               	skipnz
  3567  00BE  0272               	subwf	_TMR2H,w
  3568  00BF  1803               	skipnc
  3569  00C0  28C2               	goto	u94_21
  3570  00C1  28C3               	goto	u94_20
  3571  00C2                     u94_21:
  3572  00C2  28D4               	goto	i1l1553
  3573  00C3                     u94_20:
  3574  00C3                     i1l1551:
  3575                           
  3576                           ;config.c: 258:                     ch4 = (TMR2H<<8) | TMR2;
  3577  00C3  0020               	movlb	0	; select bank0
  3578  00C4  081A               	movf	26,w	;volatile
  3579  00C5  00F6               	movwf	??_remote
  3580  00C6  01F7               	clrf	??_remote+1
  3581  00C7  0872               	movf	_TMR2H,w
  3582  00C8  00F9               	movwf	??_remote+3
  3583  00C9  01F8               	clrf	??_remote+2
  3584  00CA  0876               	movf	??_remote,w
  3585  00CB  0478               	iorwf	??_remote+2,w
  3586  00CC  00FA               	movwf	??_remote+4
  3587  00CD  0877               	movf	??_remote+1,w
  3588  00CE  0479               	iorwf	??_remote+3,w
  3589  00CF  00FB               	movwf	??_remote+5
  3590  00D0  087A               	movf	??_remote+4,w
  3591  00D1  00C2               	movwf	_ch4
  3592  00D2  087B               	movf	??_remote+5,w
  3593  00D3  00C3               	movwf	_ch4+1
  3594  00D4                     i1l1553:
  3595                           
  3596                           ;config.c: 259:                 p.p4 = 0;
  3597  00D4  0020               	movlb	0	; select bank0
  3598  00D5  11C9               	bcf	_p,3
  3599                           
  3600                           ;config.c: 260:             }
  3601  00D6  28E3               	goto	i1l1565
  3602  00D7                     i1l288:	
  3603                           ;config.c: 261:             else
  3604                           
  3605                           
  3606                           ;config.c: 262:             {;config.c: 263:                 IOCCN |= 0b01000000;
  3607  00D7  0027               	movlb	7	; select bank7
  3608  00D8  1718               	bsf	24,6	;volatile
  3609  00D9                     i1l1555:
  3610                           
  3611                           ;config.c: 264:                 IOCCP &= 0b10111111;
  3612  00D9  30BF               	movlw	191
  3613  00DA  00F6               	movwf	??_remote
  3614  00DB  0876               	movf	??_remote,w
  3615  00DC  0597               	andwf	23,f	;volatile
  3616  00DD                     i1l1557:
  3617                           
  3618                           ;config.c: 265:                 TMR2 = 0;
  3619  00DD  0020               	movlb	0	; select bank0
  3620  00DE  019A               	clrf	26	;volatile
  3621  00DF                     i1l1559:
  3622                           
  3623                           ;config.c: 266:                 TMR2H = 0;
  3624  00DF  01F2               	clrf	_TMR2H
  3625  00E0  01F3               	clrf	_TMR2H+1
  3626  00E1                     i1l1561:
  3627                           
  3628                           ;config.c: 267:                 T2CONbits.ON = 1;
  3629  00E1  179C               	bsf	28,7	;volatile
  3630  00E2                     i1l1563:
  3631                           
  3632                           ;config.c: 268:                 p.p4 = 1;
  3633  00E2  15C9               	bsf	_p,3
  3634  00E3                     i1l1565:
  3635                           
  3636                           ;config.c: 271:         IOCCF = 0;
  3637  00E3  0027               	movlb	7	; select bank7
  3638  00E4  0199               	clrf	25	;volatile
  3639  00E5                     i1l1567:
  3640                           
  3641                           ;config.c: 272:         INTCONbits.IOCIF = 0;
  3642  00E5  100B               	bcf	11,0	;volatile
  3643  00E6                     i1l291:
  3644  00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3645  00E7  0009               	retfie
  3646  00E8                     __end_of_remote:
  3647  007E                     btemp	set	126	;btemp
  3648  007E                     int$flags	set	126
  3649  007E                     wtemp0	set	126
  3650                           
  3651                           	psect	config
  3652                           
  3653                           ;Config register CONFIG1 @ 0x8007
  3654                           ;	Oscillator Selection Bits
  3655                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3656                           ;	Power-up Timer Enable
  3657                           ;	PWRTE = OFF, PWRT disabled
  3658                           ;	MCLR Pin Function Select
  3659                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3660                           ;	Flash Program Memory Code Protection
  3661                           ;	CP = OFF, Program memory code protection is disabled
  3662                           ;	Brown-out Reset Enable
  3663                           ;	BOREN = OFF, Brown-out Reset disabled
  3664                           ;	Clock Out Enable
  3665                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3666                           ;	Internal/External Switch Over
  3667                           ;	IESO = ON, Internal External Switch Over mode is enabled
  3668                           ;	Fail-Safe Clock Monitor Enable
  3669                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3670  8007                     	org	32775
  3671  8007  39BC               	dw	14780
  3672                           
  3673                           ;Config register CONFIG2 @ 0x8008
  3674                           ;	Flash Memory Self-Write Protection
  3675                           ;	WRT = OFF, Write protection off
  3676                           ;	Peripheral Pin Select one-way control
  3677                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3678                           ;	Zero Cross Detect Disable Bit
  3679                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3680                           ;	PLL Enable Bit
  3681                           ;	PLLEN = ON, 4x PLL is always enabled
  3682                           ;	Stack Overflow/Underflow Reset Enable
  3683                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3684                           ;	Brown-out Reset Voltage Selection
  3685                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3686                           ;	Low-Power Brown Out Reset
  3687                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3688                           ;	Low-Voltage Programming Enable
  3689                           ;	LVP = ON, Low-voltage programming enabled
  3690  8008                     	org	32776
  3691  8008  3FFF               	dw	16383
  3692                           
  3693                           ;Config register CONFIG3 @ 0x8009
  3694                           ;	WDT Period Select
  3695                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3696                           ;	Watchdog Timer Enable
  3697                           ;	WDTE = OFF, WDT disabled
  3698                           ;	WDT Window Select
  3699                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3700                           ;	WDT Input Clock Selector
  3701                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3702  8009                     	org	32777
  3703  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _remote in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_sensor
    _read_sensor->_i2c_read
    _i2c_read->_i2c_read_byte
    _gyro_config->_i2c_write
    _i2c_write->_nack

Critical Paths under _remote in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _remote in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _remote in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _remote in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _remote in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _remote in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _remote in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _remote in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _remote in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _remote in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _remote in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _remote in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _remote in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2544
                                             18 BANK0      8     8      0
                        _gyro_config
                           _pic_init
                        _read_sensor
 ---------------------------------------------------------------------------------
 (1) _read_sensor                                          1     1      0    1160
                                             17 BANK0      1     1      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                            10     8      2    1160
                                              7 BANK0     10     8      2
                      _i2c_read_byte
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_byte                                        7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gyro_config                                          2     2      0    1384
                                              5 BANK0      2     2      0
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    1384
                                              2 BANK0      3     1      2
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _nack                                                 2     0      2       0
                                              0 BANK0      2     0      2
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_write_byte                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _remote                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gyro_config
     _i2c_write
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _pic_init
   _read_sensor
     _i2c_read
       _i2c_read_byte
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop

 _remote (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Apr 18 21:17:35 2022

                      _p 0049                       l51 01E1                       l52 01EE  
                     l53 01FB                       l57 022D                       l58 024D  
                     l59 026D                      l212 0435                      l206 0395  
                    l215 031B                      l208 0399                      l232 0471  
                    l209 03E1                      l225 038D                      l242 04B6  
                    l219 046C                      l235 0485                      l251 04B9  
                    l245 04CB                      l261 04A4                      l237 0489  
                    l253 04BD                      l238 048F                      l254 04BF  
                    l247 04CF                      l248 04D1                      l264 04C2  
                    l257 0498                      l266 04C6                      l259 049C  
                    l267 04C8                      u950 04C6                      u951 04C5  
                    u960 04CF                      u961 04CE                      u970 049C  
                    u971 049B                      u980 04A3                      u981 04A2  
                    u990 04AA                      u991 04A9                      _ch1 0070  
                    _ch2 0024                      _ch3 0046                      _ch4 0042  
                    wreg 0009  __size_of_i2c_write_byte 0015                     l1601 0484  
                   l1611 0440                     l1603 048B                     l1701 03C3  
                   l1623 0469                     l1615 044B                     l1607 0438  
                   l1711 03D1                     l1703 03C7                     l1631 0330  
                   l1609 043B                     l1721 03D9                     l1713 03D3  
                   l1705 03C9                     l1641 0342                     l1625 031E  
                   l1801 01DD                     l1571 04C9                     l1619 045A  
                   l1723 03DB                     l1715 03D5                     l1707 03CC  
                   l1651 0356                     l1643 0345                     l1635 0333  
                   l1627 0321                     l1731 02A5                     l1811 020D  
                   l1803 01EA                     l1573 0492                     l1581 04AA  
                   l1725 03DD                     l1717 03D6                     l1709 03CE  
                   l1653 0368                     l1645 034B                     l1629 0326  
                   l1813 0229                     l1821 028D                     l1805 01F7  
                   l1741 010B                     l1733 00FC                     l1575 0494  
                   l1583 04AD                     l1727 03DE                     l1719 03D7  
                   l1671 03A1                     l1591 04B7                     l1663 0380  
                   l1655 036B                     l1815 0249                     l1807 0204  
                   l1823 0293                     l1751 0125                     l1743 010D  
                   l1735 0102                     l1577 04A3                     l1569 04C0  
                   l1729 03E2                     l1681 03AD                     l1673 03A3  
                   l1593 046F                     l1657 0372                     l1825 029C  
                   l1817 0269                     l1809 0208                     l1761 0142  
                   l1753 0129                     l1745 010E                     l1737 0104  
                   l1587 04B3                     l1579 04A5                     l1691 03B8  
                   l1683 03B0                     l1675 03A4                     l1667 038E  
                   l1595 0475                     l1819 0289                     l1771 0162  
                   l1763 0146                     l1755 012B                     l1747 0110  
                   l1739 0106                     l1693 03BC                     l1685 03B2  
                   l1677 03A8                     l1669 039E                     l1597 047D  
                   l1781 017E                     l1765 014C                     l1773 0164  
                   l1757 0130                     l1749 0115                     l1695 03BE  
                   l1687 03B4                     l1679 03AB                     l1599 047E  
                   l1791 01AA                     l1775 016B                     l1783 0180  
                   l1767 0155                     l1759 0139                     l1697 03BF  
                   l1689 03B6                     l1793 01AE                     l1785 0183  
                   l1777 0174                     l1769 015E                     l1699 03C1  
                   l1795 01C9                     l1787 0194                     l1779 017D  
                   l1797 01CF                     l1789 01A4                     l1799 01D4  
                   u1000 04BD                     u1001 04BC                     u1010 0475  
                   u1011 0474                     u1100 0399                     u1020 0489  
                   u1101 0398                     u1021 0488                     u1030 044A  
                   u1110 0115                     u1031 0449                     u1111 0114  
                   u1040 0459                     u1200 017D                     u1120 0130  
                   u1041 0458                     u1201 017C                     u1121 012F  
                   u1050 0468                     u1210 01AA                     u1130 0139  
                   u1051 0467                     u1211 01A9                     u1131 0138  
                   u1060 0330                     u1300 0269                     u1220 01C9  
                   u1140 0142                     u1061 032F                     u1301 0268  
                   u1221 01C8                     u1141 0141                     u1070 0341  
                   u1310 0289                     u1230 01CF                     u1150 014C  
                   u1071 0340                     u1311 0288                     u1231 01CE  
                   u1151 014B                     u1080 0355                     u1320 0293  
                   u1240 01DD                     u1160 0155                     u1081 0354  
                   u1321 0292                     u1305 0265                     u1241 01DC  
                   u1161 0154                     u1090 0372                     u1330 029C  
                   u1250 01EA                     u1170 015E                     u1091 0371  
                   u1331 029B                     u1315 0285                     u1251 01E9  
                   u1171 015D                     u1340 02A2                     u1260 01F7  
                   u1180 016B                     u1341 02A1                     u1261 01F6  
                   u1181 016A                     u1270 0204                     u1190 0174  
                   u1271 0203                     u1191 0173                     u1280 0229  
                   u1281 0228                     u1290 0249                     u1291 0248  
                   u1285 0225                     u1295 0245                     _RCEN 10B3  
                   _TMR0 0015                     _TMR1 0016                     _TMR2 001A  
                   _accx 0036                     _accy 0034                     _accz 0032  
                   _esc1 003E                     _esc2 003C                     _esc3 003A  
                   _esc4 0038            _i2c_read_byte 046D                     _nack 04A5  
                   _main 00FC                     _magx 002A                     _magy 0028  
                   _magz 0026                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 00E8  
          ??_i2c_restart 004A                    ?_nack 004A                    ?_main 0076  
                  _IOCCF 0399                    _IOCCN 0398                    _IOCCP 0397  
            i2c_read@low 0056                    _T2RST 001F                    i1l280 006D  
                  i1l291 00E6                    i1l284 009D                    i1l276 003F  
                  i1l288 00D7                    _TMR0H 0044                    _TMR2H 0072  
                  _TMR3H 0494                    _TMR3L 0493                    _TMR5H 049B  
                  _TMR5L 049A                    _PORTA 000C                    u80_20 000A  
                  u80_21 0009                    u81_20 0015                    u81_21 0014  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  u90_20 0084                    u82_20 001E                    u90_21 0083  
                  u82_21 001D                    u91_20 0093                    u83_20 0023  
                  u91_21 0092                    u83_21 0022                    u92_20 00AE  
                  u84_20 0028                    u92_21 00AD                    u84_21 0027  
                  u93_20 00B3                    u85_20 0032                    u93_21 00B2  
                  u85_21 0031                    u94_20 00C3                    u86_20 004F  
                  u94_21 00C2                    u86_21 004E                    u87_20 0054  
                  u87_21 0053                    u88_20 0063                    u88_21 0062  
                  u89_20 007F                    u89_21 007E                    _count 0074  
           ?_read_sensor 0076                    _gyrox 0030                    _gyroy 002E  
                  _gyroz 002C                    _start 0048           ?_i2c_read_byte 004A  
                  status 0003                    wtemp0 007E          __initialization 00EA  
           __end_of_nack 04B7             __end_of_main 02A5         __end_of_i2c_read 038E  
       __end_of_i2c_stop 04C9      __end_of_i2c_restart 04C0                   ??_nack 004C  
                 ??_main 005C                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E             ?_gyro_config 0076             i2c_read@high 0058  
                 _RB4PPS 0E9C                   _RB6PPS 0E9E                   i1l1501 006F  
                 i1l1511 0078                   i1l1503 0073                   i1l1521 008B  
                 i1l1505 0075                   i1l1513 007A                   i1l1531 00A3  
                 i1l1523 008C                   i1l1515 007F                   i1l1507 0076  
                 i1l1451 000F                   i1l1541 00AE                   i1l1533 00A5  
                 i1l1525 0093                   i1l1517 0084                   i1l1509 0077  
                 i1l1461 001E                   i1l1453 0010                   i1l1551 00C3  
                 i1l1543 00B3                   i1l1535 00A6                   i1l1527 009A  
                 i1l1519 0086                   i1l1471 0036                   i1l1463 0023  
                 i1l1455 0015                   i1l1447 0006                   i1l1561 00E1  
                 i1l1553 00D4                   i1l1545 00B4                   i1l1537 00A7  
                 i1l1529 009F                   i1l1481 0047                   i1l1473 003B  
                 i1l1465 0028                   i1l1457 0019                   i1l1449 000A  
                 i1l1563 00E2                   i1l1555 00D9                   i1l1547 00B9  
                 i1l1539 00A9                   i1l1491 0056                   i1l1483 0048  
                 i1l1475 003C                   i1l1467 0029                   i1l1459 001A  
                 i1l1557 00DD                   i1l1549 00BA                   i1l1565 00E3  
                 i1l1493 005B                   i1l1477 0040                   i1l1469 0032  
                 i1l1485 004A                   i1l1567 00E5                   i1l1559 00DF  
                 i1l1495 005C                   i1l1487 004F                   i1l1479 0042  
                 i1l1497 0063                   i1l1489 0054                   i1l1499 006A  
     __size_of_i2c_start 0009       __size_of_i2c_write 0037         __end_of_pic_init 03E2  
                 _remote 0004           _i2c_write_byte 0490          ??_i2c_read_byte 004C  
__end_of__initialization 00F8           __pcstackCOMMON 0076              _i2c_restart 04B7  
      __end_of_i2c_start 04D2        __end_of_i2c_write 046D           _OPTION_REGbits 0095  
 __end_of_i2c_write_byte 04A5               __pbssBANK0 0020     __size_of_read_sensor 0077  
              ?_i2c_read 0051                ?_i2c_stop 0076               __pmaintext 00FC  
             __pintentry 0004                  ?_remote 0076          ?_i2c_write_byte 0076  
                _SSP1ADD 0212                  _SSP1BUF 0211    i2c_write_byte@address 004A  
             ??_i2c_read 0053               ??_i2c_stop 004A     __size_of_gyro_config 0054  
              ?_pic_init 0076          i2c_read@address 005A          __size_of_remote 00E4  
                __ptext1 02A5                  __ptext2 031C                  __ptext3 04B7  
                __ptext4 046D                  __ptext5 038E                  __ptext6 03E2  
                __ptext7 0436                  __ptext8 04A5                  __ptext9 04C0  
              _T1CONbits 0018                _T2CONbits 001C                _T3CONbits 0495  
              _T2HLTbits 001D                _T5CONbits 049C                _IOCCFbits 0399  
                _tmrLoop 0040                  clrloop0 04D3                  _voltaje 0020  
   end_of_initialization 00F8               ??_pic_init 004A                _SSPDATPPS 0E21  
              _SSPCLKPPS 0E20            i2c_write@data 004D             ?_i2c_restart 0076  
     i2c_read@subaddress 0051           __end_of_remote 00E8      start_initialization 00EA  
              _i2c_start 04C9                _i2c_write 0436    __end_of_i2c_read_byte 0490  
      __size_of_i2c_read 0072        __size_of_i2c_stop 0009         ??_i2c_write_byte 004A  
               ??_remote 0076              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 004A               ?_i2c_start 0076               ?_i2c_write 004C  
          ??_read_sensor 005B        __size_of_pic_init 0054                 _T2CLKCON 001E  
          ??_gyro_config 004F                 _LATCbits 010E      __end_of_read_sensor 031C  
              clear_ram0 04D2                 _PIE1bits 0090                 _PIR1bits 0010  
   __size_of_i2c_restart 0009              ??_i2c_start 004A              ??_i2c_write 004E  
               _i2c_read 031C                 _i2c_stop 04C0      __end_of_gyro_config 0436  
               __ptext10 0490                 __ptext11 04C9             _SSP1CON1bits 0215  
           _SSP1CON2bits 0216              _read_sensor 02A5            __size_of_nack 0012  
          __size_of_main 01A9                 _pic_init 038E                 int$flags 007E  
             _ODCONBbits 028D             _SSP1STATbits 0214              _OSCSTATbits 009A  
             _INTCONbits 000B              _gyro_config 03E2                 intlevel1 0000  
    i2c_write@subaddress 004C              _SSP1CONbits 0215               _OSCCONbits 0099  
 __size_of_i2c_read_byte 0023         i2c_write@address 004E              _SSPCON2bits 0216  
      i2c_read_byte@temp 004F         i2c_read_byte@ack 004E  
