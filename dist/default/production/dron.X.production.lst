

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Apr 24 23:37:08 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1619 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  011C                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  018E                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0197                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020D                     	;# 
   174  020E                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028E                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0298                     	;# 
   200  0298                     	;# 
   201  0299                     	;# 
   202  029A                     	;# 
   203  029B                     	;# 
   204  029E                     	;# 
   205  030C                     	;# 
   206  030D                     	;# 
   207  030E                     	;# 
   208  038C                     	;# 
   209  038D                     	;# 
   210  038E                     	;# 
   211  0391                     	;# 
   212  0392                     	;# 
   213  0393                     	;# 
   214  0394                     	;# 
   215  0395                     	;# 
   216  0396                     	;# 
   217  0397                     	;# 
   218  0398                     	;# 
   219  0399                     	;# 
   220  040E                     	;# 
   221  0413                     	;# 
   222  0413                     	;# 
   223  0414                     	;# 
   224  0414                     	;# 
   225  0415                     	;# 
   226  0416                     	;# 
   227  0417                     	;# 
   228  0418                     	;# 
   229  041A                     	;# 
   230  041A                     	;# 
   231  041B                     	;# 
   232  041B                     	;# 
   233  041C                     	;# 
   234  041D                     	;# 
   235  041E                     	;# 
   236  041F                     	;# 
   237  0493                     	;# 
   238  0494                     	;# 
   239  0495                     	;# 
   240  0496                     	;# 
   241  049A                     	;# 
   242  049B                     	;# 
   243  049C                     	;# 
   244  049D                     	;# 
   245  058C                     	;# 
   246  058C                     	;# 
   247  058D                     	;# 
   248  058E                     	;# 
   249  058E                     	;# 
   250  058F                     	;# 
   251  0590                     	;# 
   252  0590                     	;# 
   253  0591                     	;# 
   254  0592                     	;# 
   255  0592                     	;# 
   256  0593                     	;# 
   257  0594                     	;# 
   258  0594                     	;# 
   259  0595                     	;# 
   260  0596                     	;# 
   261  0596                     	;# 
   262  0597                     	;# 
   263  0598                     	;# 
   264  0599                     	;# 
   265  059A                     	;# 
   266  059B                     	;# 
   267  059B                     	;# 
   268  059C                     	;# 
   269  059D                     	;# 
   270  060C                     	;# 
   271  060C                     	;# 
   272  060D                     	;# 
   273  060E                     	;# 
   274  060F                     	;# 
   275  060F                     	;# 
   276  0610                     	;# 
   277  0611                     	;# 
   278  0612                     	;# 
   279  0613                     	;# 
   280  0614                     	;# 
   281  0617                     	;# 
   282  0617                     	;# 
   283  0618                     	;# 
   284  0619                     	;# 
   285  061A                     	;# 
   286  061A                     	;# 
   287  061B                     	;# 
   288  061C                     	;# 
   289  0691                     	;# 
   290  0692                     	;# 
   291  0693                     	;# 
   292  0694                     	;# 
   293  0695                     	;# 
   294  0696                     	;# 
   295  0697                     	;# 
   296  0699                     	;# 
   297  069A                     	;# 
   298  0711                     	;# 
   299  0712                     	;# 
   300  0713                     	;# 
   301  0714                     	;# 
   302  0715                     	;# 
   303  0718                     	;# 
   304  0718                     	;# 
   305  0719                     	;# 
   306  071A                     	;# 
   307  071A                     	;# 
   308  071B                     	;# 
   309  071C                     	;# 
   310  071D                     	;# 
   311  0791                     	;# 
   312  0791                     	;# 
   313  0792                     	;# 
   314  0793                     	;# 
   315  0793                     	;# 
   316  0794                     	;# 
   317  0795                     	;# 
   318  0795                     	;# 
   319  0796                     	;# 
   320  0797                     	;# 
   321  0797                     	;# 
   322  0798                     	;# 
   323  0799                     	;# 
   324  079A                     	;# 
   325  080C                     	;# 
   326  080C                     	;# 
   327  080D                     	;# 
   328  080E                     	;# 
   329  080E                     	;# 
   330  080F                     	;# 
   331  0810                     	;# 
   332  0810                     	;# 
   333  0811                     	;# 
   334  0812                     	;# 
   335  0812                     	;# 
   336  0813                     	;# 
   337  0814                     	;# 
   338  0815                     	;# 
   339  0816                     	;# 
   340  0817                     	;# 
   341  0818                     	;# 
   342  0819                     	;# 
   343  081A                     	;# 
   344  081A                     	;# 
   345  081B                     	;# 
   346  081C                     	;# 
   347  081C                     	;# 
   348  081D                     	;# 
   349  088C                     	;# 
   350  088D                     	;# 
   351  088E                     	;# 
   352  088F                     	;# 
   353  088F                     	;# 
   354  0890                     	;# 
   355  0891                     	;# 
   356  0892                     	;# 
   357  0893                     	;# 
   358  0893                     	;# 
   359  0894                     	;# 
   360  0895                     	;# 
   361  0896                     	;# 
   362  0897                     	;# 
   363  0897                     	;# 
   364  0898                     	;# 
   365  0899                     	;# 
   366  0D8C                     	;# 
   367  0D8C                     	;# 
   368  0D8D                     	;# 
   369  0D8E                     	;# 
   370  0D8F                     	;# 
   371  0D8F                     	;# 
   372  0D90                     	;# 
   373  0D91                     	;# 
   374  0D92                     	;# 
   375  0D92                     	;# 
   376  0D93                     	;# 
   377  0D94                     	;# 
   378  0D95                     	;# 
   379  0D95                     	;# 
   380  0D96                     	;# 
   381  0D97                     	;# 
   382  0D98                     	;# 
   383  0D99                     	;# 
   384  0D9A                     	;# 
   385  0D9B                     	;# 
   386  0D9C                     	;# 
   387  0D9D                     	;# 
   388  0D9E                     	;# 
   389  0D9E                     	;# 
   390  0D9F                     	;# 
   391  0DA0                     	;# 
   392  0DA1                     	;# 
   393  0DA1                     	;# 
   394  0DA2                     	;# 
   395  0DA3                     	;# 
   396  0DA4                     	;# 
   397  0DA4                     	;# 
   398  0DA5                     	;# 
   399  0DA6                     	;# 
   400  0DA7                     	;# 
   401  0DA7                     	;# 
   402  0DA8                     	;# 
   403  0DA9                     	;# 
   404  0DAA                     	;# 
   405  0DAB                     	;# 
   406  0DAC                     	;# 
   407  0DAD                     	;# 
   408  0DAE                     	;# 
   409  0DAF                     	;# 
   410  0E0F                     	;# 
   411  0E10                     	;# 
   412  0E11                     	;# 
   413  0E12                     	;# 
   414  0E13                     	;# 
   415  0E14                     	;# 
   416  0E15                     	;# 
   417  0E16                     	;# 
   418  0E17                     	;# 
   419  0E18                     	;# 
   420  0E19                     	;# 
   421  0E1A                     	;# 
   422  0E1B                     	;# 
   423  0E1C                     	;# 
   424  0E1D                     	;# 
   425  0E1E                     	;# 
   426  0E1F                     	;# 
   427  0E20                     	;# 
   428  0E21                     	;# 
   429  0E22                     	;# 
   430  0E23                     	;# 
   431  0E24                     	;# 
   432  0E25                     	;# 
   433  0E26                     	;# 
   434  0E27                     	;# 
   435  0E28                     	;# 
   436  0E29                     	;# 
   437  0E2A                     	;# 
   438  0E2B                     	;# 
   439  0E2C                     	;# 
   440  0E2D                     	;# 
   441  0E2E                     	;# 
   442  0E90                     	;# 
   443  0E91                     	;# 
   444  0E92                     	;# 
   445  0E94                     	;# 
   446  0E95                     	;# 
   447  0E9C                     	;# 
   448  0E9D                     	;# 
   449  0E9E                     	;# 
   450  0E9F                     	;# 
   451  0EA0                     	;# 
   452  0EA1                     	;# 
   453  0EA2                     	;# 
   454  0EA3                     	;# 
   455  0EA4                     	;# 
   456  0EA5                     	;# 
   457  0EA6                     	;# 
   458  0EA7                     	;# 
   459  0F0F                     	;# 
   460  0F10                     	;# 
   461  0F11                     	;# 
   462  0F12                     	;# 
   463  0F13                     	;# 
   464  0F14                     	;# 
   465  0F15                     	;# 
   466  0F16                     	;# 
   467  0F17                     	;# 
   468  0F18                     	;# 
   469  0F19                     	;# 
   470  0F1A                     	;# 
   471  0F1B                     	;# 
   472  0F1C                     	;# 
   473  0F1D                     	;# 
   474  0F1E                     	;# 
   475  0F1F                     	;# 
   476  0F20                     	;# 
   477  0F21                     	;# 
   478  0F22                     	;# 
   479  0F23                     	;# 
   480  0F24                     	;# 
   481  0F25                     	;# 
   482  0F26                     	;# 
   483  0F27                     	;# 
   484  0F28                     	;# 
   485  0F29                     	;# 
   486  0F2A                     	;# 
   487  0F2B                     	;# 
   488  0F2C                     	;# 
   489  0F2D                     	;# 
   490  0F2E                     	;# 
   491  0F2F                     	;# 
   492  0F30                     	;# 
   493  0F31                     	;# 
   494  0F32                     	;# 
   495  0F33                     	;# 
   496  0F34                     	;# 
   497  0F35                     	;# 
   498  0F36                     	;# 
   499  0F37                     	;# 
   500  0FE4                     	;# 
   501  0FE5                     	;# 
   502  0FE6                     	;# 
   503  0FE7                     	;# 
   504  0FE8                     	;# 
   505  0FE9                     	;# 
   506  0FEA                     	;# 
   507  0FEB                     	;# 
   508  0FED                     	;# 
   509  0FEE                     	;# 
   510  0FEF                     	;# 
   511  0000                     	;# 
   512  0001                     	;# 
   513  0002                     	;# 
   514  0003                     	;# 
   515  0004                     	;# 
   516  0005                     	;# 
   517  0006                     	;# 
   518  0007                     	;# 
   519  0008                     	;# 
   520  0009                     	;# 
   521  000A                     	;# 
   522  000B                     	;# 
   523  000C                     	;# 
   524  000D                     	;# 
   525  000E                     	;# 
   526  0010                     	;# 
   527  0011                     	;# 
   528  0012                     	;# 
   529  0013                     	;# 
   530  0014                     	;# 
   531  0015                     	;# 
   532  0016                     	;# 
   533  0016                     	;# 
   534  0017                     	;# 
   535  0018                     	;# 
   536  0019                     	;# 
   537  001A                     	;# 
   538  001A                     	;# 
   539  001B                     	;# 
   540  001B                     	;# 
   541  001C                     	;# 
   542  001D                     	;# 
   543  001E                     	;# 
   544  001F                     	;# 
   545  008C                     	;# 
   546  008D                     	;# 
   547  008E                     	;# 
   548  0090                     	;# 
   549  0091                     	;# 
   550  0092                     	;# 
   551  0093                     	;# 
   552  0094                     	;# 
   553  0095                     	;# 
   554  0096                     	;# 
   555  0098                     	;# 
   556  0099                     	;# 
   557  009A                     	;# 
   558  009B                     	;# 
   559  009B                     	;# 
   560  009C                     	;# 
   561  009D                     	;# 
   562  009E                     	;# 
   563  009F                     	;# 
   564  010C                     	;# 
   565  010D                     	;# 
   566  010E                     	;# 
   567  0111                     	;# 
   568  0112                     	;# 
   569  0113                     	;# 
   570  0114                     	;# 
   571  0115                     	;# 
   572  0116                     	;# 
   573  0117                     	;# 
   574  0118                     	;# 
   575  0119                     	;# 
   576  011C                     	;# 
   577  018C                     	;# 
   578  018D                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  0211                     	;# 
   618  0211                     	;# 
   619  0212                     	;# 
   620  0212                     	;# 
   621  0213                     	;# 
   622  0213                     	;# 
   623  0214                     	;# 
   624  0214                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  028C                     	;# 
   634  028D                     	;# 
   635  028E                     	;# 
   636  0291                     	;# 
   637  0291                     	;# 
   638  0292                     	;# 
   639  0293                     	;# 
   640  0294                     	;# 
   641  0298                     	;# 
   642  0298                     	;# 
   643  0299                     	;# 
   644  029A                     	;# 
   645  029B                     	;# 
   646  029E                     	;# 
   647  030C                     	;# 
   648  030D                     	;# 
   649  030E                     	;# 
   650  038C                     	;# 
   651  038D                     	;# 
   652  038E                     	;# 
   653  0391                     	;# 
   654  0392                     	;# 
   655  0393                     	;# 
   656  0394                     	;# 
   657  0395                     	;# 
   658  0396                     	;# 
   659  0397                     	;# 
   660  0398                     	;# 
   661  0399                     	;# 
   662  040E                     	;# 
   663  0413                     	;# 
   664  0413                     	;# 
   665  0414                     	;# 
   666  0414                     	;# 
   667  0415                     	;# 
   668  0416                     	;# 
   669  0417                     	;# 
   670  0418                     	;# 
   671  041A                     	;# 
   672  041A                     	;# 
   673  041B                     	;# 
   674  041B                     	;# 
   675  041C                     	;# 
   676  041D                     	;# 
   677  041E                     	;# 
   678  041F                     	;# 
   679  0493                     	;# 
   680  0494                     	;# 
   681  0495                     	;# 
   682  0496                     	;# 
   683  049A                     	;# 
   684  049B                     	;# 
   685  049C                     	;# 
   686  049D                     	;# 
   687  058C                     	;# 
   688  058C                     	;# 
   689  058D                     	;# 
   690  058E                     	;# 
   691  058E                     	;# 
   692  058F                     	;# 
   693  0590                     	;# 
   694  0590                     	;# 
   695  0591                     	;# 
   696  0592                     	;# 
   697  0592                     	;# 
   698  0593                     	;# 
   699  0594                     	;# 
   700  0594                     	;# 
   701  0595                     	;# 
   702  0596                     	;# 
   703  0596                     	;# 
   704  0597                     	;# 
   705  0598                     	;# 
   706  0599                     	;# 
   707  059A                     	;# 
   708  059B                     	;# 
   709  059B                     	;# 
   710  059C                     	;# 
   711  059D                     	;# 
   712  060C                     	;# 
   713  060C                     	;# 
   714  060D                     	;# 
   715  060E                     	;# 
   716  060F                     	;# 
   717  060F                     	;# 
   718  0610                     	;# 
   719  0611                     	;# 
   720  0612                     	;# 
   721  0613                     	;# 
   722  0614                     	;# 
   723  0617                     	;# 
   724  0617                     	;# 
   725  0618                     	;# 
   726  0619                     	;# 
   727  061A                     	;# 
   728  061A                     	;# 
   729  061B                     	;# 
   730  061C                     	;# 
   731  0691                     	;# 
   732  0692                     	;# 
   733  0693                     	;# 
   734  0694                     	;# 
   735  0695                     	;# 
   736  0696                     	;# 
   737  0697                     	;# 
   738  0699                     	;# 
   739  069A                     	;# 
   740  0711                     	;# 
   741  0712                     	;# 
   742  0713                     	;# 
   743  0714                     	;# 
   744  0715                     	;# 
   745  0718                     	;# 
   746  0718                     	;# 
   747  0719                     	;# 
   748  071A                     	;# 
   749  071A                     	;# 
   750  071B                     	;# 
   751  071C                     	;# 
   752  071D                     	;# 
   753  0791                     	;# 
   754  0791                     	;# 
   755  0792                     	;# 
   756  0793                     	;# 
   757  0793                     	;# 
   758  0794                     	;# 
   759  0795                     	;# 
   760  0795                     	;# 
   761  0796                     	;# 
   762  0797                     	;# 
   763  0797                     	;# 
   764  0798                     	;# 
   765  0799                     	;# 
   766  079A                     	;# 
   767  080C                     	;# 
   768  080C                     	;# 
   769  080D                     	;# 
   770  080E                     	;# 
   771  080E                     	;# 
   772  080F                     	;# 
   773  0810                     	;# 
   774  0810                     	;# 
   775  0811                     	;# 
   776  0812                     	;# 
   777  0812                     	;# 
   778  0813                     	;# 
   779  0814                     	;# 
   780  0815                     	;# 
   781  0816                     	;# 
   782  0817                     	;# 
   783  0818                     	;# 
   784  0819                     	;# 
   785  081A                     	;# 
   786  081A                     	;# 
   787  081B                     	;# 
   788  081C                     	;# 
   789  081C                     	;# 
   790  081D                     	;# 
   791  088C                     	;# 
   792  088D                     	;# 
   793  088E                     	;# 
   794  088F                     	;# 
   795  088F                     	;# 
   796  0890                     	;# 
   797  0891                     	;# 
   798  0892                     	;# 
   799  0893                     	;# 
   800  0893                     	;# 
   801  0894                     	;# 
   802  0895                     	;# 
   803  0896                     	;# 
   804  0897                     	;# 
   805  0897                     	;# 
   806  0898                     	;# 
   807  0899                     	;# 
   808  0D8C                     	;# 
   809  0D8C                     	;# 
   810  0D8D                     	;# 
   811  0D8E                     	;# 
   812  0D8F                     	;# 
   813  0D8F                     	;# 
   814  0D90                     	;# 
   815  0D91                     	;# 
   816  0D92                     	;# 
   817  0D92                     	;# 
   818  0D93                     	;# 
   819  0D94                     	;# 
   820  0D95                     	;# 
   821  0D95                     	;# 
   822  0D96                     	;# 
   823  0D97                     	;# 
   824  0D98                     	;# 
   825  0D99                     	;# 
   826  0D9A                     	;# 
   827  0D9B                     	;# 
   828  0D9C                     	;# 
   829  0D9D                     	;# 
   830  0D9E                     	;# 
   831  0D9E                     	;# 
   832  0D9F                     	;# 
   833  0DA0                     	;# 
   834  0DA1                     	;# 
   835  0DA1                     	;# 
   836  0DA2                     	;# 
   837  0DA3                     	;# 
   838  0DA4                     	;# 
   839  0DA4                     	;# 
   840  0DA5                     	;# 
   841  0DA6                     	;# 
   842  0DA7                     	;# 
   843  0DA7                     	;# 
   844  0DA8                     	;# 
   845  0DA9                     	;# 
   846  0DAA                     	;# 
   847  0DAB                     	;# 
   848  0DAC                     	;# 
   849  0DAD                     	;# 
   850  0DAE                     	;# 
   851  0DAF                     	;# 
   852  0E0F                     	;# 
   853  0E10                     	;# 
   854  0E11                     	;# 
   855  0E12                     	;# 
   856  0E13                     	;# 
   857  0E14                     	;# 
   858  0E15                     	;# 
   859  0E16                     	;# 
   860  0E17                     	;# 
   861  0E18                     	;# 
   862  0E19                     	;# 
   863  0E1A                     	;# 
   864  0E1B                     	;# 
   865  0E1C                     	;# 
   866  0E1D                     	;# 
   867  0E1E                     	;# 
   868  0E1F                     	;# 
   869  0E20                     	;# 
   870  0E21                     	;# 
   871  0E22                     	;# 
   872  0E23                     	;# 
   873  0E24                     	;# 
   874  0E25                     	;# 
   875  0E26                     	;# 
   876  0E27                     	;# 
   877  0E28                     	;# 
   878  0E29                     	;# 
   879  0E2A                     	;# 
   880  0E2B                     	;# 
   881  0E2C                     	;# 
   882  0E2D                     	;# 
   883  0E2E                     	;# 
   884  0E90                     	;# 
   885  0E91                     	;# 
   886  0E92                     	;# 
   887  0E94                     	;# 
   888  0E95                     	;# 
   889  0E9C                     	;# 
   890  0E9D                     	;# 
   891  0E9E                     	;# 
   892  0E9F                     	;# 
   893  0EA0                     	;# 
   894  0EA1                     	;# 
   895  0EA2                     	;# 
   896  0EA3                     	;# 
   897  0EA4                     	;# 
   898  0EA5                     	;# 
   899  0EA6                     	;# 
   900  0EA7                     	;# 
   901  0F0F                     	;# 
   902  0F10                     	;# 
   903  0F11                     	;# 
   904  0F12                     	;# 
   905  0F13                     	;# 
   906  0F14                     	;# 
   907  0F15                     	;# 
   908  0F16                     	;# 
   909  0F17                     	;# 
   910  0F18                     	;# 
   911  0F19                     	;# 
   912  0F1A                     	;# 
   913  0F1B                     	;# 
   914  0F1C                     	;# 
   915  0F1D                     	;# 
   916  0F1E                     	;# 
   917  0F1F                     	;# 
   918  0F20                     	;# 
   919  0F21                     	;# 
   920  0F22                     	;# 
   921  0F23                     	;# 
   922  0F24                     	;# 
   923  0F25                     	;# 
   924  0F26                     	;# 
   925  0F27                     	;# 
   926  0F28                     	;# 
   927  0F29                     	;# 
   928  0F2A                     	;# 
   929  0F2B                     	;# 
   930  0F2C                     	;# 
   931  0F2D                     	;# 
   932  0F2E                     	;# 
   933  0F2F                     	;# 
   934  0F30                     	;# 
   935  0F31                     	;# 
   936  0F32                     	;# 
   937  0F33                     	;# 
   938  0F34                     	;# 
   939  0F35                     	;# 
   940  0F36                     	;# 
   941  0F37                     	;# 
   942  0FE4                     	;# 
   943  0FE5                     	;# 
   944  0FE6                     	;# 
   945  0FE7                     	;# 
   946  0FE8                     	;# 
   947  0FE9                     	;# 
   948  0FEA                     	;# 
   949  0FEB                     	;# 
   950  0FED                     	;# 
   951  0FEE                     	;# 
   952  0FEF                     	;# 
   953  0016                     _TMR1	set	22
   954  001A                     _TMR2	set	26
   955  0010                     _PIR1bits	set	16
   956  001F                     _T2RST	set	31
   957  001D                     _T2HLTbits	set	29
   958  001C                     _T2CONbits	set	28
   959  001E                     _T2CLKCON	set	30
   960  0018                     _T1CONbits	set	24
   961  000B                     _INTCONbits	set	11
   962  000C                     _PORTA	set	12
   963  0015                     _TMR0	set	21
   964  009B                     _ADRESL	set	155
   965  009C                     _ADRESH	set	156
   966  009E                     _ADCON1bits	set	158
   967  009D                     _ADCON0bits	set	157
   968  008E                     _TRISC	set	142
   969  008D                     _TRISB	set	141
   970  008C                     _TRISA	set	140
   971  0095                     _OPTION_REGbits	set	149
   972  0090                     _PIE1bits	set	144
   973  009A                     _OSCSTATbits	set	154
   974  0099                     _OSCCONbits	set	153
   975  010E                     _LATCbits	set	270
   976  018E                     _ANSELC	set	398
   977  018D                     _ANSELB	set	397
   978  018C                     _ANSELA	set	396
   979  0215                     _SSP1CON1bits	set	533
   980  0214                     _SSP1STATbits	set	532
   981  0216                     _SSPCON2bits	set	534
   982  0211                     _SSP1BUF	set	529
   983  0216                     _SSP1CON2bits	set	534
   984  0212                     _SSP1ADD	set	530
   985  0215                     _SSP1CONbits	set	533
   986  10B3                     _RCEN	set	4275
   987  028D                     _ODCONBbits	set	653
   988  0399                     _IOCCF	set	921
   989  0398                     _IOCCN	set	920
   990  0399                     _IOCCFbits	set	921
   991  0397                     _IOCCP	set	919
   992  049A                     _TMR5L	set	1178
   993  049B                     _TMR5H	set	1179
   994  0493                     _TMR3L	set	1171
   995  0494                     _TMR3H	set	1172
   996  049C                     _T5CONbits	set	1180
   997  0495                     _T3CONbits	set	1173
   998  0E20                     _SSPCLKPPS	set	3616
   999  0E21                     _SSPDATPPS	set	3617
  1000  0E9E                     _RB6PPS	set	3742
  1001  0E9C                     _RB4PPS	set	3740
  1002                           
  1003                           	psect	cinit
  1004  00ED                     start_initialization:	
  1005                           ; #config settings
  1006                           
  1007  00ED                     __initialization:
  1008                           
  1009                           ; Clear objects allocated to COMMON
  1010  00ED  01F0               	clrf	__pbssCOMMON& (0+127)
  1011  00EE  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1012  00EF  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1013  00F0  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1014  00F1  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1015  00F2  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1016                           
  1017                           ; Clear objects allocated to BANK0
  1018  00F3  3020               	movlw	low __pbssBANK0
  1019  00F4  0084               	movwf	4
  1020  00F5  3000               	movlw	high __pbssBANK0
  1021  00F6  0085               	movwf	5
  1022  00F7  3030               	movlw	48
  1023  00F8  3187  2741  3180   	fcall	clear_ram0
  1024                           
  1025                           ; Clear objects allocated to BANK1
  1026  00FB  0021               	movlb	1	; select bank1
  1027  00FC  01A8               	clrf	__pbssBANK1& (0+127)
  1028  00FD  01A9               	clrf	(__pbssBANK1+1)& (0+127)
  1029  00FE  01AA               	clrf	(__pbssBANK1+2)& (0+127)
  1030  00FF  01AB               	clrf	(__pbssBANK1+3)& (0+127)
  1031  0100  01AC               	clrf	(__pbssBANK1+4)& (0+127)
  1032  0101  01AD               	clrf	(__pbssBANK1+5)& (0+127)
  1033  0102                     end_of_initialization:	
  1034                           ;End of C runtime variable initialization code
  1035                           
  1036  0102                     __end_of__initialization:
  1037  0102  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1038  0103  0020               	movlb	0
  1039  0104  3181  2906         	ljmp	_main	;jump to C main() function
  1040                           
  1041                           	psect	bssCOMMON
  1042  0070                     __pbssCOMMON:
  1043  0070                     _voltage:
  1044  0070                     	ds	2
  1045  0072                     _TMR2H:
  1046  0072                     	ds	2
  1047  0074                     _count:
  1048  0074                     	ds	2
  1049                           
  1050                           	psect	bssBANK0
  1051  0020                     __pbssBANK0:
  1052  0020                     _gyroZ_cal:
  1053  0020                     	ds	4
  1054  0024                     _gyroY_cal:
  1055  0024                     	ds	4
  1056  0028                     _gyroX_cal:
  1057  0028                     	ds	4
  1058  002C                     _ch4:
  1059  002C                     	ds	2
  1060  002E                     _ch3:
  1061  002E                     	ds	2
  1062  0030                     _tmrLoop:
  1063  0030                     	ds	2
  1064  0032                     _TMR0H:
  1065  0032                     	ds	2
  1066  0034                     _esc4:
  1067  0034                     	ds	2
  1068  0036                     _esc3:
  1069  0036                     	ds	2
  1070  0038                     _esc2:
  1071  0038                     	ds	2
  1072  003A                     _esc1:
  1073  003A                     	ds	2
  1074  003C                     _magz:
  1075  003C                     	ds	2
  1076  003E                     _magy:
  1077  003E                     	ds	2
  1078  0040                     _magx:
  1079  0040                     	ds	2
  1080  0042                     _gyroz:
  1081  0042                     	ds	2
  1082  0044                     _gyroy:
  1083  0044                     	ds	2
  1084  0046                     _gyrox:
  1085  0046                     	ds	2
  1086  0048                     _accz:
  1087  0048                     	ds	2
  1088  004A                     _accy:
  1089  004A                     	ds	2
  1090  004C                     _accx:
  1091  004C                     	ds	2
  1092  004E                     _start:
  1093  004E                     	ds	1
  1094  004F                     _p:
  1095  004F                     	ds	1
  1096                           
  1097                           	psect	bssBANK1
  1098  00A8                     __pbssBANK1:
  1099  00A8                     _setpoint:
  1100  00A8                     	ds	2
  1101  00AA                     _ch2:
  1102  00AA                     	ds	2
  1103  00AC                     _ch1:
  1104  00AC                     	ds	2
  1105                           
  1106                           	psect	clrtext
  1107  0741                     clear_ram0:	
  1108                           ;	Called with FSR0 containing the base address, and
  1109                           ;	WREG with the size to clear
  1110                           
  1111  0741  0064               	clrwdt	;clear the watchdog before getting into this loop
  1112  0742                     clrloop0:
  1113  0742  0180               	clrf	0	;clear RAM location pointed to by FSR
  1114  0743  3101               	addfsr 0,1
  1115  0744  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1116  0745  2F42               	goto	clrloop0	;have we reached the end yet?
  1117  0746  3400               	retlw	0	;all done for this memory range, return
  1118                           
  1119                           	psect	cstackBANK1
  1120  00A0                     __pcstackBANK1:
  1121  00A0                     ??_main:
  1122                           
  1123                           ; 1 bytes @ 0x0
  1124  00A0                     	ds	8
  1125                           
  1126                           	psect	cstackCOMMON
  1127  0076                     __pcstackCOMMON:
  1128  0076                     ?_pic_init:
  1129  0076                     ?_gyro_config:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0076                     ?_reset_timer_loop:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0076                     ?_read_sensor:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0076                     ?_calculate_pid:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0076                     ?_balance_drone:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0076                     ?_battery_compensation:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0076                     ?_gyro_cal:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0076                     ?_i2c_start:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0076                     ?_i2c_write_byte:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0076                     ?_i2c_stop:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0076                     ?_i2c_restart:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0076                     ?_main:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0076                     ?_remote:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0076                     ??_remote:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0x0
  1173  0076                     	ds	6
  1174                           
  1175                           	psect	cstackBANK0
  1176  0050                     __pcstackBANK0:
  1177  0050                     ??_pic_init:
  1178  0050                     ??_reset_timer_loop:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0050                     ??_calculate_pid:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0050                     ??_balance_drone:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0050                     ??_battery_compensation:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0050                     ??_i2c_start:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0050                     ??_i2c_write_byte:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0050                     ??_i2c_stop:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0050                     ??_i2c_restart:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0050                     ?_nack:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0050                     ?_i2c_read_byte:	
  1206                           ; 2 bytes @ 0x0
  1207                           
  1208  0050                     ?___awmod:	
  1209                           ; 2 bytes @ 0x0
  1210                           
  1211  0050                     ?___aldiv:	
  1212                           ; 2 bytes @ 0x0
  1213                           
  1214  0050                     i2c_write_byte@address:	
  1215                           ; 4 bytes @ 0x0
  1216                           
  1217  0050                     ___awmod@divisor:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0050                     ___aldiv@divisor:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223                           
  1224                           ; 4 bytes @ 0x0
  1225  0050                     	ds	2
  1226  0052                     ?_i2c_write:
  1227  0052                     ??_nack:	
  1228                           ; 1 bytes @ 0x2
  1229                           
  1230  0052                     ??_i2c_read_byte:	
  1231                           ; 1 bytes @ 0x2
  1232                           
  1233  0052                     i2c_write@subaddress:	
  1234                           ; 1 bytes @ 0x2
  1235                           
  1236  0052                     ___awmod@dividend:	
  1237                           ; 1 bytes @ 0x2
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0x2
  1241  0052                     	ds	1
  1242  0053                     i2c_write@data:
  1243                           
  1244                           ; 1 bytes @ 0x3
  1245  0053                     	ds	1
  1246  0054                     ??_i2c_write:
  1247  0054                     ??___awmod:	
  1248                           ; 1 bytes @ 0x4
  1249                           
  1250  0054                     i2c_write@address:	
  1251                           ; 1 bytes @ 0x4
  1252                           
  1253  0054                     i2c_read_byte@ack:	
  1254                           ; 1 bytes @ 0x4
  1255                           
  1256  0054                     ___aldiv@dividend:	
  1257                           ; 1 bytes @ 0x4
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x4
  1261  0054                     	ds	1
  1262  0055                     ___awmod@counter:
  1263  0055                     i2c_read_byte@temp:	
  1264                           ; 1 bytes @ 0x5
  1265                           
  1266                           
  1267                           ; 2 bytes @ 0x5
  1268  0055                     	ds	1
  1269  0056                     ___awmod@sign:
  1270                           
  1271                           ; 1 bytes @ 0x6
  1272  0056                     	ds	1
  1273  0057                     ?_i2c_read:
  1274  0057                     i2c_read@subaddress:	
  1275                           ; 2 bytes @ 0x7
  1276                           
  1277                           
  1278                           ; 1 bytes @ 0x7
  1279  0057                     	ds	1
  1280  0058                     ??___aldiv:
  1281                           
  1282                           ; 1 bytes @ 0x8
  1283  0058                     	ds	1
  1284  0059                     ??_i2c_read:
  1285  0059                     ___aldiv@counter:	
  1286                           ; 1 bytes @ 0x9
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x9
  1290  0059                     	ds	1
  1291  005A                     ___aldiv@sign:
  1292                           
  1293                           ; 1 bytes @ 0xA
  1294  005A                     	ds	1
  1295  005B                     ___aldiv@quotient:
  1296                           
  1297                           ; 4 bytes @ 0xB
  1298  005B                     	ds	1
  1299  005C                     i2c_read@low:
  1300                           
  1301                           ; 2 bytes @ 0xC
  1302  005C                     	ds	2
  1303  005E                     i2c_read@high:
  1304                           
  1305                           ; 2 bytes @ 0xE
  1306  005E                     	ds	2
  1307  0060                     i2c_read@address:
  1308                           
  1309                           ; 1 bytes @ 0x10
  1310  0060                     	ds	1
  1311  0061                     ??_read_sensor:
  1312                           
  1313                           ; 1 bytes @ 0x11
  1314  0061                     	ds	1
  1315  0062                     ??_gyro_cal:
  1316                           
  1317                           ; 1 bytes @ 0x12
  1318  0062                     	ds	4
  1319  0066                     gyro_cal@x:
  1320                           
  1321                           ; 2 bytes @ 0x16
  1322  0066                     	ds	2
  1323  0068                     ??_gyro_config:
  1324                           
  1325                           ; 1 bytes @ 0x18
  1326  0068                     	ds	2
  1327                           
  1328                           	psect	maintext
  1329  0106                     __pmaintext:	
  1330 ;;
  1331 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1332 ;;
  1333 ;; *************** function _main *****************
  1334 ;; Defined at:
  1335 ;;		line 34 in file "main.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : B1F/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1351 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1353 ;;Total ram usage:        8 bytes
  1354 ;; Hardware stack levels required when called:    7
  1355 ;; This function calls:
  1356 ;;		_balance_drone
  1357 ;;		_battery_compensation
  1358 ;;		_calculate_pid
  1359 ;;		_gyro_config
  1360 ;;		_pic_init
  1361 ;;		_read_sensor
  1362 ;;		_reset_timer_loop
  1363 ;; This function is called by:
  1364 ;;		Startup code after reset
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _main
  1370  0106                     _main:
  1371  0106                     l2190:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1374                           
  1375                           
  1376                           ;main.c: 36:     pic_init();
  1377  0106  3185  2579  3181   	fcall	_pic_init
  1378  0109                     l2192:
  1379                           
  1380                           ;main.c: 39:     start = 0;
  1381  0109  0020               	movlb	0	; select bank0
  1382  010A  01CE               	clrf	_start
  1383  010B                     l2194:
  1384                           
  1385                           ;main.c: 40:     LATCbits.LATC7 = 0;
  1386  010B  0022               	movlb	2	; select bank2
  1387  010C  138E               	bcf	14,7	;volatile
  1388  010D                     l2196:
  1389                           
  1390                           ;main.c: 41:     ch3 = 1000;
  1391  010D  30E8               	movlw	232
  1392  010E  0020               	movlb	0	; select bank0
  1393  010F  00AE               	movwf	_ch3
  1394  0110  3003               	movlw	3
  1395  0111  00AF               	movwf	_ch3+1
  1396  0112                     l2198:
  1397                           
  1398                           ;main.c: 43:     gyro_config();
  1399  0112  3185  25DA  3181   	fcall	_gyro_config
  1400  0115                     l2200:
  1401                           
  1402                           ;main.c: 48:         reset_timer_loop();
  1403  0115  3187  273A  3181   	fcall	_reset_timer_loop
  1404  0118                     l2202:
  1405                           
  1406                           ;main.c: 50:         if(!start){
  1407  0118  0020               	movlb	0	; select bank0
  1408  0119  084E               	movf	_start,w
  1409  011A  1D03               	btfss	3,2
  1410  011B  291D               	goto	u2111
  1411  011C  291E               	goto	u2110
  1412  011D                     u2111:
  1413  011D  2934               	goto	l2210
  1414  011E                     u2110:
  1415  011E                     l2204:
  1416                           
  1417                           ;main.c: 52:             esc1 = esc2 = esc3 = esc4 = 1000;
  1418  011E  30E8               	movlw	232
  1419  011F  00B4               	movwf	_esc4
  1420  0120  3003               	movlw	3
  1421  0121  00B5               	movwf	_esc4+1
  1422  0122  0835               	movf	_esc4+1,w
  1423  0123  00B7               	movwf	_esc3+1
  1424  0124  0834               	movf	_esc4,w
  1425  0125  00B6               	movwf	_esc3
  1426  0126  0837               	movf	_esc3+1,w
  1427  0127  00B9               	movwf	_esc2+1
  1428  0128  0836               	movf	_esc3,w
  1429  0129  00B8               	movwf	_esc2
  1430  012A  0839               	movf	_esc2+1,w
  1431  012B  00BB               	movwf	_esc1+1
  1432  012C  0838               	movf	_esc2,w
  1433  012D  00BA               	movwf	_esc1
  1434  012E                     l2206:
  1435                           
  1436                           ;main.c: 53:             p.p1 = p.p2 = p.p3 = p.p4 = 0;
  1437  012E  11CF               	bcf	_p,3
  1438  012F  114F               	bcf	_p,2
  1439  0130  10CF               	bcf	_p,1
  1440  0131  104F               	bcf	_p,0
  1441  0132                     l2208:
  1442                           
  1443                           ;main.c: 54:             start = 1;
  1444  0132  01CE               	clrf	_start
  1445  0133  0ACE               	incf	_start,f
  1446  0134                     l2210:
  1447                           
  1448                           ;main.c: 56:         if(start == 1 && ch4 > 1900 && ch3 < 1050){
  1449  0134  034E               	decf	_start,w
  1450  0135  1D03               	btfss	3,2
  1451  0136  2938               	goto	u2121
  1452  0137  2939               	goto	u2120
  1453  0138                     u2121:
  1454  0138  2951               	goto	l2218
  1455  0139                     u2120:
  1456  0139                     l2212:
  1457  0139  3007               	movlw	7
  1458  013A  022D               	subwf	_ch4+1,w
  1459  013B  306D               	movlw	109
  1460  013C  1903               	skipnz
  1461  013D  022C               	subwf	_ch4,w
  1462  013E  1C03               	skipc
  1463  013F  2941               	goto	u2131
  1464  0140  2942               	goto	u2130
  1465  0141                     u2131:
  1466  0141  2951               	goto	l2218
  1467  0142                     u2130:
  1468  0142                     l2214:
  1469  0142  3004               	movlw	4
  1470  0143  022F               	subwf	_ch3+1,w
  1471  0144  301A               	movlw	26
  1472  0145  1903               	skipnz
  1473  0146  022E               	subwf	_ch3,w
  1474  0147  1803               	skipnc
  1475  0148  294A               	goto	u2141
  1476  0149  294B               	goto	u2140
  1477  014A                     u2141:
  1478  014A  2951               	goto	l2218
  1479  014B                     u2140:
  1480  014B                     l2216:
  1481                           
  1482                           ;main.c: 57:             start = 2;
  1483  014B  3002               	movlw	2
  1484  014C  0021               	movlb	1	; select bank1
  1485  014D  00A0               	movwf	??_main^(0+128)
  1486  014E  0820               	movf	??_main^(0+128),w
  1487  014F  0020               	movlb	0	; select bank0
  1488  0150  00CE               	movwf	_start
  1489  0151                     l2218:
  1490                           
  1491                           ;main.c: 60:         if(start == 2 && ch4 < 1600 && ch3 < 1050){
  1492  0151  3002               	movlw	2
  1493  0152  064E               	xorwf	_start,w
  1494  0153  1D03               	btfss	3,2
  1495  0154  2956               	goto	u2151
  1496  0155  2957               	goto	u2150
  1497  0156                     u2151:
  1498  0156  296F               	goto	l2226
  1499  0157                     u2150:
  1500  0157                     l2220:
  1501  0157  3006               	movlw	6
  1502  0158  022D               	subwf	_ch4+1,w
  1503  0159  3040               	movlw	64
  1504  015A  1903               	skipnz
  1505  015B  022C               	subwf	_ch4,w
  1506  015C  1803               	skipnc
  1507  015D  295F               	goto	u2161
  1508  015E  2960               	goto	u2160
  1509  015F                     u2161:
  1510  015F  296F               	goto	l2226
  1511  0160                     u2160:
  1512  0160                     l2222:
  1513  0160  3004               	movlw	4
  1514  0161  022F               	subwf	_ch3+1,w
  1515  0162  301A               	movlw	26
  1516  0163  1903               	skipnz
  1517  0164  022E               	subwf	_ch3,w
  1518  0165  1803               	skipnc
  1519  0166  2968               	goto	u2171
  1520  0167  2969               	goto	u2170
  1521  0168                     u2171:
  1522  0168  296F               	goto	l2226
  1523  0169                     u2170:
  1524  0169                     l2224:
  1525                           
  1526                           ;main.c: 61:             start = 3;
  1527  0169  3003               	movlw	3
  1528  016A  0021               	movlb	1	; select bank1
  1529  016B  00A0               	movwf	??_main^(0+128)
  1530  016C  0820               	movf	??_main^(0+128),w
  1531  016D  0020               	movlb	0	; select bank0
  1532  016E  00CE               	movwf	_start
  1533  016F                     l2226:
  1534                           
  1535                           ;main.c: 65:         if(start == 3 && ch4 < 1050 && ch3 < 1050){
  1536  016F  3003               	movlw	3
  1537  0170  064E               	xorwf	_start,w
  1538  0171  1D03               	btfss	3,2
  1539  0172  2974               	goto	u2181
  1540  0173  2975               	goto	u2180
  1541  0174                     u2181:
  1542  0174  2988               	goto	l2234
  1543  0175                     u2180:
  1544  0175                     l2228:
  1545  0175  3004               	movlw	4
  1546  0176  022D               	subwf	_ch4+1,w
  1547  0177  301A               	movlw	26
  1548  0178  1903               	skipnz
  1549  0179  022C               	subwf	_ch4,w
  1550  017A  1803               	skipnc
  1551  017B  297D               	goto	u2191
  1552  017C  297E               	goto	u2190
  1553  017D                     u2191:
  1554  017D  2988               	goto	l2234
  1555  017E                     u2190:
  1556  017E                     l2230:
  1557  017E  3004               	movlw	4
  1558  017F  022F               	subwf	_ch3+1,w
  1559  0180  301A               	movlw	26
  1560  0181  1903               	skipnz
  1561  0182  022E               	subwf	_ch3,w
  1562  0183  1803               	skipnc
  1563  0184  2986               	goto	u2201
  1564  0185  2987               	goto	u2200
  1565  0186                     u2201:
  1566  0186  2988               	goto	l2234
  1567  0187                     u2200:
  1568  0187                     l2232:
  1569                           
  1570                           ;main.c: 66:             start = 0;
  1571  0187  01CE               	clrf	_start
  1572  0188                     l2234:
  1573                           
  1574                           ;main.c: 70:         read_sensor();
  1575  0188  3184  2480  3181   	fcall	_read_sensor
  1576  018B                     l2236:
  1577                           
  1578                           ;main.c: 72:         calculate_pid();
  1579  018B  3187  2747  3181   	fcall	_calculate_pid
  1580  018E                     l2238:
  1581                           
  1582                           ;main.c: 74:         balance_drone();
  1583  018E  3187  2748  3181   	fcall	_balance_drone
  1584  0191                     l2240:
  1585                           
  1586                           ;main.c: 75:         battery_compensation();
  1587  0191  3186  26DF  3181   	fcall	_battery_compensation
  1588  0194                     l2242:
  1589                           
  1590                           ;main.c: 76:         esc1 = esc2 = esc3 = esc4 = ch3;
  1591  0194  0020               	movlb	0	; select bank0
  1592  0195  082F               	movf	_ch3+1,w
  1593  0196  00B5               	movwf	_esc4+1
  1594  0197  082E               	movf	_ch3,w
  1595  0198  00B4               	movwf	_esc4
  1596  0199  0835               	movf	_esc4+1,w
  1597  019A  00B7               	movwf	_esc3+1
  1598  019B  0834               	movf	_esc4,w
  1599  019C  00B6               	movwf	_esc3
  1600  019D  0837               	movf	_esc3+1,w
  1601  019E  00B9               	movwf	_esc2+1
  1602  019F  0836               	movf	_esc3,w
  1603  01A0  00B8               	movwf	_esc2
  1604  01A1  0839               	movf	_esc2+1,w
  1605  01A2  00BB               	movwf	_esc1+1
  1606  01A3  0838               	movf	_esc2,w
  1607  01A4  00BA               	movwf	_esc1
  1608  01A5                     l2244:
  1609                           
  1610                           ;main.c: 77:         tmrLoop = (TMR0H << 8) | TMR0;
  1611  01A5  0815               	movf	21,w	;volatile
  1612  01A6  0021               	movlb	1	; select bank1
  1613  01A7  00A0               	movwf	??_main^(0+128)
  1614  01A8  01A1               	clrf	(??_main^(0+128)+1)
  1615  01A9  0020               	movlb	0	; select bank0
  1616  01AA  0832               	movf	_TMR0H,w
  1617  01AB  0021               	movlb	1	; select bank1
  1618  01AC  00A3               	movwf	((??_main+2)^(0+128)+1)
  1619  01AD  01A2               	clrf	(??_main+2)^(0+128)
  1620  01AE  0820               	movf	??_main^(0+128),w
  1621  01AF  0422               	iorwf	(??_main+2)^(0+128),w
  1622  01B0  00A4               	movwf	(??_main+4)^(0+128)
  1623  01B1  0821               	movf	(??_main+1)^(0+128),w
  1624  01B2  0423               	iorwf	(??_main+3)^(0+128),w
  1625  01B3  00A5               	movwf	(??_main+5)^(0+128)
  1626  01B4  0824               	movf	(??_main+4)^(0+128),w
  1627  01B5  0020               	movlb	0	; select bank0
  1628  01B6  00B0               	movwf	_tmrLoop
  1629  01B7  0021               	movlb	1	; select bank1
  1630  01B8  0825               	movf	(??_main+5)^(0+128),w
  1631  01B9  0020               	movlb	0	; select bank0
  1632  01BA  00B1               	movwf	_tmrLoop+1
  1633  01BB                     l2246:
  1634                           
  1635                           ;main.c: 79:         if(start < 3){
  1636  01BB  3003               	movlw	3
  1637  01BC  024E               	subwf	_start,w
  1638  01BD  1803               	skipnc
  1639  01BE  29C0               	goto	u2211
  1640  01BF  29C1               	goto	u2210
  1641  01C0                     u2211:
  1642  01C0  29F8               	goto	l2256
  1643  01C1                     u2210:
  1644  01C1                     l2248:
  1645                           
  1646                           ;main.c: 80:             PORTA |= 0b00010111;
  1647  01C1  3017               	movlw	23
  1648  01C2  0021               	movlb	1	; select bank1
  1649  01C3  00A0               	movwf	??_main^(0+128)
  1650  01C4  0820               	movf	??_main^(0+128),w
  1651  01C5  0020               	movlb	0	; select bank0
  1652  01C6  048C               	iorwf	12,f	;volatile
  1653  01C7                     l2250:	
  1654                           ;main.c: 81:             while((((TMR0H << 8) | TMR0) - tmrLoop) < 1000 || TMR0 < 0xE8);
  1655                           
  1656  01C7  0020               	movlb	0	; select bank0
  1657  01C8  0815               	movf	21,w	;volatile
  1658  01C9  0021               	movlb	1	; select bank1
  1659  01CA  00A0               	movwf	??_main^(0+128)
  1660  01CB  01A1               	clrf	(??_main^(0+128)+1)
  1661  01CC  0020               	movlb	0	; select bank0
  1662  01CD  0832               	movf	_TMR0H,w
  1663  01CE  0021               	movlb	1	; select bank1
  1664  01CF  00A3               	movwf	((??_main+2)^(0+128)+1)
  1665  01D0  01A2               	clrf	(??_main+2)^(0+128)
  1666  01D1  0820               	movf	??_main^(0+128),w
  1667  01D2  0422               	iorwf	(??_main+2)^(0+128),w
  1668  01D3  00A4               	movwf	(??_main+4)^(0+128)
  1669  01D4  0821               	movf	(??_main+1)^(0+128),w
  1670  01D5  0423               	iorwf	(??_main+3)^(0+128),w
  1671  01D6  00A5               	movwf	(??_main+5)^(0+128)
  1672  01D7  0020               	movlb	0	; select bank0
  1673  01D8  0830               	movf	_tmrLoop,w
  1674  01D9  0021               	movlb	1	; select bank1
  1675  01DA  0224               	subwf	(??_main+4)^(0+128),w
  1676  01DB  00A6               	movwf	(??_main+6)^(0+128)
  1677  01DC  0020               	movlb	0	; select bank0
  1678  01DD  0831               	movf	_tmrLoop+1,w
  1679  01DE  0021               	movlb	1	; select bank1
  1680  01DF  3B25               	subwfb	(??_main+5)^(0+128),w
  1681  01E0  00A7               	movwf	(??_main+7)^(0+128)
  1682  01E1  3003               	movlw	3
  1683  01E2  0227               	subwf	(??_main+7)^(0+128),w
  1684  01E3  30E8               	movlw	232
  1685  01E4  1903               	skipnz
  1686  01E5  0226               	subwf	(??_main+6)^(0+128),w
  1687  01E6  1C03               	skipc
  1688  01E7  29E9               	goto	u2221
  1689  01E8  29EA               	goto	u2220
  1690  01E9                     u2221:
  1691  01E9  29C7               	goto	l2250
  1692  01EA                     u2220:
  1693  01EA                     l2252:
  1694  01EA  30E8               	movlw	232
  1695  01EB  0020               	movlb	0	; select bank0
  1696  01EC  0215               	subwf	21,w	;volatile
  1697  01ED  1C03               	skipc
  1698  01EE  29F0               	goto	u2231
  1699  01EF  29F1               	goto	u2230
  1700  01F0                     u2231:
  1701  01F0  29C7               	goto	l2250
  1702  01F1                     u2230:
  1703  01F1                     l2254:
  1704                           
  1705                           ;main.c: 82:             PORTA &= 0b11101000;
  1706  01F1  30E8               	movlw	232
  1707  01F2  0021               	movlb	1	; select bank1
  1708  01F3  00A0               	movwf	??_main^(0+128)
  1709  01F4  0820               	movf	??_main^(0+128),w
  1710  01F5  0020               	movlb	0	; select bank0
  1711  01F6  058C               	andwf	12,f	;volatile
  1712                           
  1713                           ;main.c: 83:         }
  1714  01F7  2AE9               	goto	l2280
  1715  01F8                     l2256:
  1716                           
  1717                           ;main.c: 86:             if(esc1 < 1200)esc1 = 1200;
  1718  01F8  3004               	movlw	4
  1719  01F9  023B               	subwf	_esc1+1,w
  1720  01FA  30B0               	movlw	176
  1721  01FB  1903               	skipnz
  1722  01FC  023A               	subwf	_esc1,w
  1723  01FD  1803               	skipnc
  1724  01FE  2A00               	goto	u2241
  1725  01FF  2A01               	goto	u2240
  1726  0200                     u2241:
  1727  0200  2A05               	goto	l87
  1728  0201                     u2240:
  1729  0201                     l2258:
  1730  0201  30B0               	movlw	176
  1731  0202  00BA               	movwf	_esc1
  1732  0203  3004               	movlw	4
  1733  0204  00BB               	movwf	_esc1+1
  1734  0205                     l87:
  1735                           
  1736                           ;main.c: 87:             if(esc2 < 1200)esc2 = 1200;
  1737  0205  3004               	movlw	4
  1738  0206  0239               	subwf	_esc2+1,w
  1739  0207  30B0               	movlw	176
  1740  0208  1903               	skipnz
  1741  0209  0238               	subwf	_esc2,w
  1742  020A  1803               	skipnc
  1743  020B  2A0D               	goto	u2251
  1744  020C  2A0E               	goto	u2250
  1745  020D                     u2251:
  1746  020D  2A12               	goto	l88
  1747  020E                     u2250:
  1748  020E                     l2260:
  1749  020E  30B0               	movlw	176
  1750  020F  00B8               	movwf	_esc2
  1751  0210  3004               	movlw	4
  1752  0211  00B9               	movwf	_esc2+1
  1753  0212                     l88:
  1754                           
  1755                           ;main.c: 88:             if(esc3 < 1200)esc3 = 1200;
  1756  0212  3004               	movlw	4
  1757  0213  0237               	subwf	_esc3+1,w
  1758  0214  30B0               	movlw	176
  1759  0215  1903               	skipnz
  1760  0216  0236               	subwf	_esc3,w
  1761  0217  1803               	skipnc
  1762  0218  2A1A               	goto	u2261
  1763  0219  2A1B               	goto	u2260
  1764  021A                     u2261:
  1765  021A  2A1F               	goto	l89
  1766  021B                     u2260:
  1767  021B                     l2262:
  1768  021B  30B0               	movlw	176
  1769  021C  00B6               	movwf	_esc3
  1770  021D  3004               	movlw	4
  1771  021E  00B7               	movwf	_esc3+1
  1772  021F                     l89:
  1773                           
  1774                           ;main.c: 89:             if(esc4 < 1200)esc4 = 1200;
  1775  021F  3004               	movlw	4
  1776  0220  0235               	subwf	_esc4+1,w
  1777  0221  30B0               	movlw	176
  1778  0222  1903               	skipnz
  1779  0223  0234               	subwf	_esc4,w
  1780  0224  1803               	skipnc
  1781  0225  2A27               	goto	u2271
  1782  0226  2A28               	goto	u2270
  1783  0227                     u2271:
  1784  0227  2A2C               	goto	l2266
  1785  0228                     u2270:
  1786  0228                     l2264:
  1787  0228  30B0               	movlw	176
  1788  0229  00B4               	movwf	_esc4
  1789  022A  3004               	movlw	4
  1790  022B  00B5               	movwf	_esc4+1
  1791  022C                     l2266:
  1792                           
  1793                           ;main.c: 90:             PORTA |= 0b00010111;
  1794  022C  3017               	movlw	23
  1795  022D  0021               	movlb	1	; select bank1
  1796  022E  00A0               	movwf	??_main^(0+128)
  1797  022F  0820               	movf	??_main^(0+128),w
  1798  0230  0020               	movlb	0	; select bank0
  1799  0231  048C               	iorwf	12,f	;volatile
  1800                           
  1801                           ;main.c: 91:             while((PORTA & 0b00010111) > 0){
  1802  0232  2AE3               	goto	l2278
  1803  0233                     l2268:
  1804                           
  1805                           ;main.c: 92:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc1)PORTA &= 0b1111
      +                          1110;
  1806  0233  0815               	movf	21,w	;volatile
  1807  0234  0021               	movlb	1	; select bank1
  1808  0235  00A0               	movwf	??_main^(0+128)
  1809  0236  01A1               	clrf	(??_main^(0+128)+1)
  1810  0237  0020               	movlb	0	; select bank0
  1811  0238  0832               	movf	_TMR0H,w
  1812  0239  0021               	movlb	1	; select bank1
  1813  023A  00A3               	movwf	((??_main+2)^(0+128)+1)
  1814  023B  01A2               	clrf	(??_main+2)^(0+128)
  1815  023C  0820               	movf	??_main^(0+128),w
  1816  023D  0422               	iorwf	(??_main+2)^(0+128),w
  1817  023E  00A4               	movwf	(??_main+4)^(0+128)
  1818  023F  0821               	movf	(??_main+1)^(0+128),w
  1819  0240  0423               	iorwf	(??_main+3)^(0+128),w
  1820  0241  00A5               	movwf	(??_main+5)^(0+128)
  1821  0242  0020               	movlb	0	; select bank0
  1822  0243  0830               	movf	_tmrLoop,w
  1823  0244  0021               	movlb	1	; select bank1
  1824  0245  0224               	subwf	(??_main+4)^(0+128),w
  1825  0246  00A6               	movwf	(??_main+6)^(0+128)
  1826  0247  0020               	movlb	0	; select bank0
  1827  0248  0831               	movf	_tmrLoop+1,w
  1828  0249  0021               	movlb	1	; select bank1
  1829  024A  3B25               	subwfb	(??_main+5)^(0+128),w
  1830  024B  00A7               	movwf	(??_main+7)^(0+128)
  1831  024C  0827               	movf	(??_main+7)^(0+128),w
  1832  024D  0020               	movlb	0	; select bank0
  1833  024E  023B               	subwf	_esc1+1,w
  1834  024F  1D03               	skipz
  1835  0250  2A55               	goto	u2285
  1836  0251  0021               	movlb	1	; select bank1
  1837  0252  0826               	movf	(??_main+6)^(0+128),w
  1838  0253  0020               	movlb	0	; select bank0
  1839  0254  023A               	subwf	_esc1,w
  1840  0255                     u2285:
  1841  0255  1803               	skipnc
  1842  0256  2A58               	goto	u2281
  1843  0257  2A59               	goto	u2280
  1844  0258                     u2281:
  1845  0258  2A5F               	goto	l93
  1846  0259                     u2280:
  1847  0259                     l2270:
  1848  0259  30FE               	movlw	254
  1849  025A  0021               	movlb	1	; select bank1
  1850  025B  00A0               	movwf	??_main^(0+128)
  1851  025C  0820               	movf	??_main^(0+128),w
  1852  025D  0020               	movlb	0	; select bank0
  1853  025E  058C               	andwf	12,f	;volatile
  1854  025F                     l93:
  1855                           
  1856                           ;main.c: 93:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc2)PORTA &= 0b1111
      +                          1101;
  1857  025F  0815               	movf	21,w	;volatile
  1858  0260  0021               	movlb	1	; select bank1
  1859  0261  00A0               	movwf	??_main^(0+128)
  1860  0262  01A1               	clrf	(??_main^(0+128)+1)
  1861  0263  0020               	movlb	0	; select bank0
  1862  0264  0832               	movf	_TMR0H,w
  1863  0265  0021               	movlb	1	; select bank1
  1864  0266  00A3               	movwf	((??_main+2)^(0+128)+1)
  1865  0267  01A2               	clrf	(??_main+2)^(0+128)
  1866  0268  0820               	movf	??_main^(0+128),w
  1867  0269  0422               	iorwf	(??_main+2)^(0+128),w
  1868  026A  00A4               	movwf	(??_main+4)^(0+128)
  1869  026B  0821               	movf	(??_main+1)^(0+128),w
  1870  026C  0423               	iorwf	(??_main+3)^(0+128),w
  1871  026D  00A5               	movwf	(??_main+5)^(0+128)
  1872  026E  0020               	movlb	0	; select bank0
  1873  026F  0830               	movf	_tmrLoop,w
  1874  0270  0021               	movlb	1	; select bank1
  1875  0271  0224               	subwf	(??_main+4)^(0+128),w
  1876  0272  00A6               	movwf	(??_main+6)^(0+128)
  1877  0273  0020               	movlb	0	; select bank0
  1878  0274  0831               	movf	_tmrLoop+1,w
  1879  0275  0021               	movlb	1	; select bank1
  1880  0276  3B25               	subwfb	(??_main+5)^(0+128),w
  1881  0277  00A7               	movwf	(??_main+7)^(0+128)
  1882  0278  0827               	movf	(??_main+7)^(0+128),w
  1883  0279  0020               	movlb	0	; select bank0
  1884  027A  0239               	subwf	_esc2+1,w
  1885  027B  1D03               	skipz
  1886  027C  2A81               	goto	u2295
  1887  027D  0021               	movlb	1	; select bank1
  1888  027E  0826               	movf	(??_main+6)^(0+128),w
  1889  027F  0020               	movlb	0	; select bank0
  1890  0280  0238               	subwf	_esc2,w
  1891  0281                     u2295:
  1892  0281  1803               	skipnc
  1893  0282  2A84               	goto	u2291
  1894  0283  2A85               	goto	u2290
  1895  0284                     u2291:
  1896  0284  2A8B               	goto	l94
  1897  0285                     u2290:
  1898  0285                     l2272:
  1899  0285  30FD               	movlw	253
  1900  0286  0021               	movlb	1	; select bank1
  1901  0287  00A0               	movwf	??_main^(0+128)
  1902  0288  0820               	movf	??_main^(0+128),w
  1903  0289  0020               	movlb	0	; select bank0
  1904  028A  058C               	andwf	12,f	;volatile
  1905  028B                     l94:
  1906                           
  1907                           ;main.c: 94:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc3)PORTA &= 0b1111
      +                          1011;
  1908  028B  0815               	movf	21,w	;volatile
  1909  028C  0021               	movlb	1	; select bank1
  1910  028D  00A0               	movwf	??_main^(0+128)
  1911  028E  01A1               	clrf	(??_main^(0+128)+1)
  1912  028F  0020               	movlb	0	; select bank0
  1913  0290  0832               	movf	_TMR0H,w
  1914  0291  0021               	movlb	1	; select bank1
  1915  0292  00A3               	movwf	((??_main+2)^(0+128)+1)
  1916  0293  01A2               	clrf	(??_main+2)^(0+128)
  1917  0294  0820               	movf	??_main^(0+128),w
  1918  0295  0422               	iorwf	(??_main+2)^(0+128),w
  1919  0296  00A4               	movwf	(??_main+4)^(0+128)
  1920  0297  0821               	movf	(??_main+1)^(0+128),w
  1921  0298  0423               	iorwf	(??_main+3)^(0+128),w
  1922  0299  00A5               	movwf	(??_main+5)^(0+128)
  1923  029A  0020               	movlb	0	; select bank0
  1924  029B  0830               	movf	_tmrLoop,w
  1925  029C  0021               	movlb	1	; select bank1
  1926  029D  0224               	subwf	(??_main+4)^(0+128),w
  1927  029E  00A6               	movwf	(??_main+6)^(0+128)
  1928  029F  0020               	movlb	0	; select bank0
  1929  02A0  0831               	movf	_tmrLoop+1,w
  1930  02A1  0021               	movlb	1	; select bank1
  1931  02A2  3B25               	subwfb	(??_main+5)^(0+128),w
  1932  02A3  00A7               	movwf	(??_main+7)^(0+128)
  1933  02A4  0827               	movf	(??_main+7)^(0+128),w
  1934  02A5  0020               	movlb	0	; select bank0
  1935  02A6  0237               	subwf	_esc3+1,w
  1936  02A7  1D03               	skipz
  1937  02A8  2AAD               	goto	u2305
  1938  02A9  0021               	movlb	1	; select bank1
  1939  02AA  0826               	movf	(??_main+6)^(0+128),w
  1940  02AB  0020               	movlb	0	; select bank0
  1941  02AC  0236               	subwf	_esc3,w
  1942  02AD                     u2305:
  1943  02AD  1803               	skipnc
  1944  02AE  2AB0               	goto	u2301
  1945  02AF  2AB1               	goto	u2300
  1946  02B0                     u2301:
  1947  02B0  2AB7               	goto	l95
  1948  02B1                     u2300:
  1949  02B1                     l2274:
  1950  02B1  30FB               	movlw	251
  1951  02B2  0021               	movlb	1	; select bank1
  1952  02B3  00A0               	movwf	??_main^(0+128)
  1953  02B4  0820               	movf	??_main^(0+128),w
  1954  02B5  0020               	movlb	0	; select bank0
  1955  02B6  058C               	andwf	12,f	;volatile
  1956  02B7                     l95:
  1957                           
  1958                           ;main.c: 95:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc4)PORTA &= 0b1110
      +                          1111;
  1959  02B7  0815               	movf	21,w	;volatile
  1960  02B8  0021               	movlb	1	; select bank1
  1961  02B9  00A0               	movwf	??_main^(0+128)
  1962  02BA  01A1               	clrf	(??_main^(0+128)+1)
  1963  02BB  0020               	movlb	0	; select bank0
  1964  02BC  0832               	movf	_TMR0H,w
  1965  02BD  0021               	movlb	1	; select bank1
  1966  02BE  00A3               	movwf	((??_main+2)^(0+128)+1)
  1967  02BF  01A2               	clrf	(??_main+2)^(0+128)
  1968  02C0  0820               	movf	??_main^(0+128),w
  1969  02C1  0422               	iorwf	(??_main+2)^(0+128),w
  1970  02C2  00A4               	movwf	(??_main+4)^(0+128)
  1971  02C3  0821               	movf	(??_main+1)^(0+128),w
  1972  02C4  0423               	iorwf	(??_main+3)^(0+128),w
  1973  02C5  00A5               	movwf	(??_main+5)^(0+128)
  1974  02C6  0020               	movlb	0	; select bank0
  1975  02C7  0830               	movf	_tmrLoop,w
  1976  02C8  0021               	movlb	1	; select bank1
  1977  02C9  0224               	subwf	(??_main+4)^(0+128),w
  1978  02CA  00A6               	movwf	(??_main+6)^(0+128)
  1979  02CB  0020               	movlb	0	; select bank0
  1980  02CC  0831               	movf	_tmrLoop+1,w
  1981  02CD  0021               	movlb	1	; select bank1
  1982  02CE  3B25               	subwfb	(??_main+5)^(0+128),w
  1983  02CF  00A7               	movwf	(??_main+7)^(0+128)
  1984  02D0  0827               	movf	(??_main+7)^(0+128),w
  1985  02D1  0020               	movlb	0	; select bank0
  1986  02D2  0235               	subwf	_esc4+1,w
  1987  02D3  1D03               	skipz
  1988  02D4  2AD9               	goto	u2315
  1989  02D5  0021               	movlb	1	; select bank1
  1990  02D6  0826               	movf	(??_main+6)^(0+128),w
  1991  02D7  0020               	movlb	0	; select bank0
  1992  02D8  0234               	subwf	_esc4,w
  1993  02D9                     u2315:
  1994  02D9  1803               	skipnc
  1995  02DA  2ADC               	goto	u2311
  1996  02DB  2ADD               	goto	u2310
  1997  02DC                     u2311:
  1998  02DC  2AE3               	goto	l2278
  1999  02DD                     u2310:
  2000  02DD                     l2276:
  2001  02DD  30EF               	movlw	239
  2002  02DE  0021               	movlb	1	; select bank1
  2003  02DF  00A0               	movwf	??_main^(0+128)
  2004  02E0  0820               	movf	??_main^(0+128),w
  2005  02E1  0020               	movlb	0	; select bank0
  2006  02E2  058C               	andwf	12,f	;volatile
  2007  02E3                     l2278:
  2008                           
  2009                           ;main.c: 91:             while((PORTA & 0b00010111) > 0){
  2010  02E3  080C               	movf	12,w	;volatile
  2011  02E4  3917               	andlw	23
  2012  02E5  1D03               	btfss	3,2
  2013  02E6  2AE8               	goto	u2321
  2014  02E7  2AE9               	goto	u2320
  2015  02E8                     u2321:
  2016  02E8  2A33               	goto	l2268
  2017  02E9                     u2320:
  2018  02E9                     l2280:
  2019  02E9  3000               	movlw	0
  2020  02EA  0233               	subwf	_TMR0H+1,w
  2021  02EB  304E               	movlw	78
  2022  02EC  1903               	skipnz
  2023  02ED  0232               	subwf	_TMR0H,w
  2024  02EE  1C03               	skipc
  2025  02EF  2AF1               	goto	u2331
  2026  02F0  2AF2               	goto	u2330
  2027  02F1                     u2331:
  2028  02F1  2AE9               	goto	l2280
  2029  02F2                     u2330:
  2030  02F2                     l2282:
  2031  02F2  3014               	movlw	20
  2032  02F3  0215               	subwf	21,w	;volatile
  2033  02F4  1C03               	skipc
  2034  02F5  2AF7               	goto	u2341
  2035  02F6  2AF8               	goto	u2340
  2036  02F7                     u2341:
  2037  02F7  2AE9               	goto	l2280
  2038  02F8                     u2340:
  2039  02F8  2915               	goto	l2200
  2040  02F9  3180  28EB         	ljmp	start
  2041  02FB                     __end_of_main:
  2042                           
  2043                           	psect	text1
  2044  0579                     __ptext1:	
  2045 ;; *************** function _pic_init *****************
  2046 ;; Defined at:
  2047 ;;		line 7 in file "config.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _pic_init
  2077  0579                     _pic_init:
  2078  0579                     l2116:	
  2079                           ;incstack = 0
  2080                           ; Regs used in _pic_init: [wreg+status,2+status,0]
  2081                           
  2082                           
  2083                           ;config.c: 10:     OSCCONbits.IRCF = 0b1110;
  2084  0579  0021               	movlb	1	; select bank1
  2085  057A  0819               	movf	25,w	;volatile
  2086  057B  3987               	andlw	-121
  2087  057C  3870               	iorlw	112
  2088  057D  0099               	movwf	25	;volatile
  2089                           
  2090                           ;config.c: 11:     OSCCONbits.SCS = 0;
  2091  057E  30FC               	movlw	-4
  2092  057F  0599               	andwf	25,f	;volatile
  2093  0580                     l262:	
  2094                           ;config.c: 12:     while(!OSCSTATbits.PLLR);
  2095                           
  2096  0580  1F1A               	btfss	26,6	;volatile
  2097  0581  2D83               	goto	u2081
  2098  0582  2D84               	goto	u2080
  2099  0583                     u2081:
  2100  0583  2D80               	goto	l262
  2101  0584                     u2080:
  2102  0584                     l264:
  2103                           
  2104                           ;config.c: 14:     INTCONbits.GIE = 1;
  2105  0584  178B               	bsf	11,7	;volatile
  2106                           
  2107                           ;config.c: 15:     INTCONbits.IOCIE = 1;
  2108  0585  158B               	bsf	11,3	;volatile
  2109                           
  2110                           ;config.c: 16:     INTCONbits.PEIE = 1;
  2111  0586  170B               	bsf	11,6	;volatile
  2112                           
  2113                           ;config.c: 17:     PIE1bits.TMR2IE = 1;
  2114  0587  1490               	bsf	16,1	;volatile
  2115                           
  2116                           ;config.c: 18:     INTCONbits.TMR0IE = 1;
  2117  0588  168B               	bsf	11,5	;volatile
  2118  0589                     l2118:
  2119                           
  2120                           ;config.c: 19:     IOCCP = 0b01111000;
  2121  0589  3078               	movlw	120
  2122  058A  0027               	movlb	7	; select bank7
  2123  058B  0097               	movwf	23	;volatile
  2124  058C                     l2120:
  2125                           
  2126                           ;config.c: 23:     OPTION_REGbits.TMR0CS = 0;
  2127  058C  0021               	movlb	1	; select bank1
  2128  058D  1295               	bcf	21,5	;volatile
  2129  058E                     l2122:
  2130                           
  2131                           ;config.c: 24:     OPTION_REGbits.PSA = 0;
  2132  058E  1195               	bcf	21,3	;volatile
  2133  058F                     l2124:
  2134                           
  2135                           ;config.c: 25:     OPTION_REGbits.PS = 2;
  2136  058F  0815               	movf	21,w	;volatile
  2137  0590  39F8               	andlw	-8
  2138  0591  3802               	iorlw	2
  2139  0592  0095               	movwf	21	;volatile
  2140  0593                     l2126:
  2141                           
  2142                           ;config.c: 27:     T1CONbits.TMR1CS = 0;
  2143  0593  303F               	movlw	-193
  2144  0594  0020               	movlb	0	; select bank0
  2145  0595  0598               	andwf	24,f	;volatile
  2146  0596                     l2128:
  2147                           
  2148                           ;config.c: 28:     T1CONbits.T1CKPS = 3;
  2149  0596  3030               	movlw	48
  2150  0597  0498               	iorwf	24,f	;volatile
  2151  0598                     l2130:
  2152                           
  2153                           ;config.c: 30:     T3CONbits.TMR3CS = 0;
  2154  0598  303F               	movlw	-193
  2155  0599  0029               	movlb	9	; select bank9
  2156  059A  0595               	andwf	21,f	;volatile
  2157  059B                     l2132:
  2158                           
  2159                           ;config.c: 31:     T3CONbits.T3CKPS = 3;
  2160  059B  3030               	movlw	48
  2161  059C  0495               	iorwf	21,f	;volatile
  2162  059D                     l2134:
  2163                           
  2164                           ;config.c: 33:     T5CONbits.TMR5CS = 0;
  2165  059D  303F               	movlw	-193
  2166  059E  059C               	andwf	28,f	;volatile
  2167  059F                     l2136:
  2168                           
  2169                           ;config.c: 34:     T5CONbits.T5CKPS = 3;
  2170  059F  3030               	movlw	48
  2171  05A0  049C               	iorwf	28,f	;volatile
  2172  05A1                     l2138:
  2173                           
  2174                           ;config.c: 36:     T2CLKCON = 0;
  2175  05A1  0020               	movlb	0	; select bank0
  2176  05A2  019E               	clrf	30	;volatile
  2177  05A3                     l2140:
  2178                           
  2179                           ;config.c: 37:     T2CONbits.CKPS = 3;
  2180  05A3  081C               	movf	28,w	;volatile
  2181  05A4  398F               	andlw	-113
  2182  05A5  3830               	iorlw	48
  2183  05A6  009C               	movwf	28	;volatile
  2184  05A7                     l2142:
  2185                           
  2186                           ;config.c: 38:     T2CONbits.OUTPS = 0;
  2187  05A7  30F0               	movlw	-16
  2188  05A8  059C               	andwf	28,f	;volatile
  2189  05A9                     l2144:
  2190                           
  2191                           ;config.c: 39:     T2HLTbits.PSYNC = 1;
  2192  05A9  179D               	bsf	29,7	;volatile
  2193  05AA                     l2146:
  2194                           
  2195                           ;config.c: 40:     T2RST = 15;
  2196  05AA  300F               	movlw	15
  2197  05AB  009F               	movwf	31	;volatile
  2198  05AC                     l2148:
  2199                           
  2200                           ;config.c: 42:     SSP1CONbits.SSPEN = 1;
  2201  05AC  0024               	movlb	4	; select bank4
  2202  05AD  1695               	bsf	21,5	;volatile
  2203  05AE                     l2150:
  2204                           
  2205                           ;config.c: 43:     SSP1CONbits.SSPM = 8;
  2206  05AE  0815               	movf	21,w	;volatile
  2207  05AF  39F0               	andlw	-16
  2208  05B0  3808               	iorlw	8
  2209  05B1  0095               	movwf	21	;volatile
  2210  05B2                     l2152:
  2211                           
  2212                           ;config.c: 45:     SSP1ADD = 19;
  2213  05B2  3013               	movlw	19
  2214  05B3  0092               	movwf	18	;volatile
  2215  05B4                     l2154:
  2216                           
  2217                           ;config.c: 46:     RB4PPS = 17;
  2218  05B4  3011               	movlw	17
  2219  05B5  003D               	movlb	29	; select bank29
  2220  05B6  009C               	movwf	28	;volatile
  2221  05B7                     l2156:
  2222                           
  2223                           ;config.c: 47:     RB6PPS = 16;
  2224  05B7  3010               	movlw	16
  2225  05B8  009E               	movwf	30	;volatile
  2226  05B9                     l2158:
  2227                           
  2228                           ;config.c: 48:     SSPDATPPS = 12;
  2229  05B9  300C               	movlw	12
  2230  05BA  003C               	movlb	28	; select bank28
  2231  05BB  00A1               	movwf	33	;volatile
  2232  05BC                     l2160:
  2233                           
  2234                           ;config.c: 49:     SSPCLKPPS = 14;
  2235  05BC  300E               	movlw	14
  2236  05BD  00A0               	movwf	32	;volatile
  2237  05BE                     l2162:
  2238                           
  2239                           ;config.c: 51:     ANSELA = 0;
  2240  05BE  0023               	movlb	3	; select bank3
  2241  05BF  018C               	clrf	12	;volatile
  2242                           
  2243                           ;config.c: 52:     ANSELB = 0b00100000;
  2244  05C0  3020               	movlw	32
  2245  05C1  008D               	movwf	13	;volatile
  2246  05C2                     l2164:
  2247                           
  2248                           ;config.c: 53:     ANSELC = 0;
  2249  05C2  018E               	clrf	14	;volatile
  2250  05C3                     l2166:
  2251                           
  2252                           ;config.c: 54:     TRISA = 0;
  2253  05C3  0021               	movlb	1	; select bank1
  2254  05C4  018C               	clrf	12	;volatile
  2255                           
  2256                           ;config.c: 55:     TRISB = 0b01110000;
  2257  05C5  3070               	movlw	112
  2258  05C6  008D               	movwf	13	;volatile
  2259  05C7                     l2168:
  2260                           
  2261                           ;config.c: 56:     ODCONBbits.ODB4 = 1;
  2262  05C7  0025               	movlb	5	; select bank5
  2263  05C8  160D               	bsf	13,4	;volatile
  2264  05C9                     l2170:
  2265                           
  2266                           ;config.c: 57:     ODCONBbits.ODB6 = 1;
  2267  05C9  170D               	bsf	13,6	;volatile
  2268                           
  2269                           ;config.c: 58:     TRISC = 0b01111000;
  2270  05CA  3078               	movlw	120
  2271  05CB  0021               	movlb	1	; select bank1
  2272  05CC  008E               	movwf	14	;volatile
  2273  05CD                     l2172:
  2274                           
  2275                           ;config.c: 61:     ADCON0bits.ADON = 1;
  2276  05CD  141D               	bsf	29,0	;volatile
  2277  05CE                     l2174:
  2278                           
  2279                           ;config.c: 62:     ADCON0bits.CHS = 11;
  2280  05CE  081D               	movf	29,w	;volatile
  2281  05CF  3983               	andlw	-125
  2282  05D0  382C               	iorlw	44
  2283  05D1  009D               	movwf	29	;volatile
  2284  05D2                     l2176:
  2285                           
  2286                           ;config.c: 63:     ADCON1bits.ADPREF = 0;
  2287  05D2  30FC               	movlw	-4
  2288  05D3  059E               	andwf	30,f	;volatile
  2289  05D4                     l2178:
  2290                           
  2291                           ;config.c: 64:     ADCON1bits.ADCS = 2;
  2292  05D4  081E               	movf	30,w	;volatile
  2293  05D5  398F               	andlw	-113
  2294  05D6  3820               	iorlw	32
  2295  05D7  009E               	movwf	30	;volatile
  2296  05D8                     l2180:
  2297                           
  2298                           ;config.c: 65:     ADCON1bits.ADFM = 1;
  2299  05D8  179E               	bsf	30,7	;volatile
  2300  05D9                     l265:
  2301  05D9  0008               	return
  2302  05DA                     __end_of_pic_init:
  2303                           
  2304                           	psect	text2
  2305  05DA                     __ptext2:	
  2306 ;; *************** function _gyro_config *****************
  2307 ;; Defined at:
  2308 ;;		line 67 in file "config.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0, pclath, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;Total ram usage:        2 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    6
  2329 ;; This function calls:
  2330 ;;		_gyro_cal
  2331 ;;		_i2c_write
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _gyro_config
  2339  05DA                     _gyro_config:
  2340  05DA                     l2182:	
  2341                           ;incstack = 0
  2342                           ; Regs used in _gyro_config: [wreg+status,2+status,0+pclath+cstack]
  2343                           
  2344                           
  2345                           ;config.c: 68:     i2c_write(0xD2, 0x20, 0x0F);
  2346  05DA  3020               	movlw	32
  2347  05DB  0020               	movlb	0	; select bank0
  2348  05DC  00E8               	movwf	??_gyro_config
  2349  05DD  0868               	movf	??_gyro_config,w
  2350  05DE  00D2               	movwf	i2c_write@subaddress
  2351  05DF  300F               	movlw	15
  2352  05E0  00E9               	movwf	??_gyro_config+1
  2353  05E1  0869               	movf	??_gyro_config+1,w
  2354  05E2  00D3               	movwf	i2c_write@data
  2355  05E3  30D2               	movlw	210
  2356  05E4  3186  2685  3185   	fcall	_i2c_write
  2357                           
  2358                           ;config.c: 69:     i2c_write(0xD2, 0x23, 0x90);
  2359  05E7  3023               	movlw	35
  2360  05E8  0020               	movlb	0	; select bank0
  2361  05E9  00E8               	movwf	??_gyro_config
  2362  05EA  0868               	movf	??_gyro_config,w
  2363  05EB  00D2               	movwf	i2c_write@subaddress
  2364  05EC  3090               	movlw	144
  2365  05ED  00E9               	movwf	??_gyro_config+1
  2366  05EE  0869               	movf	??_gyro_config+1,w
  2367  05EF  00D3               	movwf	i2c_write@data
  2368  05F0  30D2               	movlw	210
  2369  05F1  3186  2685  3185   	fcall	_i2c_write
  2370                           
  2371                           ;config.c: 70:     i2c_write(0x32, 0x20, 0x57);
  2372  05F4  3020               	movlw	32
  2373  05F5  0020               	movlb	0	; select bank0
  2374  05F6  00E8               	movwf	??_gyro_config
  2375  05F7  0868               	movf	??_gyro_config,w
  2376  05F8  00D2               	movwf	i2c_write@subaddress
  2377  05F9  3057               	movlw	87
  2378  05FA  00E9               	movwf	??_gyro_config+1
  2379  05FB  0869               	movf	??_gyro_config+1,w
  2380  05FC  00D3               	movwf	i2c_write@data
  2381  05FD  3032               	movlw	50
  2382  05FE  3186  2685  3185   	fcall	_i2c_write
  2383                           
  2384                           ;config.c: 71:     i2c_write(0x32, 0x23, 0x90);
  2385  0601  3023               	movlw	35
  2386  0602  0020               	movlb	0	; select bank0
  2387  0603  00E8               	movwf	??_gyro_config
  2388  0604  0868               	movf	??_gyro_config,w
  2389  0605  00D2               	movwf	i2c_write@subaddress
  2390  0606  3090               	movlw	144
  2391  0607  00E9               	movwf	??_gyro_config+1
  2392  0608  0869               	movf	??_gyro_config+1,w
  2393  0609  00D3               	movwf	i2c_write@data
  2394  060A  3032               	movlw	50
  2395  060B  3186  2685  3185   	fcall	_i2c_write
  2396                           
  2397                           ;config.c: 72:     i2c_write(0x3C, 0, 0x18);
  2398  060E  0020               	movlb	0	; select bank0
  2399  060F  01D2               	clrf	i2c_write@subaddress
  2400  0610  3018               	movlw	24
  2401  0611  00E8               	movwf	??_gyro_config
  2402  0612  0868               	movf	??_gyro_config,w
  2403  0613  00D3               	movwf	i2c_write@data
  2404  0614  303C               	movlw	60
  2405  0615  3186  2685  3185   	fcall	_i2c_write
  2406                           
  2407                           ;config.c: 73:     i2c_write(0x3C, 1, 0x80);
  2408  0618  0020               	movlb	0	; select bank0
  2409  0619  01D2               	clrf	i2c_write@subaddress
  2410  061A  0AD2               	incf	i2c_write@subaddress,f
  2411  061B  3080               	movlw	128
  2412  061C  00E8               	movwf	??_gyro_config
  2413  061D  0868               	movf	??_gyro_config,w
  2414  061E  00D3               	movwf	i2c_write@data
  2415  061F  303C               	movlw	60
  2416  0620  3186  2685  3185   	fcall	_i2c_write
  2417                           
  2418                           ;config.c: 74:     i2c_write(0x3C, 2, 0);
  2419  0623  3002               	movlw	2
  2420  0624  0020               	movlb	0	; select bank0
  2421  0625  00E8               	movwf	??_gyro_config
  2422  0626  0868               	movf	??_gyro_config,w
  2423  0627  00D2               	movwf	i2c_write@subaddress
  2424  0628  01D3               	clrf	i2c_write@data
  2425  0629  303C               	movlw	60
  2426  062A  3186  2685  3185   	fcall	_i2c_write
  2427                           
  2428                           ;config.c: 75:     gyro_cal();
  2429  062D  3182  22FB  3185   	fcall	_gyro_cal
  2430  0630                     l268:
  2431  0630  0008               	return
  2432  0631                     __end_of_gyro_config:
  2433                           
  2434                           	psect	text3
  2435  0685                     __ptext3:	
  2436 ;; *************** function _i2c_write *****************
  2437 ;; Defined at:
  2438 ;;		line 119 in file "config.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  address         1    wreg     unsigned char 
  2441 ;;  subaddress      1    2[BANK0 ] unsigned char 
  2442 ;;  data            1    3[BANK0 ] unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  address         1    4[BANK0 ] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, pclath, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2457 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2458 ;;Total ram usage:        3 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    3
  2461 ;; This function calls:
  2462 ;;		_i2c_start
  2463 ;;		_i2c_stop
  2464 ;;		_i2c_write_byte
  2465 ;;		_nack
  2466 ;; This function is called by:
  2467 ;;		_gyro_config
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _i2c_write
  2473  0685                     _i2c_write:
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2477                           ;i2c_write@address stored from wreg
  2478  0685  0020               	movlb	0	; select bank0
  2479  0686  00D4               	movwf	i2c_write@address
  2480  0687                     l2070:
  2481                           
  2482                           ;config.c: 120:     i2c_start();
  2483  0687  3187  2728  3186   	fcall	_i2c_start
  2484  068A                     l2072:
  2485                           
  2486                           ;config.c: 121:     i2c_write_byte(address);
  2487  068A  0020               	movlb	0	; select bank0
  2488  068B  0854               	movf	i2c_write@address,w
  2489  068C  3186  26F8  3186   	fcall	_i2c_write_byte
  2490  068F                     l2074:
  2491                           
  2492                           ;config.c: 122:     if(nack())
  2493  068F  3187  270D  3186   	fcall	_nack
  2494  0692  0020               	movlb	0	; select bank0
  2495  0693  0850               	movf	?_nack,w
  2496  0694  0451               	iorwf	?_nack+1,w
  2497  0695  1903               	btfsc	3,2
  2498  0696  2E98               	goto	u1991
  2499  0697  2E99               	goto	u1990
  2500  0698                     u1991:
  2501  0698  2E9A               	goto	l2078
  2502  0699                     u1990:
  2503  0699  2EBB               	goto	l286
  2504  069A                     l2078:
  2505                           
  2506                           ;config.c: 124:     i2c_write_byte(subaddress);
  2507  069A  0852               	movf	i2c_write@subaddress,w
  2508  069B  3186  26F8  3186   	fcall	_i2c_write_byte
  2509                           
  2510                           ;config.c: 125:     if(nack())
  2511  069E  3187  270D  3186   	fcall	_nack
  2512  06A1  0020               	movlb	0	; select bank0
  2513  06A2  0850               	movf	?_nack,w
  2514  06A3  0451               	iorwf	?_nack+1,w
  2515  06A4  1903               	btfsc	3,2
  2516  06A5  2EA7               	goto	u2001
  2517  06A6  2EA8               	goto	u2000
  2518  06A7                     u2001:
  2519  06A7  2EA9               	goto	l2082
  2520  06A8                     u2000:
  2521  06A8  2EBB               	goto	l286
  2522  06A9                     l2082:
  2523                           
  2524                           ;config.c: 127:     i2c_write_byte(data);
  2525  06A9  0853               	movf	i2c_write@data,w
  2526  06AA  3186  26F8  3186   	fcall	_i2c_write_byte
  2527                           
  2528                           ;config.c: 128:     if(nack())
  2529  06AD  3187  270D  3186   	fcall	_nack
  2530  06B0  0020               	movlb	0	; select bank0
  2531  06B1  0850               	movf	?_nack,w
  2532  06B2  0451               	iorwf	?_nack+1,w
  2533  06B3  1903               	btfsc	3,2
  2534  06B4  2EB6               	goto	u2011
  2535  06B5  2EB7               	goto	u2010
  2536  06B6                     u2011:
  2537  06B6  2EB8               	goto	l2086
  2538  06B7                     u2010:
  2539  06B7  2EBB               	goto	l286
  2540  06B8                     l2086:
  2541                           
  2542                           ;config.c: 130:     i2c_stop();
  2543  06B8  3187  271F  3186   	fcall	_i2c_stop
  2544  06BB                     l286:
  2545  06BB  0008               	return
  2546  06BC                     __end_of_i2c_write:
  2547                           
  2548                           	psect	text4
  2549  02FB                     __ptext4:	
  2550 ;; *************** function _gyro_cal *****************
  2551 ;; Defined at:
  2552 ;;		line 95 in file "config.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  x               2   22[BANK0 ] int 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;Total ram usage:        6 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    5
  2573 ;; This function calls:
  2574 ;;		___aldiv
  2575 ;;		___awmod
  2576 ;;		_read_sensor
  2577 ;;		_reset_timer_loop
  2578 ;; This function is called by:
  2579 ;;		_gyro_config
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _gyro_cal
  2585  02FB                     _gyro_cal:
  2586  02FB                     l2088:	
  2587                           ;incstack = 0
  2588                           ; Regs used in _gyro_cal: [wreg+status,2+status,0+pclath+cstack]
  2589                           
  2590                           
  2591                           ;config.c: 96:     gyroX_cal = 0;
  2592  02FB  3000               	movlw	0
  2593  02FC  0020               	movlb	0	; select bank0
  2594  02FD  00AB               	movwf	_gyroX_cal+3
  2595  02FE  3000               	movlw	0
  2596  02FF  00AA               	movwf	_gyroX_cal+2
  2597  0300  3000               	movlw	0
  2598  0301  00A9               	movwf	_gyroX_cal+1
  2599  0302  3000               	movlw	0
  2600  0303  00A8               	movwf	_gyroX_cal
  2601                           
  2602                           ;config.c: 97:     gyroY_cal = 0;
  2603  0304  3000               	movlw	0
  2604  0305  00A7               	movwf	_gyroY_cal+3
  2605  0306  3000               	movlw	0
  2606  0307  00A6               	movwf	_gyroY_cal+2
  2607  0308  3000               	movlw	0
  2608  0309  00A5               	movwf	_gyroY_cal+1
  2609  030A  3000               	movlw	0
  2610  030B  00A4               	movwf	_gyroY_cal
  2611                           
  2612                           ;config.c: 98:     gyroZ_cal = 0;
  2613  030C  3000               	movlw	0
  2614  030D  00A3               	movwf	_gyroZ_cal+3
  2615  030E  3000               	movlw	0
  2616  030F  00A2               	movwf	_gyroZ_cal+2
  2617  0310  3000               	movlw	0
  2618  0311  00A1               	movwf	_gyroZ_cal+1
  2619  0312  3000               	movlw	0
  2620  0313  00A0               	movwf	_gyroZ_cal
  2621  0314                     l2090:
  2622                           
  2623                           ;config.c: 99:     p.cal = 0;
  2624  0314  124F               	bcf	_p,4
  2625  0315                     l2092:
  2626                           
  2627                           ;config.c: 100:     for(int x = 0; x < 1100; x++){
  2628  0315  01E6               	clrf	gyro_cal@x
  2629  0316  01E7               	clrf	gyro_cal@x+1
  2630  0317                     l2098:
  2631                           
  2632                           ;config.c: 101:         read_sensor();
  2633  0317  3184  2480  3182   	fcall	_read_sensor
  2634  031A                     l2100:
  2635                           
  2636                           ;config.c: 102:         reset_timer_loop();
  2637  031A  3187  273A  3182   	fcall	_reset_timer_loop
  2638                           
  2639                           ;config.c: 103:         if(x > 100){
  2640  031D  0020               	movlb	0	; select bank0
  2641  031E  0867               	movf	gyro_cal@x+1,w
  2642  031F  3A80               	xorlw	128
  2643  0320  00E2               	movwf	??_gyro_cal
  2644  0321  3080               	movlw	128
  2645  0322  0262               	subwf	??_gyro_cal,w
  2646  0323  1D03               	skipz
  2647  0324  2B27               	goto	u2025
  2648  0325  3065               	movlw	101
  2649  0326  0266               	subwf	gyro_cal@x,w
  2650  0327                     u2025:
  2651  0327  1C03               	skipc
  2652  0328  2B2A               	goto	u2021
  2653  0329  2B2B               	goto	u2020
  2654  032A                     u2021:
  2655  032A  2B5F               	goto	l2104
  2656  032B                     u2020:
  2657  032B                     l2102:
  2658                           
  2659                           ;config.c: 104:             gyroX_cal += gyrox;
  2660  032B  0020               	movlb	0	; select bank0
  2661  032C  0846               	movf	_gyrox,w
  2662  032D  00E2               	movwf	??_gyro_cal
  2663  032E  0847               	movf	_gyrox+1,w
  2664  032F  00E3               	movwf	??_gyro_cal+1
  2665  0330  3000               	movlw	0
  2666  0331  1BE3               	btfsc	??_gyro_cal+1,7
  2667  0332  30FF               	movlw	255
  2668  0333  00E4               	movwf	??_gyro_cal+2
  2669  0334  00E5               	movwf	??_gyro_cal+3
  2670  0335  0862               	movf	??_gyro_cal,w
  2671  0336  07A8               	addwf	_gyroX_cal,f
  2672  0337  0863               	movf	??_gyro_cal+1,w
  2673  0338  3DA9               	addwfc	_gyroX_cal+1,f
  2674  0339  0864               	movf	??_gyro_cal+2,w
  2675  033A  3DAA               	addwfc	_gyroX_cal+2,f
  2676  033B  0865               	movf	??_gyro_cal+3,w
  2677  033C  3DAB               	addwfc	_gyroX_cal+3,f
  2678                           
  2679                           ;config.c: 105:             gyroY_cal += gyroy;
  2680  033D  0844               	movf	_gyroy,w
  2681  033E  00E2               	movwf	??_gyro_cal
  2682  033F  0845               	movf	_gyroy+1,w
  2683  0340  00E3               	movwf	??_gyro_cal+1
  2684  0341  3000               	movlw	0
  2685  0342  1BE3               	btfsc	??_gyro_cal+1,7
  2686  0343  30FF               	movlw	255
  2687  0344  00E4               	movwf	??_gyro_cal+2
  2688  0345  00E5               	movwf	??_gyro_cal+3
  2689  0346  0862               	movf	??_gyro_cal,w
  2690  0347  07A4               	addwf	_gyroY_cal,f
  2691  0348  0863               	movf	??_gyro_cal+1,w
  2692  0349  3DA5               	addwfc	_gyroY_cal+1,f
  2693  034A  0864               	movf	??_gyro_cal+2,w
  2694  034B  3DA6               	addwfc	_gyroY_cal+2,f
  2695  034C  0865               	movf	??_gyro_cal+3,w
  2696  034D  3DA7               	addwfc	_gyroY_cal+3,f
  2697                           
  2698                           ;config.c: 106:             gyroZ_cal += gyroz;
  2699  034E  0842               	movf	_gyroz,w
  2700  034F  00E2               	movwf	??_gyro_cal
  2701  0350  0843               	movf	_gyroz+1,w
  2702  0351  00E3               	movwf	??_gyro_cal+1
  2703  0352  3000               	movlw	0
  2704  0353  1BE3               	btfsc	??_gyro_cal+1,7
  2705  0354  30FF               	movlw	255
  2706  0355  00E4               	movwf	??_gyro_cal+2
  2707  0356  00E5               	movwf	??_gyro_cal+3
  2708  0357  0862               	movf	??_gyro_cal,w
  2709  0358  07A0               	addwf	_gyroZ_cal,f
  2710  0359  0863               	movf	??_gyro_cal+1,w
  2711  035A  3DA1               	addwfc	_gyroZ_cal+1,f
  2712  035B  0864               	movf	??_gyro_cal+2,w
  2713  035C  3DA2               	addwfc	_gyroZ_cal+2,f
  2714  035D  0865               	movf	??_gyro_cal+3,w
  2715  035E  3DA3               	addwfc	_gyroZ_cal+3,f
  2716  035F                     l2104:
  2717                           
  2718                           ;config.c: 108:         if(x % 50 == 0)
  2719  035F  3032               	movlw	50
  2720  0360  0020               	movlb	0	; select bank0
  2721  0361  00D0               	movwf	___awmod@divisor
  2722  0362  3000               	movlw	0
  2723  0363  00D1               	movwf	___awmod@divisor+1
  2724  0364  0867               	movf	gyro_cal@x+1,w
  2725  0365  00D3               	movwf	___awmod@dividend+1
  2726  0366  0866               	movf	gyro_cal@x,w
  2727  0367  00D2               	movwf	___awmod@dividend
  2728  0368  3186  2631  3182   	fcall	___awmod
  2729  036B  0020               	movlb	0	; select bank0
  2730  036C  0850               	movf	?___awmod,w
  2731  036D  0451               	iorwf	?___awmod+1,w
  2732  036E  1D03               	btfss	3,2
  2733  036F  2B71               	goto	u2031
  2734  0370  2B72               	goto	u2030
  2735  0371                     u2031:
  2736  0371  2B7E               	goto	l2108
  2737  0372                     u2030:
  2738  0372                     l2106:
  2739                           
  2740                           ;config.c: 109:             LATCbits.LATC7 = ~LATCbits.LATC7;
  2741  0372  1003               	clrc
  2742  0373  0022               	movlb	2	; select bank2
  2743  0374  1F8E               	btfss	14,7	;volatile
  2744  0375  1403               	setc
  2745  0376  1803               	btfsc	3,0
  2746  0377  2B79               	goto	u2041
  2747  0378  2B7C               	goto	u2040
  2748  0379                     u2041:
  2749  0379  0022               	movlb	2	; select bank2
  2750  037A  178E               	bsf	14,7	;volatile
  2751  037B  2B7E               	goto	u2054
  2752  037C                     u2040:
  2753  037C  0022               	movlb	2	; select bank2
  2754  037D  138E               	bcf	14,7	;volatile
  2755  037E                     u2054:
  2756  037E                     l2108:
  2757  037E  3000               	movlw	0
  2758  037F  0020               	movlb	0	; select bank0
  2759  0380  0233               	subwf	_TMR0H+1,w
  2760  0381  302A               	movlw	42
  2761  0382  1903               	skipnz
  2762  0383  0232               	subwf	_TMR0H,w
  2763  0384  1C03               	skipc
  2764  0385  2B87               	goto	u2061
  2765  0386  2B88               	goto	u2060
  2766  0387                     u2061:
  2767  0387  2B7E               	goto	l2108
  2768  0388                     u2060:
  2769  0388                     l2110:
  2770                           
  2771                           ;config.c: 112:     }
  2772  0388  3001               	movlw	1
  2773  0389  07E6               	addwf	gyro_cal@x,f
  2774  038A  3000               	movlw	0
  2775  038B  3DE7               	addwfc	gyro_cal@x+1,f
  2776  038C  0867               	movf	gyro_cal@x+1,w
  2777  038D  3A80               	xorlw	128
  2778  038E  00E2               	movwf	??_gyro_cal
  2779  038F  3084               	movlw	132
  2780  0390  0262               	subwf	??_gyro_cal,w
  2781  0391  1D03               	skipz
  2782  0392  2B95               	goto	u2075
  2783  0393  304C               	movlw	76
  2784  0394  0266               	subwf	gyro_cal@x,w
  2785  0395                     u2075:
  2786  0395  1C03               	skipc
  2787  0396  2B98               	goto	u2071
  2788  0397  2B99               	goto	u2070
  2789  0398                     u2071:
  2790  0398  2B17               	goto	l2098
  2791  0399                     u2070:
  2792  0399                     l2112:
  2793                           
  2794                           ;config.c: 113:     gyroX_cal /= 1000;
  2795  0399  3000               	movlw	0
  2796  039A  0020               	movlb	0	; select bank0
  2797  039B  00D3               	movwf	___aldiv@divisor+3
  2798  039C  3000               	movlw	0
  2799  039D  00D2               	movwf	___aldiv@divisor+2
  2800  039E  3003               	movlw	3
  2801  039F  00D1               	movwf	___aldiv@divisor+1
  2802  03A0  30E8               	movlw	232
  2803  03A1  00D0               	movwf	___aldiv@divisor
  2804  03A2  082B               	movf	_gyroX_cal+3,w
  2805  03A3  00D7               	movwf	___aldiv@dividend+3
  2806  03A4  082A               	movf	_gyroX_cal+2,w
  2807  03A5  00D6               	movwf	___aldiv@dividend+2
  2808  03A6  0829               	movf	_gyroX_cal+1,w
  2809  03A7  00D5               	movwf	___aldiv@dividend+1
  2810  03A8  0828               	movf	_gyroX_cal,w
  2811  03A9  00D4               	movwf	___aldiv@dividend
  2812  03AA  3183  23F0  3182   	fcall	___aldiv
  2813  03AD  0020               	movlb	0	; select bank0
  2814  03AE  0853               	movf	?___aldiv+3,w
  2815  03AF  00AB               	movwf	_gyroX_cal+3
  2816  03B0  0852               	movf	?___aldiv+2,w
  2817  03B1  00AA               	movwf	_gyroX_cal+2
  2818  03B2  0851               	movf	?___aldiv+1,w
  2819  03B3  00A9               	movwf	_gyroX_cal+1
  2820  03B4  0850               	movf	?___aldiv,w
  2821  03B5  00A8               	movwf	_gyroX_cal
  2822                           
  2823                           ;config.c: 114:     gyroY_cal /= 1000;
  2824  03B6  3000               	movlw	0
  2825  03B7  00D3               	movwf	___aldiv@divisor+3
  2826  03B8  3000               	movlw	0
  2827  03B9  00D2               	movwf	___aldiv@divisor+2
  2828  03BA  3003               	movlw	3
  2829  03BB  00D1               	movwf	___aldiv@divisor+1
  2830  03BC  30E8               	movlw	232
  2831  03BD  00D0               	movwf	___aldiv@divisor
  2832  03BE  0827               	movf	_gyroY_cal+3,w
  2833  03BF  00D7               	movwf	___aldiv@dividend+3
  2834  03C0  0826               	movf	_gyroY_cal+2,w
  2835  03C1  00D6               	movwf	___aldiv@dividend+2
  2836  03C2  0825               	movf	_gyroY_cal+1,w
  2837  03C3  00D5               	movwf	___aldiv@dividend+1
  2838  03C4  0824               	movf	_gyroY_cal,w
  2839  03C5  00D4               	movwf	___aldiv@dividend
  2840  03C6  3183  23F0  3182   	fcall	___aldiv
  2841  03C9  0020               	movlb	0	; select bank0
  2842  03CA  0853               	movf	?___aldiv+3,w
  2843  03CB  00A7               	movwf	_gyroY_cal+3
  2844  03CC  0852               	movf	?___aldiv+2,w
  2845  03CD  00A6               	movwf	_gyroY_cal+2
  2846  03CE  0851               	movf	?___aldiv+1,w
  2847  03CF  00A5               	movwf	_gyroY_cal+1
  2848  03D0  0850               	movf	?___aldiv,w
  2849  03D1  00A4               	movwf	_gyroY_cal
  2850                           
  2851                           ;config.c: 115:     gyroZ_cal /= 1000;
  2852  03D2  3000               	movlw	0
  2853  03D3  00D3               	movwf	___aldiv@divisor+3
  2854  03D4  3000               	movlw	0
  2855  03D5  00D2               	movwf	___aldiv@divisor+2
  2856  03D6  3003               	movlw	3
  2857  03D7  00D1               	movwf	___aldiv@divisor+1
  2858  03D8  30E8               	movlw	232
  2859  03D9  00D0               	movwf	___aldiv@divisor
  2860  03DA  0823               	movf	_gyroZ_cal+3,w
  2861  03DB  00D7               	movwf	___aldiv@dividend+3
  2862  03DC  0822               	movf	_gyroZ_cal+2,w
  2863  03DD  00D6               	movwf	___aldiv@dividend+2
  2864  03DE  0821               	movf	_gyroZ_cal+1,w
  2865  03DF  00D5               	movwf	___aldiv@dividend+1
  2866  03E0  0820               	movf	_gyroZ_cal,w
  2867  03E1  00D4               	movwf	___aldiv@dividend
  2868  03E2  3183  23F0  3182   	fcall	___aldiv
  2869  03E5  0020               	movlb	0	; select bank0
  2870  03E6  0853               	movf	?___aldiv+3,w
  2871  03E7  00A3               	movwf	_gyroZ_cal+3
  2872  03E8  0852               	movf	?___aldiv+2,w
  2873  03E9  00A2               	movwf	_gyroZ_cal+2
  2874  03EA  0851               	movf	?___aldiv+1,w
  2875  03EB  00A1               	movwf	_gyroZ_cal+1
  2876  03EC  0850               	movf	?___aldiv,w
  2877  03ED  00A0               	movwf	_gyroZ_cal
  2878  03EE                     l2114:
  2879                           
  2880                           ;config.c: 116:     p.cal = 1;
  2881  03EE  164F               	bsf	_p,4
  2882  03EF                     l282:
  2883  03EF  0008               	return
  2884  03F0                     __end_of_gyro_cal:
  2885                           
  2886                           	psect	text5
  2887  073A                     __ptext5:	
  2888 ;; *************** function _reset_timer_loop *****************
  2889 ;; Defined at:
  2890 ;;		line 204 in file "config.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		status,2
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    1
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_main
  2915 ;;		_gyro_cal
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           
  2920                           ;psect for function _reset_timer_loop
  2921  073A                     _reset_timer_loop:
  2922  073A                     l1984:	
  2923                           ;incstack = 0
  2924                           ; Regs used in _reset_timer_loop: [status,2]
  2925                           
  2926                           
  2927                           ;config.c: 205:     TMR0H = 0;
  2928  073A  0020               	movlb	0	; select bank0
  2929  073B  01B2               	clrf	_TMR0H
  2930  073C  01B3               	clrf	_TMR0H+1
  2931                           
  2932                           ;config.c: 206:     TMR0 = 0;
  2933  073D  0195               	clrf	21	;volatile
  2934                           
  2935                           ;config.c: 207:     TMR0H = 0;
  2936  073E  01B2               	clrf	_TMR0H
  2937  073F  01B3               	clrf	_TMR0H+1
  2938  0740                     l337:
  2939  0740  0008               	return
  2940  0741                     __end_of_reset_timer_loop:
  2941                           
  2942                           	psect	text6
  2943  0480                     __ptext6:	
  2944 ;; *************** function _read_sensor *****************
  2945 ;; Defined at:
  2946 ;;		line 78 in file "config.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;Total ram usage:        1 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    4
  2967 ;; This function calls:
  2968 ;;		_i2c_read
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;;		_gyro_cal
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _read_sensor
  2977  0480                     _read_sensor:
  2978  0480                     l1986:	
  2979                           ;incstack = 0
  2980                           ; Regs used in _read_sensor: [wreg+status,2+status,0+pclath+cstack]
  2981                           
  2982                           
  2983                           ;config.c: 79:     gyrox = i2c_read(0xD2, 0xA8);
  2984  0480  30A8               	movlw	168
  2985  0481  0020               	movlb	0	; select bank0
  2986  0482  00E1               	movwf	??_read_sensor
  2987  0483  0861               	movf	??_read_sensor,w
  2988  0484  00D7               	movwf	i2c_read@subaddress
  2989  0485  30D2               	movlw	210
  2990  0486  3185  2507  3184   	fcall	_i2c_read
  2991  0489  0020               	movlb	0	; select bank0
  2992  048A  0858               	movf	?_i2c_read+1,w
  2993  048B  00C7               	movwf	_gyrox+1
  2994  048C  0857               	movf	?_i2c_read,w
  2995  048D  00C6               	movwf	_gyrox
  2996                           
  2997                           ;config.c: 80:     gyroy = i2c_read(0xD2, 0xAA);
  2998  048E  30AA               	movlw	170
  2999  048F  00E1               	movwf	??_read_sensor
  3000  0490  0861               	movf	??_read_sensor,w
  3001  0491  00D7               	movwf	i2c_read@subaddress
  3002  0492  30D2               	movlw	210
  3003  0493  3185  2507  3184   	fcall	_i2c_read
  3004  0496  0020               	movlb	0	; select bank0
  3005  0497  0858               	movf	?_i2c_read+1,w
  3006  0498  00C5               	movwf	_gyroy+1
  3007  0499  0857               	movf	?_i2c_read,w
  3008  049A  00C4               	movwf	_gyroy
  3009                           
  3010                           ;config.c: 81:     gyroz = i2c_read(0xD2, 0xAC);
  3011  049B  30AC               	movlw	172
  3012  049C  00E1               	movwf	??_read_sensor
  3013  049D  0861               	movf	??_read_sensor,w
  3014  049E  00D7               	movwf	i2c_read@subaddress
  3015  049F  30D2               	movlw	210
  3016  04A0  3185  2507  3184   	fcall	_i2c_read
  3017  04A3  0020               	movlb	0	; select bank0
  3018  04A4  0858               	movf	?_i2c_read+1,w
  3019  04A5  00C3               	movwf	_gyroz+1
  3020  04A6  0857               	movf	?_i2c_read,w
  3021  04A7  00C2               	movwf	_gyroz
  3022                           
  3023                           ;config.c: 82:     accx = i2c_read(0x32, 0xA8);
  3024  04A8  30A8               	movlw	168
  3025  04A9  00E1               	movwf	??_read_sensor
  3026  04AA  0861               	movf	??_read_sensor,w
  3027  04AB  00D7               	movwf	i2c_read@subaddress
  3028  04AC  3032               	movlw	50
  3029  04AD  3185  2507  3184   	fcall	_i2c_read
  3030  04B0  0020               	movlb	0	; select bank0
  3031  04B1  0858               	movf	?_i2c_read+1,w
  3032  04B2  00CD               	movwf	_accx+1
  3033  04B3  0857               	movf	?_i2c_read,w
  3034  04B4  00CC               	movwf	_accx
  3035                           
  3036                           ;config.c: 83:     accy = i2c_read(0x32, 0xAA);
  3037  04B5  30AA               	movlw	170
  3038  04B6  00E1               	movwf	??_read_sensor
  3039  04B7  0861               	movf	??_read_sensor,w
  3040  04B8  00D7               	movwf	i2c_read@subaddress
  3041  04B9  3032               	movlw	50
  3042  04BA  3185  2507  3184   	fcall	_i2c_read
  3043  04BD  0020               	movlb	0	; select bank0
  3044  04BE  0858               	movf	?_i2c_read+1,w
  3045  04BF  00CB               	movwf	_accy+1
  3046  04C0  0857               	movf	?_i2c_read,w
  3047  04C1  00CA               	movwf	_accy
  3048                           
  3049                           ;config.c: 84:     accz = i2c_read(0x32, 0xAC);
  3050  04C2  30AC               	movlw	172
  3051  04C3  00E1               	movwf	??_read_sensor
  3052  04C4  0861               	movf	??_read_sensor,w
  3053  04C5  00D7               	movwf	i2c_read@subaddress
  3054  04C6  3032               	movlw	50
  3055  04C7  3185  2507  3184   	fcall	_i2c_read
  3056  04CA  0020               	movlb	0	; select bank0
  3057  04CB  0858               	movf	?_i2c_read+1,w
  3058  04CC  00C9               	movwf	_accz+1
  3059  04CD  0857               	movf	?_i2c_read,w
  3060  04CE  00C8               	movwf	_accz
  3061                           
  3062                           ;config.c: 85:     magx = i2c_read(0x3C, 0x83);
  3063  04CF  3083               	movlw	131
  3064  04D0  00E1               	movwf	??_read_sensor
  3065  04D1  0861               	movf	??_read_sensor,w
  3066  04D2  00D7               	movwf	i2c_read@subaddress
  3067  04D3  303C               	movlw	60
  3068  04D4  3185  2507  3184   	fcall	_i2c_read
  3069  04D7  0020               	movlb	0	; select bank0
  3070  04D8  0858               	movf	?_i2c_read+1,w
  3071  04D9  00C1               	movwf	_magx+1
  3072  04DA  0857               	movf	?_i2c_read,w
  3073  04DB  00C0               	movwf	_magx
  3074                           
  3075                           ;config.c: 86:     magy = i2c_read(0x3C, 0x85);
  3076  04DC  3085               	movlw	133
  3077  04DD  00E1               	movwf	??_read_sensor
  3078  04DE  0861               	movf	??_read_sensor,w
  3079  04DF  00D7               	movwf	i2c_read@subaddress
  3080  04E0  303C               	movlw	60
  3081  04E1  3185  2507  3184   	fcall	_i2c_read
  3082  04E4  0020               	movlb	0	; select bank0
  3083  04E5  0858               	movf	?_i2c_read+1,w
  3084  04E6  00BF               	movwf	_magy+1
  3085  04E7  0857               	movf	?_i2c_read,w
  3086  04E8  00BE               	movwf	_magy
  3087                           
  3088                           ;config.c: 87:     magz = i2c_read(0x3C, 0x87);
  3089  04E9  3087               	movlw	135
  3090  04EA  00E1               	movwf	??_read_sensor
  3091  04EB  0861               	movf	??_read_sensor,w
  3092  04EC  00D7               	movwf	i2c_read@subaddress
  3093  04ED  303C               	movlw	60
  3094  04EE  3185  2507  3184   	fcall	_i2c_read
  3095  04F1  0020               	movlb	0	; select bank0
  3096  04F2  0858               	movf	?_i2c_read+1,w
  3097  04F3  00BD               	movwf	_magz+1
  3098  04F4  0857               	movf	?_i2c_read,w
  3099  04F5  00BC               	movwf	_magz
  3100  04F6                     l1988:
  3101                           
  3102                           ;config.c: 88:     if(p.cal){
  3103  04F6  1E4F               	btfss	_p,4
  3104  04F7  2CF9               	goto	u1791
  3105  04F8  2CFA               	goto	u1790
  3106  04F9                     u1791:
  3107  04F9  2D06               	goto	l272
  3108  04FA                     u1790:
  3109  04FA                     l1990:
  3110                           
  3111                           ;config.c: 89:         gyrox -= gyroX_cal;
  3112  04FA  0828               	movf	_gyroX_cal,w
  3113  04FB  02C6               	subwf	_gyrox,f
  3114  04FC  0829               	movf	_gyroX_cal+1,w
  3115  04FD  3BC7               	subwfb	_gyrox+1,f
  3116                           
  3117                           ;config.c: 90:         gyroy -= gyroY_cal;
  3118  04FE  0824               	movf	_gyroY_cal,w
  3119  04FF  02C4               	subwf	_gyroy,f
  3120  0500  0825               	movf	_gyroY_cal+1,w
  3121  0501  3BC5               	subwfb	_gyroy+1,f
  3122                           
  3123                           ;config.c: 91:         gyroz -= gyroZ_cal;
  3124  0502  0820               	movf	_gyroZ_cal,w
  3125  0503  02C2               	subwf	_gyroz,f
  3126  0504  0821               	movf	_gyroZ_cal+1,w
  3127  0505  3BC3               	subwfb	_gyroz+1,f
  3128  0506                     l272:
  3129  0506  0008               	return
  3130  0507                     __end_of_read_sensor:
  3131                           
  3132                           	psect	text7
  3133  0507                     __ptext7:	
  3134 ;; *************** function _i2c_read *****************
  3135 ;; Defined at:
  3136 ;;		line 133 in file "config.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  address         1    wreg     unsigned char 
  3139 ;;  subaddress      1    7[BANK0 ] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  address         1   16[BANK0 ] unsigned char 
  3142 ;;  high            2   14[BANK0 ] int 
  3143 ;;  low             2   12[BANK0 ] int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  2    7[BANK0 ] int 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3156 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;Total ram usage:       10 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    3
  3160 ;; This function calls:
  3161 ;;		_i2c_read_byte
  3162 ;;		_i2c_restart
  3163 ;;		_i2c_start
  3164 ;;		_i2c_stop
  3165 ;;		_i2c_write_byte
  3166 ;;		_nack
  3167 ;; This function is called by:
  3168 ;;		_read_sensor
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _i2c_read
  3174  0507                     _i2c_read:
  3175                           
  3176                           ;incstack = 0
  3177                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3178                           ;i2c_read@address stored from wreg
  3179  0507  0020               	movlb	0	; select bank0
  3180  0508  00E0               	movwf	i2c_read@address
  3181  0509                     l1942:
  3182                           
  3183                           ;config.c: 134:     int low, high;;config.c: 135:     i2c_start();
  3184  0509  3187  2728  3185   	fcall	_i2c_start
  3185  050C                     l1944:
  3186                           
  3187                           ;config.c: 136:     i2c_write_byte(address);
  3188  050C  0020               	movlb	0	; select bank0
  3189  050D  0860               	movf	i2c_read@address,w
  3190  050E  3186  26F8  3185   	fcall	_i2c_write_byte
  3191  0511                     l1946:
  3192                           
  3193                           ;config.c: 137:     if(nack())
  3194  0511  3187  270D  3185   	fcall	_nack
  3195  0514  0020               	movlb	0	; select bank0
  3196  0515  0850               	movf	?_nack,w
  3197  0516  0451               	iorwf	?_nack+1,w
  3198  0517  1903               	btfsc	3,2
  3199  0518  2D1A               	goto	u1751
  3200  0519  2D1B               	goto	u1750
  3201  051A                     u1751:
  3202  051A  2D1E               	goto	l1952
  3203  051B                     u1750:
  3204  051B                     l1948:
  3205                           
  3206                           ;config.c: 138:         return 0;
  3207  051B  01D7               	clrf	?_i2c_read
  3208  051C  01D8               	clrf	?_i2c_read+1
  3209  051D  2D78               	goto	l292
  3210  051E                     l1952:
  3211                           
  3212                           ;config.c: 140:     i2c_write_byte(subaddress);
  3213  051E  0857               	movf	i2c_read@subaddress,w
  3214  051F  3186  26F8  3185   	fcall	_i2c_write_byte
  3215                           
  3216                           ;config.c: 141:     if(nack())
  3217  0522  3187  270D  3185   	fcall	_nack
  3218  0525  0020               	movlb	0	; select bank0
  3219  0526  0850               	movf	?_nack,w
  3220  0527  0451               	iorwf	?_nack+1,w
  3221  0528  1903               	btfsc	3,2
  3222  0529  2D2B               	goto	u1761
  3223  052A  2D2C               	goto	u1760
  3224  052B                     u1761:
  3225  052B  2D2D               	goto	l1958
  3226  052C                     u1760:
  3227  052C  2D1B               	goto	l1948
  3228  052D                     l1958:
  3229                           
  3230                           ;config.c: 143:     i2c_restart();
  3231  052D  3187  2731  3185   	fcall	_i2c_restart
  3232  0530                     l1960:
  3233                           
  3234                           ;config.c: 144:     i2c_write_byte(address | 1);
  3235  0530  0020               	movlb	0	; select bank0
  3236  0531  0860               	movf	i2c_read@address,w
  3237  0532  3801               	iorlw	1
  3238  0533  3186  26F8  3185   	fcall	_i2c_write_byte
  3239  0536                     l1962:
  3240                           
  3241                           ;config.c: 145:     if(nack())
  3242  0536  3187  270D  3185   	fcall	_nack
  3243  0539  0020               	movlb	0	; select bank0
  3244  053A  0850               	movf	?_nack,w
  3245  053B  0451               	iorwf	?_nack+1,w
  3246  053C  1903               	btfsc	3,2
  3247  053D  2D3F               	goto	u1771
  3248  053E  2D40               	goto	u1770
  3249  053F                     u1771:
  3250  053F  2D41               	goto	l1968
  3251  0540                     u1770:
  3252  0540  2D1B               	goto	l1948
  3253  0541                     l1968:
  3254                           
  3255                           ;config.c: 147:     low = i2c_read_byte(0);
  3256  0541  3000               	movlw	0
  3257  0542  3186  26BC  3185   	fcall	_i2c_read_byte
  3258  0545  0020               	movlb	0	; select bank0
  3259  0546  0851               	movf	?_i2c_read_byte+1,w
  3260  0547  00DD               	movwf	i2c_read@low+1
  3261  0548  0850               	movf	?_i2c_read_byte,w
  3262  0549  00DC               	movwf	i2c_read@low
  3263                           
  3264                           ;config.c: 148:     high = i2c_read_byte(1);
  3265  054A  3001               	movlw	1
  3266  054B  3186  26BC  3185   	fcall	_i2c_read_byte
  3267  054E  0020               	movlb	0	; select bank0
  3268  054F  0851               	movf	?_i2c_read_byte+1,w
  3269  0550  00DF               	movwf	i2c_read@high+1
  3270  0551  0850               	movf	?_i2c_read_byte,w
  3271  0552  00DE               	movwf	i2c_read@high
  3272  0553                     l1970:
  3273                           
  3274                           ;config.c: 149:     i2c_stop();
  3275  0553  3187  271F  3185   	fcall	_i2c_stop
  3276  0556                     l1972:
  3277                           
  3278                           ;config.c: 150:     if(address != 0x3C)
  3279  0556  303C               	movlw	60
  3280  0557  0020               	movlb	0	; select bank0
  3281  0558  0660               	xorwf	i2c_read@address,w
  3282  0559  1903               	btfsc	3,2
  3283  055A  2D5C               	goto	u1781
  3284  055B  2D5D               	goto	u1780
  3285  055C                     u1781:
  3286  055C  2D6B               	goto	l1980
  3287  055D                     u1780:
  3288  055D                     l1974:
  3289                           
  3290                           ;config.c: 151:         return((high << 8) | low);
  3291  055D  085F               	movf	i2c_read@high+1,w
  3292  055E  00DA               	movwf	??_i2c_read+1
  3293  055F  085E               	movf	i2c_read@high,w
  3294  0560  00D9               	movwf	??_i2c_read
  3295  0561  0859               	movf	??_i2c_read,w
  3296  0562  00DA               	movwf	??_i2c_read+1
  3297  0563  01D9               	clrf	??_i2c_read
  3298  0564  085C               	movf	i2c_read@low,w
  3299  0565  0459               	iorwf	??_i2c_read,w
  3300  0566  00D7               	movwf	?_i2c_read
  3301  0567  085D               	movf	i2c_read@low+1,w
  3302  0568  045A               	iorwf	??_i2c_read+1,w
  3303  0569  00D8               	movwf	?_i2c_read+1
  3304  056A  2D78               	goto	l292
  3305  056B                     l1980:
  3306                           
  3307                           ;config.c: 153:         return((low << 8) | high);
  3308  056B  085D               	movf	i2c_read@low+1,w
  3309  056C  00DA               	movwf	??_i2c_read+1
  3310  056D  085C               	movf	i2c_read@low,w
  3311  056E  00D9               	movwf	??_i2c_read
  3312  056F  0859               	movf	??_i2c_read,w
  3313  0570  00DA               	movwf	??_i2c_read+1
  3314  0571  01D9               	clrf	??_i2c_read
  3315  0572  085E               	movf	i2c_read@high,w
  3316  0573  0459               	iorwf	??_i2c_read,w
  3317  0574  00D7               	movwf	?_i2c_read
  3318  0575  085F               	movf	i2c_read@high+1,w
  3319  0576  045A               	iorwf	??_i2c_read+1,w
  3320  0577  00D8               	movwf	?_i2c_read+1
  3321  0578                     l292:
  3322  0578  0008               	return
  3323  0579                     __end_of_i2c_read:
  3324                           
  3325                           	psect	text8
  3326  070D                     __ptext8:	
  3327 ;; *************** function _nack *****************
  3328 ;; Defined at:
  3329 ;;		line 170 in file "config.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  2    0[BANK0 ] int 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0, pclath, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;Total ram usage:        2 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    2
  3350 ;; This function calls:
  3351 ;;		_i2c_stop
  3352 ;; This function is called by:
  3353 ;;		_i2c_write
  3354 ;;		_i2c_read
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function _nack
  3360  070D                     _nack:
  3361  070D                     l1914:	
  3362                           ;incstack = 0
  3363                           ; Regs used in _nack: [wreg+status,2+status,0+pclath+cstack]
  3364                           
  3365                           
  3366                           ;config.c: 171:     if(SSP1CON2bits.ACKSTAT){
  3367  070D  0024               	movlb	4	; select bank4
  3368  070E  1F16               	btfss	22,6	;volatile
  3369  070F  2F11               	goto	u1711
  3370  0710  2F12               	goto	u1710
  3371  0711                     u1711:
  3372  0711  2F1B               	goto	l1922
  3373  0712                     u1710:
  3374  0712                     l1916:
  3375                           
  3376                           ;config.c: 172:         i2c_stop();
  3377  0712  3187  271F  3187   	fcall	_i2c_stop
  3378  0715                     l1918:
  3379                           
  3380                           ;config.c: 173:         return 1;
  3381  0715  3001               	movlw	1
  3382  0716  0020               	movlb	0	; select bank0
  3383  0717  00D0               	movwf	?_nack
  3384  0718  3000               	movlw	0
  3385  0719  00D1               	movwf	?_nack+1
  3386  071A  2F1E               	goto	l309
  3387  071B                     l1922:
  3388                           
  3389                           ;config.c: 175:     return 0;
  3390  071B  0020               	movlb	0	; select bank0
  3391  071C  01D0               	clrf	?_nack
  3392  071D  01D1               	clrf	?_nack+1
  3393  071E                     l309:
  3394  071E  0008               	return
  3395  071F                     __end_of_nack:
  3396                           
  3397                           	psect	text9
  3398  071F                     __ptext9:	
  3399 ;; *************** function _i2c_stop *****************
  3400 ;; Defined at:
  3401 ;;		line 199 in file "config.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		None
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    1
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_i2c_write
  3426 ;;		_i2c_read
  3427 ;;		_nack
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function _i2c_stop
  3433  071F                     _i2c_stop:
  3434  071F                     l1904:	
  3435                           ;incstack = 0
  3436                           ; Regs used in _i2c_stop: []
  3437                           
  3438                           
  3439                           ;config.c: 200:     SSP1CON2bits.PEN = 1;
  3440  071F  0024               	movlb	4	; select bank4
  3441  0720  1516               	bsf	22,2	;volatile
  3442  0721                     l331:	
  3443                           ;config.c: 201:     while(SSP1CON2bits.PEN);
  3444                           
  3445  0721  1916               	btfsc	22,2	;volatile
  3446  0722  2F24               	goto	u1671
  3447  0723  2F25               	goto	u1670
  3448  0724                     u1671:
  3449  0724  2F21               	goto	l331
  3450  0725                     u1670:
  3451  0725                     l333:
  3452                           
  3453                           ;config.c: 202:     PIR1bits.SSP1IF = 0;
  3454  0725  0020               	movlb	0	; select bank0
  3455  0726  1190               	bcf	16,3	;volatile
  3456  0727                     l334:
  3457  0727  0008               	return
  3458  0728                     __end_of_i2c_stop:
  3459                           
  3460                           	psect	text10
  3461  06F8                     __ptext10:	
  3462 ;; *************** function _i2c_write_byte *****************
  3463 ;; Defined at:
  3464 ;;		line 190 in file "config.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  address         1    wreg     unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  address         1    0[BANK0 ] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;Total ram usage:        1 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_i2c_write
  3489 ;;		_i2c_read
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _i2c_write_byte
  3495  06F8                     _i2c_write_byte:
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _i2c_write_byte: [wreg]
  3499                           ;i2c_write_byte@address stored from wreg
  3500  06F8  0020               	movlb	0	; select bank0
  3501  06F9  00D0               	movwf	i2c_write_byte@address
  3502  06FA                     l1908:
  3503                           
  3504                           ;config.c: 191:     SSP1CON2bits.RCEN = 0;
  3505  06FA  0024               	movlb	4	; select bank4
  3506  06FB  1196               	bcf	22,3	;volatile
  3507  06FC                     l1910:
  3508                           
  3509                           ;config.c: 192:     SSP1BUF = address;
  3510  06FC  0020               	movlb	0	; select bank0
  3511  06FD  0850               	movf	i2c_write_byte@address,w
  3512  06FE  0024               	movlb	4	; select bank4
  3513  06FF  0091               	movwf	17	;volatile
  3514  0700                     l324:	
  3515                           ;config.c: 193:     while(SSP1STATbits.BF);
  3516                           
  3517  0700  1814               	btfsc	20,0	;volatile
  3518  0701  2F03               	goto	u1691
  3519  0702  2F04               	goto	u1690
  3520  0703                     u1691:
  3521  0703  2F00               	goto	l324
  3522  0704                     u1690:
  3523  0704                     l326:
  3524                           
  3525                           ;config.c: 194:     PIR1bits.SSP1IF = 0;
  3526  0704  0020               	movlb	0	; select bank0
  3527  0705  1190               	bcf	16,3	;volatile
  3528                           
  3529                           ;config.c: 195:     if(SSP1CON1bits.WCOL)
  3530  0706  0024               	movlb	4	; select bank4
  3531  0707  1F95               	btfss	21,7	;volatile
  3532  0708  2F0A               	goto	u1701
  3533  0709  2F0B               	goto	u1700
  3534  070A                     u1701:
  3535  070A  2F0C               	goto	l328
  3536  070B                     u1700:
  3537  070B                     l1912:
  3538                           
  3539                           ;config.c: 196:         SSP1CON1bits.WCOL = 0;
  3540  070B  1395               	bcf	21,7	;volatile
  3541  070C                     l328:
  3542  070C  0008               	return
  3543  070D                     __end_of_i2c_write_byte:
  3544                           
  3545                           	psect	text11
  3546  0728                     __ptext11:	
  3547 ;; *************** function _i2c_start *****************
  3548 ;; Defined at:
  3549 ;;		line 178 in file "config.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		None
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_i2c_write
  3574 ;;		_i2c_read
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           
  3579                           ;psect for function _i2c_start
  3580  0728                     _i2c_start:
  3581  0728                     l1906:	
  3582                           ;incstack = 0
  3583                           ; Regs used in _i2c_start: []
  3584                           
  3585                           
  3586                           ;config.c: 179:     SSP1CON2bits.SEN = 1;
  3587  0728  0024               	movlb	4	; select bank4
  3588  0729  1416               	bsf	22,0	;volatile
  3589  072A                     l312:	
  3590                           ;config.c: 180:     while((SSP1CON2bits.SEN));
  3591                           
  3592  072A  1816               	btfsc	22,0	;volatile
  3593  072B  2F2D               	goto	u1681
  3594  072C  2F2E               	goto	u1680
  3595  072D                     u1681:
  3596  072D  2F2A               	goto	l312
  3597  072E                     u1680:
  3598  072E                     l314:
  3599                           
  3600                           ;config.c: 181:     PIR1bits.SSP1IF = 0;
  3601  072E  0020               	movlb	0	; select bank0
  3602  072F  1190               	bcf	16,3	;volatile
  3603  0730                     l315:
  3604  0730  0008               	return
  3605  0731                     __end_of_i2c_start:
  3606                           
  3607                           	psect	text12
  3608  0731                     __ptext12:	
  3609 ;; *************** function _i2c_restart *****************
  3610 ;; Defined at:
  3611 ;;		line 184 in file "config.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		None
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_i2c_read
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _i2c_restart
  3641  0731                     _i2c_restart:
  3642  0731                     l1926:	
  3643                           ;incstack = 0
  3644                           ; Regs used in _i2c_restart: []
  3645                           
  3646                           
  3647                           ;config.c: 185:     SSPCON2bits.RSEN = 1;
  3648  0731  0024               	movlb	4	; select bank4
  3649  0732  1496               	bsf	22,1	;volatile
  3650  0733                     l318:	
  3651                           ;config.c: 186:     while(SSPCON2bits.RSEN);
  3652                           
  3653  0733  1896               	btfsc	22,1	;volatile
  3654  0734  2F36               	goto	u1721
  3655  0735  2F37               	goto	u1720
  3656  0736                     u1721:
  3657  0736  2F33               	goto	l318
  3658  0737                     u1720:
  3659  0737                     l320:
  3660                           
  3661                           ;config.c: 187:     PIR1bits.SSP1IF = 0;
  3662  0737  0020               	movlb	0	; select bank0
  3663  0738  1190               	bcf	16,3	;volatile
  3664  0739                     l321:
  3665  0739  0008               	return
  3666  073A                     __end_of_i2c_restart:
  3667                           
  3668                           	psect	text13
  3669  06BC                     __ptext13:	
  3670 ;; *************** function _i2c_read_byte *****************
  3671 ;; Defined at:
  3672 ;;		line 156 in file "config.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  ack             1    wreg     unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  ack             1    4[BANK0 ] unsigned char 
  3677 ;;  temp            2    5[BANK0 ] int 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  2    0[BANK0 ] int 
  3680 ;; Registers used:
  3681 ;;		wreg, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3688 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3690 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;Total ram usage:        7 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    1
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_i2c_read
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _i2c_read_byte
  3703  06BC                     _i2c_read_byte:
  3704                           
  3705                           ;incstack = 0
  3706                           ; Regs used in _i2c_read_byte: [wreg+status,0]
  3707                           ;i2c_read_byte@ack stored from wreg
  3708  06BC  0020               	movlb	0	; select bank0
  3709  06BD  00D4               	movwf	i2c_read_byte@ack
  3710  06BE                     l1928:
  3711                           
  3712                           ;config.c: 157:     int temp;;config.c: 158:     SSP1CON2bits.RCEN = 1;
  3713  06BE  0024               	movlb	4	; select bank4
  3714  06BF  1596               	bsf	22,3	;volatile
  3715  06C0                     l299:	
  3716                           ;config.c: 159:     while(RCEN);
  3717                           
  3718  06C0  1996               	btfsc	22,3	;volatile
  3719  06C1  2EC3               	goto	u1731
  3720  06C2  2EC4               	goto	u1730
  3721  06C3                     u1731:
  3722  06C3  2EC0               	goto	l299
  3723  06C4                     u1730:
  3724  06C4                     l1930:
  3725                           
  3726                           ;config.c: 160:     temp = SSP1BUF;
  3727  06C4  0811               	movf	17,w	;volatile
  3728  06C5  0020               	movlb	0	; select bank0
  3729  06C6  00D2               	movwf	??_i2c_read_byte
  3730  06C7  01D3               	clrf	??_i2c_read_byte+1
  3731  06C8  0852               	movf	??_i2c_read_byte,w
  3732  06C9  00D5               	movwf	i2c_read_byte@temp
  3733  06CA  0853               	movf	??_i2c_read_byte+1,w
  3734  06CB  00D6               	movwf	i2c_read_byte@temp+1
  3735  06CC                     l1932:
  3736                           
  3737                           ;config.c: 161:     PIR1bits.SSP1IF = 0;
  3738  06CC  1190               	bcf	16,3	;volatile
  3739  06CD                     l1934:
  3740                           
  3741                           ;config.c: 163:     SSP1CON2bits.ACKDT = ack;
  3742  06CD  0C54               	rrf	i2c_read_byte@ack,w
  3743  06CE  0024               	movlb	4	; select bank4
  3744  06CF  1C03               	skipc
  3745  06D0  1296               	bcf	22,5	;volatile
  3746  06D1  1803               	skipnc
  3747  06D2  1696               	bsf	22,5	;volatile
  3748  06D3                     l1936:
  3749                           
  3750                           ;config.c: 164:     SSP1CON2bits.ACKEN = 1;
  3751  06D3  1616               	bsf	22,4	;volatile
  3752  06D4                     l302:	
  3753                           ;config.c: 165:     while(SSP1CON2bits.ACKEN);
  3754                           
  3755  06D4  1A16               	btfsc	22,4	;volatile
  3756  06D5  2ED7               	goto	u1741
  3757  06D6  2ED8               	goto	u1740
  3758  06D7                     u1741:
  3759  06D7  2ED4               	goto	l302
  3760  06D8                     u1740:
  3761  06D8                     l304:
  3762                           
  3763                           ;config.c: 166:     PIR1bits.SSP1IF = 0;
  3764  06D8  0020               	movlb	0	; select bank0
  3765  06D9  1190               	bcf	16,3	;volatile
  3766  06DA                     l1938:
  3767                           
  3768                           ;config.c: 167:     return temp;
  3769  06DA  0856               	movf	i2c_read_byte@temp+1,w
  3770  06DB  00D1               	movwf	?_i2c_read_byte+1
  3771  06DC  0855               	movf	i2c_read_byte@temp,w
  3772  06DD  00D0               	movwf	?_i2c_read_byte
  3773  06DE                     l305:
  3774  06DE  0008               	return
  3775  06DF                     __end_of_i2c_read_byte:
  3776                           
  3777                           	psect	text14
  3778  0631                     __ptext14:	
  3779 ;; *************** function ___awmod *****************
  3780 ;; Defined at:
  3781 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  divisor         2    0[BANK0 ] int 
  3784 ;;  dividend        2    2[BANK0 ] int 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  sign            1    6[BANK0 ] unsigned char 
  3787 ;;  counter         1    5[BANK0 ] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  2    0[BANK0 ] int 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3797 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;Total ram usage:        7 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_gyro_cal
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function ___awmod
  3813  0631                     ___awmod:
  3814  0631                     l2032:	
  3815                           ;incstack = 0
  3816                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3817                           
  3818  0631  0020               	movlb	0	; select bank0
  3819  0632  01D6               	clrf	___awmod@sign
  3820  0633                     l2034:
  3821  0633  1FD3               	btfss	___awmod@dividend+1,7
  3822  0634  2E36               	goto	u1901
  3823  0635  2E37               	goto	u1900
  3824  0636                     u1901:
  3825  0636  2E3E               	goto	l2040
  3826  0637                     u1900:
  3827  0637                     l2036:
  3828  0637  09D2               	comf	___awmod@dividend,f
  3829  0638  09D3               	comf	___awmod@dividend+1,f
  3830  0639  0AD2               	incf	___awmod@dividend,f
  3831  063A  1903               	skipnz
  3832  063B  0AD3               	incf	___awmod@dividend+1,f
  3833  063C                     l2038:
  3834  063C  01D6               	clrf	___awmod@sign
  3835  063D  0AD6               	incf	___awmod@sign,f
  3836  063E                     l2040:
  3837  063E  1FD1               	btfss	___awmod@divisor+1,7
  3838  063F  2E41               	goto	u1911
  3839  0640  2E42               	goto	u1910
  3840  0641                     u1911:
  3841  0641  2E47               	goto	l2044
  3842  0642                     u1910:
  3843  0642                     l2042:
  3844  0642  09D0               	comf	___awmod@divisor,f
  3845  0643  09D1               	comf	___awmod@divisor+1,f
  3846  0644  0AD0               	incf	___awmod@divisor,f
  3847  0645  1903               	skipnz
  3848  0646  0AD1               	incf	___awmod@divisor+1,f
  3849  0647                     l2044:
  3850  0647  0850               	movf	___awmod@divisor,w
  3851  0648  0451               	iorwf	___awmod@divisor+1,w
  3852  0649  1903               	btfsc	3,2
  3853  064A  2E4C               	goto	u1921
  3854  064B  2E4D               	goto	u1920
  3855  064C                     u1921:
  3856  064C  2E76               	goto	l2062
  3857  064D                     u1920:
  3858  064D                     l2046:
  3859  064D  01D5               	clrf	___awmod@counter
  3860  064E  0AD5               	incf	___awmod@counter,f
  3861  064F  2E59               	goto	l2052
  3862  0650                     l2048:
  3863  0650  3001               	movlw	1
  3864  0651                     u1935:
  3865  0651  35D0               	lslf	___awmod@divisor,f
  3866  0652  0DD1               	rlf	___awmod@divisor+1,f
  3867  0653  0B89               	decfsz	9,f
  3868  0654  2E51               	goto	u1935
  3869  0655                     l2050:
  3870  0655  3001               	movlw	1
  3871  0656  00D4               	movwf	??___awmod
  3872  0657  0854               	movf	??___awmod,w
  3873  0658  07D5               	addwf	___awmod@counter,f
  3874  0659                     l2052:
  3875  0659  1FD1               	btfss	___awmod@divisor+1,7
  3876  065A  2E5C               	goto	u1941
  3877  065B  2E5D               	goto	u1940
  3878  065C                     u1941:
  3879  065C  2E50               	goto	l2048
  3880  065D                     u1940:
  3881  065D                     l2054:
  3882  065D  0851               	movf	___awmod@divisor+1,w
  3883  065E  0253               	subwf	___awmod@dividend+1,w
  3884  065F  1D03               	skipz
  3885  0660  2E63               	goto	u1955
  3886  0661  0850               	movf	___awmod@divisor,w
  3887  0662  0252               	subwf	___awmod@dividend,w
  3888  0663                     u1955:
  3889  0663  1C03               	skipc
  3890  0664  2E66               	goto	u1951
  3891  0665  2E67               	goto	u1950
  3892  0666                     u1951:
  3893  0666  2E6B               	goto	l2058
  3894  0667                     u1950:
  3895  0667                     l2056:
  3896  0667  0850               	movf	___awmod@divisor,w
  3897  0668  02D2               	subwf	___awmod@dividend,f
  3898  0669  0851               	movf	___awmod@divisor+1,w
  3899  066A  3BD3               	subwfb	___awmod@dividend+1,f
  3900  066B                     l2058:
  3901  066B  3001               	movlw	1
  3902  066C                     u1965:
  3903  066C  36D1               	lsrf	___awmod@divisor+1,f
  3904  066D  0CD0               	rrf	___awmod@divisor,f
  3905  066E  0B89               	decfsz	9,f
  3906  066F  2E6C               	goto	u1965
  3907  0670                     l2060:
  3908  0670  3001               	movlw	1
  3909  0671  02D5               	subwf	___awmod@counter,f
  3910  0672  1D03               	btfss	3,2
  3911  0673  2E75               	goto	u1971
  3912  0674  2E76               	goto	u1970
  3913  0675                     u1971:
  3914  0675  2E5D               	goto	l2054
  3915  0676                     u1970:
  3916  0676                     l2062:
  3917  0676  0856               	movf	___awmod@sign,w
  3918  0677  1903               	btfsc	3,2
  3919  0678  2E7A               	goto	u1981
  3920  0679  2E7B               	goto	u1980
  3921  067A                     u1981:
  3922  067A  2E80               	goto	l2066
  3923  067B                     u1980:
  3924  067B                     l2064:
  3925  067B  09D2               	comf	___awmod@dividend,f
  3926  067C  09D3               	comf	___awmod@dividend+1,f
  3927  067D  0AD2               	incf	___awmod@dividend,f
  3928  067E  1903               	skipnz
  3929  067F  0AD3               	incf	___awmod@dividend+1,f
  3930  0680                     l2066:
  3931  0680  0853               	movf	___awmod@dividend+1,w
  3932  0681  00D1               	movwf	?___awmod+1
  3933  0682  0852               	movf	___awmod@dividend,w
  3934  0683  00D0               	movwf	?___awmod
  3935  0684                     l608:
  3936  0684  0008               	return
  3937  0685                     __end_of___awmod:
  3938                           
  3939                           	psect	text15
  3940  03F0                     __ptext15:	
  3941 ;; *************** function ___aldiv *****************
  3942 ;; Defined at:
  3943 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  divisor         4    0[BANK0 ] long 
  3946 ;;  dividend        4    4[BANK0 ] long 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  quotient        4   11[BANK0 ] long 
  3949 ;;  sign            1   10[BANK0 ] unsigned char 
  3950 ;;  counter         1    9[BANK0 ] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  4    0[BANK0 ] long 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3960 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;Total ram usage:       15 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    1
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_gyro_cal
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           
  3975                           ;psect for function ___aldiv
  3976  03F0                     ___aldiv:
  3977  03F0                     l1992:	
  3978                           ;incstack = 0
  3979                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3980                           
  3981  03F0  0020               	movlb	0	; select bank0
  3982  03F1  01DA               	clrf	___aldiv@sign
  3983  03F2                     l1994:
  3984  03F2  1FD3               	btfss	___aldiv@divisor+3,7
  3985  03F3  2BF5               	goto	u1801
  3986  03F4  2BF6               	goto	u1800
  3987  03F5                     u1801:
  3988  03F5  2C03               	goto	l507
  3989  03F6                     u1800:
  3990  03F6                     l1996:
  3991  03F6  09D0               	comf	___aldiv@divisor,f
  3992  03F7  09D1               	comf	___aldiv@divisor+1,f
  3993  03F8  09D2               	comf	___aldiv@divisor+2,f
  3994  03F9  09D3               	comf	___aldiv@divisor+3,f
  3995  03FA  0AD0               	incf	___aldiv@divisor,f
  3996  03FB  1903               	skipnz
  3997  03FC  0AD1               	incf	___aldiv@divisor+1,f
  3998  03FD  1903               	skipnz
  3999  03FE  0AD2               	incf	___aldiv@divisor+2,f
  4000  03FF  1903               	skipnz
  4001  0400  0AD3               	incf	___aldiv@divisor+3,f
  4002  0401  01DA               	clrf	___aldiv@sign
  4003  0402  0ADA               	incf	___aldiv@sign,f
  4004  0403                     l507:
  4005  0403  1FD7               	btfss	___aldiv@dividend+3,7
  4006  0404  2C06               	goto	u1811
  4007  0405  2C07               	goto	u1810
  4008  0406                     u1811:
  4009  0406  2C16               	goto	l2002
  4010  0407                     u1810:
  4011  0407                     l1998:
  4012  0407  09D4               	comf	___aldiv@dividend,f
  4013  0408  09D5               	comf	___aldiv@dividend+1,f
  4014  0409  09D6               	comf	___aldiv@dividend+2,f
  4015  040A  09D7               	comf	___aldiv@dividend+3,f
  4016  040B  0AD4               	incf	___aldiv@dividend,f
  4017  040C  1903               	skipnz
  4018  040D  0AD5               	incf	___aldiv@dividend+1,f
  4019  040E  1903               	skipnz
  4020  040F  0AD6               	incf	___aldiv@dividend+2,f
  4021  0410  1903               	skipnz
  4022  0411  0AD7               	incf	___aldiv@dividend+3,f
  4023  0412                     l2000:
  4024  0412  3001               	movlw	1
  4025  0413  00D8               	movwf	??___aldiv
  4026  0414  0858               	movf	??___aldiv,w
  4027  0415  06DA               	xorwf	___aldiv@sign,f
  4028  0416                     l2002:
  4029  0416  3000               	movlw	0
  4030  0417  00DE               	movwf	___aldiv@quotient+3
  4031  0418  3000               	movlw	0
  4032  0419  00DD               	movwf	___aldiv@quotient+2
  4033  041A  3000               	movlw	0
  4034  041B  00DC               	movwf	___aldiv@quotient+1
  4035  041C  3000               	movlw	0
  4036  041D  00DB               	movwf	___aldiv@quotient
  4037  041E                     l2004:
  4038  041E  0853               	movf	___aldiv@divisor+3,w
  4039  041F  0452               	iorwf	___aldiv@divisor+2,w
  4040  0420  0451               	iorwf	___aldiv@divisor+1,w
  4041  0421  0450               	iorwf	___aldiv@divisor,w
  4042  0422  1903               	skipnz
  4043  0423  2C25               	goto	u1821
  4044  0424  2C26               	goto	u1820
  4045  0425                     u1821:
  4046  0425  2C67               	goto	l2024
  4047  0426                     u1820:
  4048  0426                     l2006:
  4049  0426  01D9               	clrf	___aldiv@counter
  4050  0427  0AD9               	incf	___aldiv@counter,f
  4051  0428  2C34               	goto	l2010
  4052  0429                     l2008:
  4053  0429  3001               	movlw	1
  4054  042A                     u1835:
  4055  042A  35D0               	lslf	___aldiv@divisor,f
  4056  042B  0DD1               	rlf	___aldiv@divisor+1,f
  4057  042C  0DD2               	rlf	___aldiv@divisor+2,f
  4058  042D  0DD3               	rlf	___aldiv@divisor+3,f
  4059  042E  0B89               	decfsz	9,f
  4060  042F  2C2A               	goto	u1835
  4061  0430  3001               	movlw	1
  4062  0431  00D8               	movwf	??___aldiv
  4063  0432  0858               	movf	??___aldiv,w
  4064  0433  07D9               	addwf	___aldiv@counter,f
  4065  0434                     l2010:
  4066  0434  1FD3               	btfss	___aldiv@divisor+3,7
  4067  0435  2C37               	goto	u1841
  4068  0436  2C38               	goto	u1840
  4069  0437                     u1841:
  4070  0437  2C29               	goto	l2008
  4071  0438                     u1840:
  4072  0438                     l2012:
  4073  0438  3001               	movlw	1
  4074  0439                     u1855:
  4075  0439  35DB               	lslf	___aldiv@quotient,f
  4076  043A  0DDC               	rlf	___aldiv@quotient+1,f
  4077  043B  0DDD               	rlf	___aldiv@quotient+2,f
  4078  043C  0DDE               	rlf	___aldiv@quotient+3,f
  4079  043D  0B89               	decfsz	9,f
  4080  043E  2C39               	goto	u1855
  4081  043F                     l2014:
  4082  043F  0853               	movf	___aldiv@divisor+3,w
  4083  0440  0257               	subwf	___aldiv@dividend+3,w
  4084  0441  1D03               	skipz
  4085  0442  2C4D               	goto	u1865
  4086  0443  0852               	movf	___aldiv@divisor+2,w
  4087  0444  0256               	subwf	___aldiv@dividend+2,w
  4088  0445  1D03               	skipz
  4089  0446  2C4D               	goto	u1865
  4090  0447  0851               	movf	___aldiv@divisor+1,w
  4091  0448  0255               	subwf	___aldiv@dividend+1,w
  4092  0449  1D03               	skipz
  4093  044A  2C4D               	goto	u1865
  4094  044B  0850               	movf	___aldiv@divisor,w
  4095  044C  0254               	subwf	___aldiv@dividend,w
  4096  044D                     u1865:
  4097  044D  1C03               	skipc
  4098  044E  2C50               	goto	u1861
  4099  044F  2C51               	goto	u1860
  4100  0450                     u1861:
  4101  0450  2C5A               	goto	l2020
  4102  0451                     u1860:
  4103  0451                     l2016:
  4104  0451  0850               	movf	___aldiv@divisor,w
  4105  0452  02D4               	subwf	___aldiv@dividend,f
  4106  0453  0851               	movf	___aldiv@divisor+1,w
  4107  0454  3BD5               	subwfb	___aldiv@dividend+1,f
  4108  0455  0852               	movf	___aldiv@divisor+2,w
  4109  0456  3BD6               	subwfb	___aldiv@dividend+2,f
  4110  0457  0853               	movf	___aldiv@divisor+3,w
  4111  0458  3BD7               	subwfb	___aldiv@dividend+3,f
  4112  0459                     l2018:
  4113  0459  145B               	bsf	___aldiv@quotient,0
  4114  045A                     l2020:
  4115  045A  3001               	movlw	1
  4116  045B                     u1875:
  4117  045B  36D3               	lsrf	___aldiv@divisor+3,f
  4118  045C  0CD2               	rrf	___aldiv@divisor+2,f
  4119  045D  0CD1               	rrf	___aldiv@divisor+1,f
  4120  045E  0CD0               	rrf	___aldiv@divisor,f
  4121  045F  0B89               	decfsz	9,f
  4122  0460  2C5B               	goto	u1875
  4123  0461                     l2022:
  4124  0461  3001               	movlw	1
  4125  0462  02D9               	subwf	___aldiv@counter,f
  4126  0463  1D03               	btfss	3,2
  4127  0464  2C66               	goto	u1881
  4128  0465  2C67               	goto	u1880
  4129  0466                     u1881:
  4130  0466  2C38               	goto	l2012
  4131  0467                     u1880:
  4132  0467                     l2024:
  4133  0467  085A               	movf	___aldiv@sign,w
  4134  0468  1903               	btfsc	3,2
  4135  0469  2C6B               	goto	u1891
  4136  046A  2C6C               	goto	u1890
  4137  046B                     u1891:
  4138  046B  2C77               	goto	l2028
  4139  046C                     u1890:
  4140  046C                     l2026:
  4141  046C  09DB               	comf	___aldiv@quotient,f
  4142  046D  09DC               	comf	___aldiv@quotient+1,f
  4143  046E  09DD               	comf	___aldiv@quotient+2,f
  4144  046F  09DE               	comf	___aldiv@quotient+3,f
  4145  0470  0ADB               	incf	___aldiv@quotient,f
  4146  0471  1903               	skipnz
  4147  0472  0ADC               	incf	___aldiv@quotient+1,f
  4148  0473  1903               	skipnz
  4149  0474  0ADD               	incf	___aldiv@quotient+2,f
  4150  0475  1903               	skipnz
  4151  0476  0ADE               	incf	___aldiv@quotient+3,f
  4152  0477                     l2028:
  4153  0477  085E               	movf	___aldiv@quotient+3,w
  4154  0478  00D3               	movwf	?___aldiv+3
  4155  0479  085D               	movf	___aldiv@quotient+2,w
  4156  047A  00D2               	movwf	?___aldiv+2
  4157  047B  085C               	movf	___aldiv@quotient+1,w
  4158  047C  00D1               	movwf	?___aldiv+1
  4159  047D  085B               	movf	___aldiv@quotient,w
  4160  047E  00D0               	movwf	?___aldiv
  4161  047F                     l517:
  4162  047F  0008               	return
  4163  0480                     __end_of___aldiv:
  4164                           
  4165                           	psect	text16
  4166  0747                     __ptext16:	
  4167 ;; *************** function _calculate_pid *****************
  4168 ;; Defined at:
  4169 ;;		line 210 in file "config.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		None
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _calculate_pid
  4199  0747                     _calculate_pid:
  4200  0747                     l340:	
  4201                           ;incstack = 0
  4202                           ; Regs used in _calculate_pid: []
  4203                           
  4204  0747  0008               	return
  4205  0748                     __end_of_calculate_pid:
  4206                           
  4207                           	psect	text17
  4208  06DF                     __ptext17:	
  4209 ;; *************** function _battery_compensation *****************
  4210 ;; Defined at:
  4211 ;;		line 218 in file "config.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function _battery_compensation
  4241  06DF                     _battery_compensation:
  4242  06DF                     l2184:	
  4243                           ;incstack = 0
  4244                           ; Regs used in _battery_compensation: [wreg]
  4245                           
  4246                           
  4247                           ;config.c: 220:     ADCON0bits.GO = 1;
  4248  06DF  0021               	movlb	1	; select bank1
  4249  06E0  149D               	bsf	29,1	;volatile
  4250  06E1                     l346:	
  4251                           ;config.c: 221:     while(ADCON0bits.GO);
  4252                           
  4253  06E1  189D               	btfsc	29,1	;volatile
  4254  06E2  2EE4               	goto	u2091
  4255  06E3  2EE5               	goto	u2090
  4256  06E4                     u2091:
  4257  06E4  2EE1               	goto	l346
  4258  06E5                     u2090:
  4259  06E5                     l348:
  4260                           
  4261                           ;config.c: 222:     PIR1bits.ADIF = 0;
  4262  06E5  0020               	movlb	0	; select bank0
  4263  06E6  1310               	bcf	16,6	;volatile
  4264  06E7                     l2186:
  4265                           
  4266                           ;config.c: 227:     voltage = (unsigned)((ADRESH << 8) | ADRESL);
  4267  06E7  0021               	movlb	1	; select bank1
  4268  06E8  081C               	movf	28,w	;volatile
  4269  06E9  00F1               	movwf	_voltage+1
  4270  06EA  081B               	movf	27,w	;volatile
  4271  06EB  00F0               	movwf	_voltage
  4272                           
  4273                           ;config.c: 229:     if(voltage < 810)
  4274  06EC  3003               	movlw	3
  4275  06ED  0271               	subwf	_voltage+1,w
  4276  06EE  302A               	movlw	42
  4277  06EF  1903               	skipnz
  4278  06F0  0270               	subwf	_voltage,w
  4279  06F1  1803               	skipnc
  4280  06F2  2EF4               	goto	u2101
  4281  06F3  2EF5               	goto	u2100
  4282  06F4                     u2101:
  4283  06F4  2EF7               	goto	l350
  4284  06F5                     u2100:
  4285  06F5                     l2188:
  4286                           
  4287                           ;config.c: 230:         LATCbits.LATC7 = 1;
  4288  06F5  0022               	movlb	2	; select bank2
  4289  06F6  178E               	bsf	14,7	;volatile
  4290  06F7                     l350:
  4291  06F7  0008               	return
  4292  06F8                     __end_of_battery_compensation:
  4293                           
  4294                           	psect	text18
  4295  0748                     __ptext18:	
  4296 ;; *************** function _balance_drone *****************
  4297 ;; Defined at:
  4298 ;;		line 214 in file "config.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		None
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;Total ram usage:        0 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_main
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function _balance_drone
  4328  0748                     _balance_drone:
  4329  0748                     l343:	
  4330                           ;incstack = 0
  4331                           ; Regs used in _balance_drone: []
  4332                           
  4333  0748  0008               	return
  4334  0749                     __end_of_balance_drone:
  4335                           
  4336                           	psect	intentry
  4337  0004                     __pintentry:	
  4338 ;; *************** function _remote *****************
  4339 ;; Defined at:
  4340 ;;		line 235 in file "config.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;Total ram usage:        6 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		Interrupt level 1
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367  0004                     _remote:
  4368                           
  4369                           ;incstack = 0
  4370  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4371                           
  4372                           ; Regs used in _remote: [wreg+status,2+status,0]
  4373  0005  3180               	pagesel	$
  4374  0006                     i1l1782:
  4375                           
  4376                           ;config.c: 237:     if(INTCONbits.T0IF)
  4377  0006  1D0B               	btfss	11,2	;volatile
  4378  0007  2809               	goto	u152_21
  4379  0008  280A               	goto	u152_20
  4380  0009                     u152_21:
  4381  0009  2810               	goto	i1l1788
  4382  000A                     u152_20:
  4383  000A                     i1l1784:
  4384                           
  4385                           ;config.c: 238:     {;config.c: 239:         TMR0H++;
  4386  000A  3001               	movlw	1
  4387  000B  0020               	movlb	0	; select bank0
  4388  000C  07B2               	addwf	_TMR0H,f
  4389  000D  3000               	movlw	0
  4390  000E  3DB3               	addwfc	_TMR0H+1,f
  4391  000F                     i1l1786:
  4392                           
  4393                           ;config.c: 240:         INTCONbits.T0IF = 0;
  4394  000F  110B               	bcf	11,2	;volatile
  4395  0010                     i1l1788:
  4396                           
  4397                           ;config.c: 243:     if(PIR1bits.TMR2IF){
  4398  0010  0020               	movlb	0	; select bank0
  4399  0011  1C90               	btfss	16,1	;volatile
  4400  0012  2814               	goto	u153_21
  4401  0013  2815               	goto	u153_20
  4402  0014                     u153_21:
  4403  0014  281A               	goto	i1l1794
  4404  0015                     u153_20:
  4405  0015                     i1l1790:
  4406                           
  4407                           ;config.c: 244:         TMR2H++;
  4408  0015  3001               	movlw	1
  4409  0016  07F2               	addwf	_TMR2H,f
  4410  0017  3000               	movlw	0
  4411  0018  3DF3               	addwfc	_TMR2H+1,f
  4412  0019                     i1l1792:
  4413                           
  4414                           ;config.c: 245:         PIR1bits.TMR2IF = 0;
  4415  0019  1090               	bcf	16,1	;volatile
  4416  001A                     i1l1794:
  4417                           
  4418                           ;config.c: 248:     if(INTCONbits.IOCIF){
  4419  001A  1C0B               	btfss	11,0	;volatile
  4420  001B  281D               	goto	u154_21
  4421  001C  281E               	goto	u154_20
  4422  001D                     u154_21:
  4423  001D  28E9               	goto	i1l374
  4424  001E                     u154_20:
  4425  001E                     i1l1796:
  4426                           
  4427                           ;config.c: 249:         if(IOCCFbits.IOCCF3)
  4428  001E  0027               	movlb	7	; select bank7
  4429  001F  1D99               	btfss	25,3	;volatile
  4430  0020  2822               	goto	u155_21
  4431  0021  2823               	goto	u155_20
  4432  0022                     u155_21:
  4433  0022  284D               	goto	i1l1820
  4434  0023                     u155_20:
  4435  0023                     i1l1798:
  4436                           
  4437                           ;config.c: 250:         {;config.c: 251:             if(p.p1)
  4438  0023  0020               	movlb	0	; select bank0
  4439  0024  1C4F               	btfss	_p,0
  4440  0025  2827               	goto	u156_21
  4441  0026  2828               	goto	u156_20
  4442  0027                     u156_21:
  4443  0027  2842               	goto	i1l359
  4444  0028                     u156_20:
  4445  0028                     i1l1800:
  4446                           
  4447                           ;config.c: 252:             {;config.c: 253:                 T1CONbits.TMR1ON = 0;
  4448  0028  1018               	bcf	24,0	;volatile
  4449  0029                     i1l1802:
  4450                           
  4451                           ;config.c: 254:                 if(TMR1 < 2100)
  4452  0029  3008               	movlw	8
  4453  002A  0217               	subwf	23,w	;volatile
  4454  002B  3034               	movlw	52
  4455  002C  1903               	skipnz
  4456  002D  0216               	subwf	22,w	;volatile
  4457  002E  1803               	skipnc
  4458  002F  2831               	goto	u157_21
  4459  0030  2832               	goto	u157_20
  4460  0031                     u157_21:
  4461  0031  2839               	goto	i1l1806
  4462  0032                     u157_20:
  4463  0032                     i1l1804:
  4464                           
  4465                           ;config.c: 255:                     ch1 = TMR1;
  4466  0032  0817               	movf	23,w	;volatile
  4467  0033  0021               	movlb	1	; select bank1
  4468  0034  00AD               	movwf	(_ch1+1)^(0+128)
  4469  0035  0020               	movlb	0	; select bank0
  4470  0036  0816               	movf	22,w	;volatile
  4471  0037  0021               	movlb	1	; select bank1
  4472  0038  00AC               	movwf	_ch1^(0+128)
  4473  0039                     i1l1806:
  4474                           
  4475                           ;config.c: 256:                 IOCCN &= 0b11110111;
  4476  0039  30F7               	movlw	247
  4477  003A  00F6               	movwf	??_remote
  4478  003B  0876               	movf	??_remote,w
  4479  003C  0027               	movlb	7	; select bank7
  4480  003D  0598               	andwf	24,f	;volatile
  4481  003E                     i1l1808:
  4482                           
  4483                           ;config.c: 257:                 IOCCP |= 0b00001000;
  4484  003E  1597               	bsf	23,3	;volatile
  4485  003F                     i1l1810:
  4486                           
  4487                           ;config.c: 258:                 p.p1 = 0;
  4488  003F  0020               	movlb	0	; select bank0
  4489  0040  104F               	bcf	_p,0
  4490                           
  4491                           ;config.c: 259:             }
  4492  0041  284D               	goto	i1l1820
  4493  0042                     i1l359:	
  4494                           ;config.c: 260:             else
  4495                           
  4496                           
  4497                           ;config.c: 261:             {;config.c: 262:                 T1CONbits.TMR1ON = 1;
  4498  0042  1418               	bsf	24,0	;volatile
  4499  0043                     i1l1812:
  4500                           
  4501                           ;config.c: 263:                 TMR1 = 0;
  4502  0043  0196               	clrf	22	;volatile
  4503  0044  0197               	clrf	23	;volatile
  4504  0045                     i1l1814:
  4505                           
  4506                           ;config.c: 264:                 IOCCP &= 0b11110111;
  4507  0045  30F7               	movlw	247
  4508  0046  00F6               	movwf	??_remote
  4509  0047  0876               	movf	??_remote,w
  4510  0048  0027               	movlb	7	; select bank7
  4511  0049  0597               	andwf	23,f	;volatile
  4512  004A                     i1l1816:
  4513                           
  4514                           ;config.c: 265:                 IOCCN |= 0b00001000;
  4515  004A  1598               	bsf	24,3	;volatile
  4516  004B                     i1l1818:
  4517                           
  4518                           ;config.c: 266:                 p.p1 = 1;
  4519  004B  0020               	movlb	0	; select bank0
  4520  004C  144F               	bsf	_p,0
  4521  004D                     i1l1820:
  4522                           
  4523                           ;config.c: 270:         if(IOCCFbits.IOCCF4)
  4524  004D  0027               	movlb	7	; select bank7
  4525  004E  1E19               	btfss	25,4	;volatile
  4526  004F  2851               	goto	u158_21
  4527  0050  2852               	goto	u158_20
  4528  0051                     u158_21:
  4529  0051  287D               	goto	i1l1848
  4530  0052                     u158_20:
  4531  0052                     i1l1822:
  4532                           
  4533                           ;config.c: 271:         {;config.c: 272:             if(p.p2)
  4534  0052  0020               	movlb	0	; select bank0
  4535  0053  1CCF               	btfss	_p,1
  4536  0054  2856               	goto	u159_21
  4537  0055  2857               	goto	u159_20
  4538  0056                     u159_21:
  4539  0056  2870               	goto	i1l363
  4540  0057                     u159_20:
  4541  0057                     i1l1824:
  4542                           
  4543                           ;config.c: 273:             {;config.c: 274:                 T3CONbits.TMR3ON = 0;
  4544  0057  0029               	movlb	9	; select bank9
  4545  0058  1015               	bcf	21,0	;volatile
  4546  0059                     i1l1826:
  4547                           
  4548                           ;config.c: 275:                 IOCCN &= 0b11101111;
  4549  0059  30EF               	movlw	239
  4550  005A  00F6               	movwf	??_remote
  4551  005B  0876               	movf	??_remote,w
  4552  005C  0027               	movlb	7	; select bank7
  4553  005D  0598               	andwf	24,f	;volatile
  4554  005E                     i1l1828:
  4555                           
  4556                           ;config.c: 276:                 IOCCP |= 0b00010000;
  4557  005E  1617               	bsf	23,4	;volatile
  4558  005F                     i1l1830:
  4559                           
  4560                           ;config.c: 277:                 if(TMR3H < 9)
  4561  005F  3009               	movlw	9
  4562  0060  0029               	movlb	9	; select bank9
  4563  0061  0214               	subwf	20,w	;volatile
  4564  0062  1803               	skipnc
  4565  0063  2865               	goto	u160_21
  4566  0064  2866               	goto	u160_20
  4567  0065                     u160_21:
  4568  0065  286D               	goto	i1l1834
  4569  0066                     u160_20:
  4570  0066                     i1l1832:
  4571                           
  4572                           ;config.c: 278:                     ch2 = ((unsigned)TMR3H<<8) | (unsigned)TMR3L;
  4573  0066  0814               	movf	20,w	;volatile
  4574  0067  0021               	movlb	1	; select bank1
  4575  0068  00AB               	movwf	(_ch2+1)^(0+128)
  4576  0069  0029               	movlb	9	; select bank9
  4577  006A  0813               	movf	19,w	;volatile
  4578  006B  0021               	movlb	1	; select bank1
  4579  006C  00AA               	movwf	_ch2^(0+128)
  4580  006D                     i1l1834:
  4581                           
  4582                           ;config.c: 279:                 p.p2 = 0;
  4583  006D  0020               	movlb	0	; select bank0
  4584  006E  10CF               	bcf	_p,1
  4585                           
  4586                           ;config.c: 280:             }
  4587  006F  287D               	goto	i1l1848
  4588  0070                     i1l363:	
  4589                           ;config.c: 281:             else
  4590                           
  4591                           
  4592                           ;config.c: 282:             {;config.c: 283:                 IOCCN |= 0b00010000;
  4593  0070  0027               	movlb	7	; select bank7
  4594  0071  1618               	bsf	24,4	;volatile
  4595  0072                     i1l1836:
  4596                           
  4597                           ;config.c: 284:                 IOCCP &= 0b11101111;
  4598  0072  30EF               	movlw	239
  4599  0073  00F6               	movwf	??_remote
  4600  0074  0876               	movf	??_remote,w
  4601  0075  0597               	andwf	23,f	;volatile
  4602  0076                     i1l1838:
  4603                           
  4604                           ;config.c: 285:                 TMR3L = 0;
  4605  0076  0029               	movlb	9	; select bank9
  4606  0077  0193               	clrf	19	;volatile
  4607  0078                     i1l1840:
  4608                           
  4609                           ;config.c: 286:                 TMR3H = 0;
  4610  0078  0194               	clrf	20	;volatile
  4611  0079                     i1l1842:
  4612                           
  4613                           ;config.c: 287:                 TMR3L = 0;
  4614  0079  0193               	clrf	19	;volatile
  4615  007A                     i1l1844:
  4616                           
  4617                           ;config.c: 288:                 T3CONbits.TMR3ON = 1;
  4618  007A  1415               	bsf	21,0	;volatile
  4619  007B                     i1l1846:
  4620                           
  4621                           ;config.c: 289:                 p.p2 = 1;
  4622  007B  0020               	movlb	0	; select bank0
  4623  007C  14CF               	bsf	_p,1
  4624  007D                     i1l1848:
  4625                           
  4626                           ;config.c: 293:         if(IOCCFbits.IOCCF5)
  4627  007D  0027               	movlb	7	; select bank7
  4628  007E  1E99               	btfss	25,5	;volatile
  4629  007F  2881               	goto	u161_21
  4630  0080  2882               	goto	u161_20
  4631  0081                     u161_21:
  4632  0081  28AC               	goto	i1l1874
  4633  0082                     u161_20:
  4634  0082                     i1l1850:
  4635                           
  4636                           ;config.c: 294:         {;config.c: 295:             if(p.p3)
  4637  0082  0020               	movlb	0	; select bank0
  4638  0083  1D4F               	btfss	_p,2
  4639  0084  2886               	goto	u162_21
  4640  0085  2887               	goto	u162_20
  4641  0086                     u162_21:
  4642  0086  28A0               	goto	i1l367
  4643  0087                     u162_20:
  4644  0087                     i1l1852:
  4645                           
  4646                           ;config.c: 296:             {;config.c: 297:                 T5CONbits.TMR5ON = 0;
  4647  0087  0029               	movlb	9	; select bank9
  4648  0088  101C               	bcf	28,0	;volatile
  4649  0089                     i1l1854:
  4650                           
  4651                           ;config.c: 298:                 IOCCN &= 0b11011111;
  4652  0089  30DF               	movlw	223
  4653  008A  00F6               	movwf	??_remote
  4654  008B  0876               	movf	??_remote,w
  4655  008C  0027               	movlb	7	; select bank7
  4656  008D  0598               	andwf	24,f	;volatile
  4657  008E                     i1l1856:
  4658                           
  4659                           ;config.c: 299:                 IOCCP |= 0b00100000;
  4660  008E  1697               	bsf	23,5	;volatile
  4661  008F                     i1l1858:
  4662                           
  4663                           ;config.c: 300:                 if(TMR5H < 9)
  4664  008F  3009               	movlw	9
  4665  0090  0029               	movlb	9	; select bank9
  4666  0091  021B               	subwf	27,w	;volatile
  4667  0092  1803               	skipnc
  4668  0093  2895               	goto	u163_21
  4669  0094  2896               	goto	u163_20
  4670  0095                     u163_21:
  4671  0095  289D               	goto	i1l1862
  4672  0096                     u163_20:
  4673  0096                     i1l1860:
  4674                           
  4675                           ;config.c: 301:                     ch3 = ((unsigned)TMR5H << 8) | (unsigned)TMR5L;
  4676  0096  081B               	movf	27,w	;volatile
  4677  0097  0020               	movlb	0	; select bank0
  4678  0098  00AF               	movwf	_ch3+1
  4679  0099  0029               	movlb	9	; select bank9
  4680  009A  081A               	movf	26,w	;volatile
  4681  009B  0020               	movlb	0	; select bank0
  4682  009C  00AE               	movwf	_ch3
  4683  009D                     i1l1862:
  4684                           
  4685                           ;config.c: 302:                 p.p3 = 0;
  4686  009D  0020               	movlb	0	; select bank0
  4687  009E  114F               	bcf	_p,2
  4688                           
  4689                           ;config.c: 303:             }
  4690  009F  28AC               	goto	i1l1874
  4691  00A0                     i1l367:	
  4692                           ;config.c: 304:             else
  4693                           
  4694                           
  4695                           ;config.c: 305:             {;config.c: 306:                 IOCCN |= 0b00100000;
  4696  00A0  0027               	movlb	7	; select bank7
  4697  00A1  1698               	bsf	24,5	;volatile
  4698  00A2                     i1l1864:
  4699                           
  4700                           ;config.c: 307:                 IOCCP &= 0b11011111;
  4701  00A2  30DF               	movlw	223
  4702  00A3  00F6               	movwf	??_remote
  4703  00A4  0876               	movf	??_remote,w
  4704  00A5  0597               	andwf	23,f	;volatile
  4705  00A6                     i1l1866:
  4706                           
  4707                           ;config.c: 308:                 TMR5L = 0;
  4708  00A6  0029               	movlb	9	; select bank9
  4709  00A7  019A               	clrf	26	;volatile
  4710  00A8                     i1l1868:
  4711                           
  4712                           ;config.c: 309:                 TMR5H = 0;
  4713  00A8  019B               	clrf	27	;volatile
  4714  00A9                     i1l1870:
  4715                           
  4716                           ;config.c: 310:                 T5CONbits.TMR5ON = 1;
  4717  00A9  141C               	bsf	28,0	;volatile
  4718  00AA                     i1l1872:
  4719                           
  4720                           ;config.c: 311:                 p.p3 = 1;
  4721  00AA  0020               	movlb	0	; select bank0
  4722  00AB  154F               	bsf	_p,2
  4723  00AC                     i1l1874:
  4724                           
  4725                           ;config.c: 315:         if(IOCCFbits.IOCCF6)
  4726  00AC  0027               	movlb	7	; select bank7
  4727  00AD  1F19               	btfss	25,6	;volatile
  4728  00AE  28B0               	goto	u164_21
  4729  00AF  28B1               	goto	u164_20
  4730  00B0                     u164_21:
  4731  00B0  28E6               	goto	i1l1900
  4732  00B1                     u164_20:
  4733  00B1                     i1l1876:
  4734                           
  4735                           ;config.c: 316:         {;config.c: 317:             if(p.p4)
  4736  00B1  0020               	movlb	0	; select bank0
  4737  00B2  1DCF               	btfss	_p,3
  4738  00B3  28B5               	goto	u165_21
  4739  00B4  28B6               	goto	u165_20
  4740  00B5                     u165_21:
  4741  00B5  28DA               	goto	i1l371
  4742  00B6                     u165_20:
  4743  00B6                     i1l1878:
  4744                           
  4745                           ;config.c: 318:             {;config.c: 319:                 T2CONbits.ON = 0;
  4746  00B6  139C               	bcf	28,7	;volatile
  4747  00B7                     i1l1880:
  4748                           
  4749                           ;config.c: 320:                 IOCCN &= 0b10111111;
  4750  00B7  30BF               	movlw	191
  4751  00B8  00F6               	movwf	??_remote
  4752  00B9  0876               	movf	??_remote,w
  4753  00BA  0027               	movlb	7	; select bank7
  4754  00BB  0598               	andwf	24,f	;volatile
  4755  00BC                     i1l1882:
  4756                           
  4757                           ;config.c: 321:                 IOCCP |= 0b01000000;
  4758  00BC  1717               	bsf	23,6	;volatile
  4759  00BD                     i1l1884:
  4760                           
  4761                           ;config.c: 322:                 if(TMR2H < 9)
  4762  00BD  3000               	movlw	0
  4763  00BE  0273               	subwf	_TMR2H+1,w
  4764  00BF  3009               	movlw	9
  4765  00C0  1903               	skipnz
  4766  00C1  0272               	subwf	_TMR2H,w
  4767  00C2  1803               	skipnc
  4768  00C3  28C5               	goto	u166_21
  4769  00C4  28C6               	goto	u166_20
  4770  00C5                     u166_21:
  4771  00C5  28D7               	goto	i1l1888
  4772  00C6                     u166_20:
  4773  00C6                     i1l1886:
  4774                           
  4775                           ;config.c: 323:                     ch4 = (TMR2H<<8) | TMR2;
  4776  00C6  0020               	movlb	0	; select bank0
  4777  00C7  081A               	movf	26,w	;volatile
  4778  00C8  00F6               	movwf	??_remote
  4779  00C9  01F7               	clrf	??_remote+1
  4780  00CA  0872               	movf	_TMR2H,w
  4781  00CB  00F9               	movwf	??_remote+3
  4782  00CC  01F8               	clrf	??_remote+2
  4783  00CD  0876               	movf	??_remote,w
  4784  00CE  0478               	iorwf	??_remote+2,w
  4785  00CF  00FA               	movwf	??_remote+4
  4786  00D0  0877               	movf	??_remote+1,w
  4787  00D1  0479               	iorwf	??_remote+3,w
  4788  00D2  00FB               	movwf	??_remote+5
  4789  00D3  087A               	movf	??_remote+4,w
  4790  00D4  00AC               	movwf	_ch4
  4791  00D5  087B               	movf	??_remote+5,w
  4792  00D6  00AD               	movwf	_ch4+1
  4793  00D7                     i1l1888:
  4794                           
  4795                           ;config.c: 324:                 p.p4 = 0;
  4796  00D7  0020               	movlb	0	; select bank0
  4797  00D8  11CF               	bcf	_p,3
  4798                           
  4799                           ;config.c: 325:             }
  4800  00D9  28E6               	goto	i1l1900
  4801  00DA                     i1l371:	
  4802                           ;config.c: 326:             else
  4803                           
  4804                           
  4805                           ;config.c: 327:             {;config.c: 328:                 IOCCN |= 0b01000000;
  4806  00DA  0027               	movlb	7	; select bank7
  4807  00DB  1718               	bsf	24,6	;volatile
  4808  00DC                     i1l1890:
  4809                           
  4810                           ;config.c: 329:                 IOCCP &= 0b10111111;
  4811  00DC  30BF               	movlw	191
  4812  00DD  00F6               	movwf	??_remote
  4813  00DE  0876               	movf	??_remote,w
  4814  00DF  0597               	andwf	23,f	;volatile
  4815  00E0                     i1l1892:
  4816                           
  4817                           ;config.c: 330:                 TMR2 = 0;
  4818  00E0  0020               	movlb	0	; select bank0
  4819  00E1  019A               	clrf	26	;volatile
  4820  00E2                     i1l1894:
  4821                           
  4822                           ;config.c: 331:                 TMR2H = 0;
  4823  00E2  01F2               	clrf	_TMR2H
  4824  00E3  01F3               	clrf	_TMR2H+1
  4825  00E4                     i1l1896:
  4826                           
  4827                           ;config.c: 332:                 T2CONbits.ON = 1;
  4828  00E4  179C               	bsf	28,7	;volatile
  4829  00E5                     i1l1898:
  4830                           
  4831                           ;config.c: 333:                 p.p4 = 1;
  4832  00E5  15CF               	bsf	_p,3
  4833  00E6                     i1l1900:
  4834                           
  4835                           ;config.c: 336:         IOCCF = 0;
  4836  00E6  0027               	movlb	7	; select bank7
  4837  00E7  0199               	clrf	25	;volatile
  4838  00E8                     i1l1902:
  4839                           
  4840                           ;config.c: 337:         INTCONbits.IOCIF = 0;
  4841  00E8  100B               	bcf	11,0	;volatile
  4842  00E9                     i1l374:
  4843  00E9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4844  00EA  0009               	retfie
  4845  00EB                     __end_of_remote:
  4846  007E                     btemp	set	126	;btemp
  4847  007E                     int$flags	set	126
  4848  007E                     wtemp0	set	126
  4849                           
  4850                           	psect	config
  4851                           
  4852                           ;Config register CONFIG1 @ 0x8007
  4853                           ;	Oscillator Selection Bits
  4854                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4855                           ;	Power-up Timer Enable
  4856                           ;	PWRTE = OFF, PWRT disabled
  4857                           ;	MCLR Pin Function Select
  4858                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4859                           ;	Flash Program Memory Code Protection
  4860                           ;	CP = OFF, Program memory code protection is disabled
  4861                           ;	Brown-out Reset Enable
  4862                           ;	BOREN = OFF, Brown-out Reset disabled
  4863                           ;	Clock Out Enable
  4864                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4865                           ;	Internal/External Switch Over
  4866                           ;	IESO = ON, Internal External Switch Over mode is enabled
  4867                           ;	Fail-Safe Clock Monitor Enable
  4868                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4869  8007                     	org	32775
  4870  8007  39BC               	dw	14780
  4871                           
  4872                           ;Config register CONFIG2 @ 0x8008
  4873                           ;	Flash Memory Self-Write Protection
  4874                           ;	WRT = OFF, Write protection off
  4875                           ;	Peripheral Pin Select one-way control
  4876                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  4877                           ;	Zero Cross Detect Disable Bit
  4878                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4879                           ;	PLL Enable Bit
  4880                           ;	PLLEN = ON, 4x PLL is always enabled
  4881                           ;	Stack Overflow/Underflow Reset Enable
  4882                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4883                           ;	Brown-out Reset Voltage Selection
  4884                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4885                           ;	Low-Power Brown Out Reset
  4886                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4887                           ;	Low-Voltage Programming Enable
  4888                           ;	LVP = ON, Low-voltage programming enabled
  4889  8008                     	org	32776
  4890  8008  3FFF               	dw	16383
  4891                           
  4892                           ;Config register CONFIG3 @ 0x8009
  4893                           ;	WDT Period Select
  4894                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  4895                           ;	Watchdog Timer Enable
  4896                           ;	WDTE = OFF, WDT disabled
  4897                           ;	WDT Window Select
  4898                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  4899                           ;	WDT Input Clock Selector
  4900                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  4901  8009                     	org	32777
  4902  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         60
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      74
    BANK1            80      8      14
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _remote in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_gyro_config
    _gyro_config->_gyro_cal
    _i2c_write->_nack
    _gyro_cal->_read_sensor
    _read_sensor->_i2c_read
    _i2c_read->_i2c_read_byte

Critical Paths under _remote in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _remote in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _remote in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _remote in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _remote in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _remote in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _remote in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _remote in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _remote in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _remote in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _remote in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _remote in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _remote in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    5432
                                              0 BANK1      8     8      0
                      _balance_drone
               _battery_compensation
                      _calculate_pid
                        _gyro_config
                           _pic_init
                        _read_sensor
                   _reset_timer_loop
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gyro_config                                          2     2      0    4272
                                             24 BANK0      2     2      0
                           _gyro_cal
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    1384
                                              2 BANK0      3     1      2
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (2) _gyro_cal                                             6     6      0    2888
                                             18 BANK0      6     6      0
                            ___aldiv
                            ___awmod
                        _read_sensor
                   _reset_timer_loop
 ---------------------------------------------------------------------------------
 (1) _reset_timer_loop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_sensor                                          1     1      0    1160
                                             17 BANK0      1     1      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                            10     8      2    1160
                                              7 BANK0     10     8      2
                      _i2c_read_byte
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _nack                                                 2     0      2       0
                                              0 BANK0      2     0      2
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_write_byte                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_byte                                        7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     985
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _calculate_pid                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _battery_compensation                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _balance_drone                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _remote                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _balance_drone
   _battery_compensation
   _calculate_pid
   _gyro_config
     _gyro_cal
       ___aldiv
       ___awmod
       _read_sensor
         _i2c_read
           _i2c_read_byte
           _i2c_restart
           _i2c_start
           _i2c_stop
           _i2c_write_byte
           _nack
             _i2c_stop
       _reset_timer_loop
     _i2c_write
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _pic_init
   _read_sensor
     _i2c_read
       _i2c_read_byte
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _reset_timer_loop

 _remote (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      8       E       7       17.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      64      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      64      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Apr 24 23:37:08 2022

                            _p 004F                             l93 025F                             l94 028B  
                           l95 02B7                             l87 0205                             l88 0212  
                           l89 021F                            l302 06D4                            l304 06D8  
                          l320 0737                            l312 072A                            l305 06DE  
                          l321 0739                            l314 072E                            l315 0730  
                          l331 0721                            l340 0747                            l324 0700  
                          l333 0725                            l309 071E                            l350 06F7  
                          l318 0733                            l326 0704                            l334 0727  
                          l262 0580                            l343 0748                            l328 070C  
                          l272 0506                            l264 0584                            l337 0740  
                          l265 05D9                            l346 06E1                            l282 03EF  
                          l507 0403                            l348 06E5                            l292 0578  
                          l268 0630                            l517 047F                            l286 06BB  
                          l608 0684                            l299 06C0                            _ch1 00AC  
                          _ch2 00AA                            _ch3 002E                            _ch4 002C  
                 ___awmod@sign 0056                            wreg 0009        __size_of_i2c_write_byte 0015  
                         l2000 0412                           l2010 0434                           l2002 0416  
                         l2020 045A                           l2012 0438                           l2004 041E  
                         l2100 031A                           l2022 0461                           l2014 043F  
                         l2006 0426                           l2110 0388                           l2102 032B  
                         l2016 0451                           l2008 0429                           l2024 0467  
                         l2040 063E                           l2032 0631                           l2112 0399  
                         l2104 035F                           l2120 058C                           l2200 0115  
                         l2026 046C                           l2018 0459                           l2050 0655  
                         l2042 0642                           l2034 0633                           l2114 03EE  
                         l2106 0372                           l2130 0598                           l2122 058E  
                         l2210 0134                           l2202 0118                           l2028 0477  
                         l2060 0670                           l2052 0659                           l2044 0647  
                         l2036 0637                           l2108 037E                           l2140 05A3  
                         l2132 059B                           l2124 058F                           l2116 0579  
                         l2220 0157                           l2212 0139                           l2204 011E  
                         l2054 065D                           l2046 064D                           l2062 0676  
                         l2038 063C                           l2070 0687                           l2150 05AE  
                         l2142 05A7                           l2134 059D                           l2126 0593  
                         l2118 0589                           l2230 017E                           l2222 0160  
                         l2214 0142                           l2206 012E                           l2064 067B  
                         l2056 0667                           l2048 0650                           l2072 068A  
                         l2160 05BC                           l2152 05B2                           l2144 05A9  
                         l2136 059F                           l2128 0596                           l2240 0191  
                         l2232 0187                           l2224 0169                           l2216 014B  
                         l2208 0132                           l2066 0680                           l2058 066B  
                         l2090 0314                           l2082 06A9                           l2074 068F  
                         l2170 05C9                           l2162 05BE                           l2154 05B4  
                         l2146 05AA                           l2138 05A1                           l2250 01C7  
                         l2242 0194                           l2234 0188                           l2226 016F  
                         l2218 0151                           l2092 0315                           l2180 05D8  
                         l2172 05CD                           l2164 05C2                           l2156 05B7  
                         l2148 05AC                           l2260 020E                           l2252 01EA  
                         l2244 01A5                           l2236 018B                           l2228 0175  
                         l2086 06B8                           l2078 069A                           l2182 05DA  
                         l2174 05CE                           l2166 05C3                           l2158 05B9  
                         l2270 0259                           l2262 021B                           l2254 01F1  
                         l2246 01BB                           l2238 018E                           l2190 0106  
                         l2184 06DF                           l2088 02FB                           l2176 05D2  
                         l2168 05C7                           l2272 0285                           l2264 0228  
                         l2280 02E9                           l2248 01C1                           l2256 01F8  
                         l2192 0109                           l2186 06E7                           l2098 0317  
                         l2178 05D4                           l2282 02F2                           l2274 02B1  
                         l2266 022C                           l2258 0201                           l2194 010B  
                         l2188 06F5                           l2276 02DD                           l2268 0233  
                         l2196 010D                           l1910 06FC                           l2278 02E3  
                         l2198 0112                           l1912 070B                           l1904 071F  
                         l1930 06C4                           l1906 0728                           l1922 071B  
                         l1914 070D                           l1932 06CC                           l1908 06FA  
                         l1916 0712                           l1934 06CD                           l1926 0731  
                         l1918 0715                           l1942 0509                           l1936 06D3  
                         l1928 06BE                           l1960 0530                           l1952 051E  
                         l1944 050C                           l1938 06DA                           l1970 0553  
                         l1962 0536                           l1946 0511                           l1980 056B  
                         l1972 0556                           l1948 051B                           l1974 055D  
                         l1958 052D                           l1990 04FA                           l1992 03F0  
                         l1968 0541                           l1984 073A                           l1994 03F2  
                         l1986 0480                           l1996 03F6                           l1988 04F6  
                         l1998 0407                           u2000 06A8                           u2001 06A7  
                         u2010 06B7                           u2011 06B6                           u2100 06F5  
                         u2020 032B                           u2101 06F4                           u2021 032A  
                         u2030 0372                           u2110 011E                           u2031 0371  
                         u2111 011D                           u2040 037C                           u2200 0187  
                         u2120 0139                           u2041 0379                           u2025 0327  
                         u2201 0186                           u2121 0138                           u2210 01C1  
                         u2130 0142                           u2211 01C0                           u2131 0141  
                         u2060 0388                           u2300 02B1                           u2220 01EA  
                         u2140 014B                           u2061 0387                           u2301 02B0  
                         u2221 01E9                           u2141 014A                           u2070 0399  
                         u2054 037E                           u2310 02DD                           u2230 01F1  
                         u2150 0157                           u2071 0398                           u2311 02DC  
                         u2231 01F0                           u2151 0156                           u2080 0584  
                         u2320 02E9                           u2240 0201                           u2160 0160  
                         u2081 0583                           u2321 02E8                           u2305 02AD  
                         u2241 0200                           u2161 015F                           u2090 06E5  
                         u2330 02F2                           u2250 020E                           u2170 0169  
                         u2091 06E4                           u2075 0395                           u2331 02F1  
                         u2315 02D9                           u2251 020D                           u2171 0168  
                         u1700 070B                           u2340 02F8                           u2260 021B  
                         u2180 0175                           u1701 070A                           u2341 02F7  
                         u2261 021A                           u2181 0174                           u1710 0712  
                         u2270 0228                           u2190 017E                           u1711 0711  
                         u2271 0227                           u2191 017D                           u1800 03F6  
                         u1720 0737                           u2280 0259                           u1801 03F5  
                         u1721 0736                           u2281 0258                           u1810 0407  
                         u1730 06C4                           u2290 0285                           u1811 0406  
                         u1731 06C3                           u2291 0284                           u1820 0426  
                         u1900 0637                           u1740 06D8                           u1821 0425  
                         u1901 0636                           u1741 06D7                           u2285 0255  
                         u1910 0642                           u1670 0725                           u1750 051B  
                         u1911 0641                           u1671 0724                           u1751 051A  
                         u2295 0281                           u1840 0438                           u1920 064D  
                         u1680 072E                           u1760 052C                           u1841 0437  
                         u1921 064C                           u1681 072D                           u1761 052B  
                         u1690 0704                           u1770 0540                           u1835 042A  
                         u1691 0703                           u1771 053F                           u1860 0451  
                         u1940 065D                           u1780 055D                           u1861 0450  
                         u1941 065C                           u1781 055C                           u1950 0667  
                         u1790 04FA                           u1855 0439                           u1951 0666  
                         u1935 0651                           u1791 04F9                           u1880 0467  
                         u1881 0466                           u1865 044D                           u1890 046C  
                         u1970 0676                           u1891 046B                           u1875 045B  
                         u1971 0675                           u1955 0663                           u1980 067B  
                         u1981 067A                           u1965 066C                           u1990 0699  
                         u1991 0698                           _RCEN 10B3                           _TMR0 0015  
                         _TMR1 0016                           _TMR2 001A                           _accx 004C  
                         _accy 004A                           _accz 0048                           _esc1 003A  
                         _esc2 0038                           _esc3 0036                           _esc4 0034  
                _i2c_read_byte 06BC                           _nack 070D                           _main 0106  
                         _magx 0040                           _magy 003E                           _magz 003C  
                         fsr0h 0005                           indf0 0000                           fsr0l 0004  
                         btemp 007E                           start 00EB                  ??_i2c_restart 0050  
              __end_of___aldiv 0480       __end_of_reset_timer_loop 0741                          ?_nack 0050  
                        ?_main 0076                __end_of___awmod 0685                          _IOCCF 0399  
                        _IOCCN 0398                          _IOCCP 0397                    i2c_read@low 005C  
                        _T2RST 001F                          i1l371 00DA                          i1l363 0070  
                        i1l374 00E9                          i1l367 00A0                          i1l359 0042  
                        _TMR0H 0032                          _TMR2H 0072                          _TMR3H 0494  
                        _TMR3L 0493                          _TMR5H 049B                          _TMR5L 049A  
                        _PORTA 000C                          _TRISA 008C                          _TRISB 008D  
                        _TRISC 008E         ??_battery_compensation 0050                          _count 0074  
                 ?_read_sensor 0076                          _gyrox 0046                          _gyroy 0044  
                        _gyroz 0042                          _start 004E                 ?_i2c_read_byte 0050  
                        status 0003                          wtemp0 007E                __initialization 00ED  
                 __end_of_nack 071F                   __end_of_main 02FB               __end_of_i2c_read 0579  
             __end_of_i2c_stop 0728            __end_of_i2c_restart 073A                         ??_nack 0052  
                       ??_main 00A0                         _ADRESH 009C                         _ADRESL 009B  
                       _ANSELA 018C                         _ANSELB 018D                         _ANSELC 018E  
                 ?_gyro_config 0076                   i2c_read@high 005E                         _RB4PPS 0E9C  
                       _RB6PPS 0E9E                         i1l1800 0028                         i1l1810 003F  
                       i1l1802 0029                         i1l1900 00E6                         i1l1812 0043  
                       i1l1804 0032                         i1l1820 004D                         i1l1902 00E8  
                       i1l1830 005F                         i1l1822 0052                         i1l1814 0045  
                       i1l1806 0039                         i1l1840 0078                         i1l1832 0066  
                       i1l1824 0057                         i1l1816 004A                         i1l1808 003E  
                       i1l1850 0082                         i1l1842 0079                         i1l1834 006D  
                       i1l1826 0059                         i1l1818 004B                         i1l1860 0096  
                       i1l1852 0087                         i1l1844 007A                         i1l1836 0072  
                       i1l1828 005E                         i1l1870 00A9                         i1l1862 009D  
                       i1l1854 0089                         i1l1846 007B                         i1l1838 0076  
                       i1l1790 0015                         i1l1782 0006                         i1l1880 00B7  
                       i1l1872 00AA                         i1l1864 00A2                         i1l1856 008E  
                       i1l1848 007D                         i1l1792 0019                         i1l1784 000A  
                       i1l1890 00DC                         i1l1882 00BC                         i1l1866 00A6  
                       i1l1858 008F                         i1l1874 00AC                         i1l1794 001A  
                       i1l1786 000F                         i1l1892 00E0                         i1l1884 00BD  
                       i1l1876 00B1                         i1l1868 00A8                         i1l1796 001E  
                       i1l1788 0010                         i1l1894 00E2                         i1l1886 00C6  
                       i1l1878 00B6                         i1l1798 0023                         i1l1896 00E4  
                       i1l1888 00D7                         i1l1898 00E5                         u160_20 0066  
                       u152_20 000A                         u160_21 0065                         u152_21 0009  
                       u161_20 0082                         u153_20 0015                         u161_21 0081  
                       u153_21 0014                         u162_20 0087                         u154_20 001E  
                       u162_21 0086                         u154_21 001D                         u163_20 0096  
                       u155_20 0023                         u163_21 0095                         u155_21 0022  
                       u164_20 00B1                         u156_20 0028                         u164_21 00B0  
                       u156_21 0027                         u165_20 00B6                         u157_20 0032  
                       u165_21 00B5                         u157_21 0031                         u166_20 00C6  
                       u158_20 0052                         u166_21 00C5                         u158_21 0051  
                       u159_20 0057                         u159_21 0056             __size_of_i2c_start 0009  
           __size_of_i2c_write 0037                      ??___aldiv 0058                      ??___awmod 0054  
              ___awmod@divisor 0050               __end_of_pic_init 05DA                         _remote 0004  
              ___awmod@counter 0055         __size_of_balance_drone 0001               __end_of_gyro_cal 03F0  
               _i2c_write_byte 06F8                ??_i2c_read_byte 0052        __end_of__initialization 0102  
               __pcstackCOMMON 0076                    _i2c_restart 0731              __end_of_i2c_start 0731  
            __end_of_i2c_write 06BC                 _OPTION_REGbits 0095         __end_of_i2c_write_byte 070D  
                   __pbssBANK0 0020                     __pbssBANK1 00A8           __size_of_read_sensor 0087  
                    ?_i2c_read 0057                      ?_i2c_stop 0076                  _balance_drone 0748  
                   __pmaintext 0106                     __pintentry 0004                        ?_remote 0076  
            ?_reset_timer_loop 0076         __size_of_calculate_pid 0001                ?_i2c_write_byte 0076  
           ??_reset_timer_loop 0050                        _SSP1ADD 0212                        _SSP1BUF 0211  
        i2c_write_byte@address 0050                     ??_i2c_read 0059                     ??_i2c_stop 0050  
               ?_balance_drone 0076           __size_of_gyro_config 0057                      ?_pic_init 0076  
                    ?_gyro_cal 0076                        ___aldiv 03F0                        ___awmod 0631  
              i2c_read@address 0060                __size_of_remote 00E7                        __ptext1 0579  
                      __ptext2 05DA                        __ptext3 0685                        __ptext4 02FB  
                      __ptext5 073A                        __ptext6 0480                        __ptext7 0507  
                      __ptext8 070D                        __ptext9 071F                      _T1CONbits 0018  
                    _T2CONbits 001C                      _T3CONbits 0495               ___awmod@dividend 0052  
             ___aldiv@dividend 0054                      _T2HLTbits 001D                      _T5CONbits 049C  
                    _IOCCFbits 0399                        _tmrLoop 0030  __size_of_battery_compensation 0019  
                      clrloop0 0742                        _voltage 0070           end_of_initialization 0102  
                   ??_pic_init 0050                  _calculate_pid 0747                     ??_gyro_cal 0062  
             ___aldiv@quotient 005B                      _SSPDATPPS 0E21                      _SSPCLKPPS 0E20  
                i2c_write@data 0053                ??_balance_drone 0050                 ?_calculate_pid 0076  
                 ?_i2c_restart 0076             i2c_read@subaddress 0057                 __end_of_remote 00EB  
          start_initialization 00ED                      _i2c_start 0728                      _i2c_write 0685  
        __end_of_i2c_read_byte 06DF              __size_of_i2c_read 0072              __size_of_i2c_stop 0009  
             ??_i2c_write_byte 0050                       ??_remote 0076                    __pbssCOMMON 0070  
                    ___latbits 0002                  __pcstackBANK0 0050                  __pcstackBANK1 00A0  
                   ?_i2c_start 0076                     ?_i2c_write 0052                  ??_read_sensor 0061  
              ??_calculate_pid 0050      __size_of_reset_timer_loop 0007              __size_of_pic_init 0061  
                     ?___aldiv 0050              __size_of_gyro_cal 00F5                       ?___awmod 0050  
                     _T2CLKCON 001E                  ??_gyro_config 0068                ___aldiv@divisor 0050  
              ___aldiv@counter 0059                       _LATCbits 010E            __end_of_read_sensor 0507  
                    clear_ram0 0741                      _gyroX_cal 0028                      _gyroY_cal 0024  
                    _gyroZ_cal 0020                       _PIE1bits 0090                       _PIR1bits 0010  
 __end_of_battery_compensation 06F8           __size_of_i2c_restart 0009                     _ADCON0bits 009D  
                   _ADCON1bits 009E                    ??_i2c_start 0050                    ??_i2c_write 0054  
                     _i2c_read 0507                       _i2c_stop 071F            __end_of_gyro_config 0631  
             __size_of___aldiv 0090               __size_of___awmod 0054                       __ptext10 06F8  
                     __ptext11 0728                       __ptext12 0731                       __ptext13 06BC  
                     __ptext14 0631                       __ptext15 03F0                       __ptext16 0747  
                     __ptext17 06DF                       __ptext18 0748                   _SSP1CON1bits 0215  
                 _SSP1CON2bits 0216                    _read_sensor 0480                      gyro_cal@x 0066  
        __end_of_balance_drone 0749               _reset_timer_loop 073A                  __size_of_nack 0012  
                __size_of_main 01F5                       _pic_init 0579                       _gyro_cal 02FB  
                     _setpoint 00A8                       int$flags 007E                     _ODCONBbits 028D  
                 _SSP1STATbits 0214                    _OSCSTATbits 009A                     _INTCONbits 000B  
         _battery_compensation 06DF                    _gyro_config 05DA                       intlevel1 0000  
          i2c_write@subaddress 0052                    _SSP1CONbits 0215                     _OSCCONbits 0099  
       __size_of_i2c_read_byte 0023               i2c_write@address 0054                   ___aldiv@sign 005A  
                  _SSPCON2bits 0216          ?_battery_compensation 0076              i2c_read_byte@temp 0055  
        __end_of_calculate_pid 0748               i2c_read_byte@ack 0054  
