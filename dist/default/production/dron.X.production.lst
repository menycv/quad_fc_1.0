

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Apr 20 20:28:44 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F1619 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011C                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018E                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  0211                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  028C                     	;# 
   186  028D                     	;# 
   187  028E                     	;# 
   188  0291                     	;# 
   189  0291                     	;# 
   190  0292                     	;# 
   191  0293                     	;# 
   192  0294                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029E                     	;# 
   199  030C                     	;# 
   200  030D                     	;# 
   201  030E                     	;# 
   202  038C                     	;# 
   203  038D                     	;# 
   204  038E                     	;# 
   205  0391                     	;# 
   206  0392                     	;# 
   207  0393                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  0397                     	;# 
   212  0398                     	;# 
   213  0399                     	;# 
   214  040E                     	;# 
   215  0413                     	;# 
   216  0413                     	;# 
   217  0414                     	;# 
   218  0414                     	;# 
   219  0415                     	;# 
   220  0416                     	;# 
   221  0417                     	;# 
   222  0418                     	;# 
   223  041A                     	;# 
   224  041A                     	;# 
   225  041B                     	;# 
   226  041B                     	;# 
   227  041C                     	;# 
   228  041D                     	;# 
   229  041E                     	;# 
   230  041F                     	;# 
   231  0493                     	;# 
   232  0494                     	;# 
   233  0495                     	;# 
   234  0496                     	;# 
   235  049A                     	;# 
   236  049B                     	;# 
   237  049C                     	;# 
   238  049D                     	;# 
   239  058C                     	;# 
   240  058C                     	;# 
   241  058D                     	;# 
   242  058E                     	;# 
   243  058E                     	;# 
   244  058F                     	;# 
   245  0590                     	;# 
   246  0590                     	;# 
   247  0591                     	;# 
   248  0592                     	;# 
   249  0592                     	;# 
   250  0593                     	;# 
   251  0594                     	;# 
   252  0594                     	;# 
   253  0595                     	;# 
   254  0596                     	;# 
   255  0596                     	;# 
   256  0597                     	;# 
   257  0598                     	;# 
   258  0599                     	;# 
   259  059A                     	;# 
   260  059B                     	;# 
   261  059B                     	;# 
   262  059C                     	;# 
   263  059D                     	;# 
   264  060C                     	;# 
   265  060C                     	;# 
   266  060D                     	;# 
   267  060E                     	;# 
   268  060F                     	;# 
   269  060F                     	;# 
   270  0610                     	;# 
   271  0611                     	;# 
   272  0612                     	;# 
   273  0613                     	;# 
   274  0614                     	;# 
   275  0617                     	;# 
   276  0617                     	;# 
   277  0618                     	;# 
   278  0619                     	;# 
   279  061A                     	;# 
   280  061A                     	;# 
   281  061B                     	;# 
   282  061C                     	;# 
   283  0691                     	;# 
   284  0692                     	;# 
   285  0693                     	;# 
   286  0694                     	;# 
   287  0695                     	;# 
   288  0696                     	;# 
   289  0697                     	;# 
   290  0699                     	;# 
   291  069A                     	;# 
   292  0711                     	;# 
   293  0712                     	;# 
   294  0713                     	;# 
   295  0714                     	;# 
   296  0715                     	;# 
   297  0718                     	;# 
   298  0718                     	;# 
   299  0719                     	;# 
   300  071A                     	;# 
   301  071A                     	;# 
   302  071B                     	;# 
   303  071C                     	;# 
   304  071D                     	;# 
   305  0791                     	;# 
   306  0791                     	;# 
   307  0792                     	;# 
   308  0793                     	;# 
   309  0793                     	;# 
   310  0794                     	;# 
   311  0795                     	;# 
   312  0795                     	;# 
   313  0796                     	;# 
   314  0797                     	;# 
   315  0797                     	;# 
   316  0798                     	;# 
   317  0799                     	;# 
   318  079A                     	;# 
   319  080C                     	;# 
   320  080C                     	;# 
   321  080D                     	;# 
   322  080E                     	;# 
   323  080E                     	;# 
   324  080F                     	;# 
   325  0810                     	;# 
   326  0810                     	;# 
   327  0811                     	;# 
   328  0812                     	;# 
   329  0812                     	;# 
   330  0813                     	;# 
   331  0814                     	;# 
   332  0815                     	;# 
   333  0816                     	;# 
   334  0817                     	;# 
   335  0818                     	;# 
   336  0819                     	;# 
   337  081A                     	;# 
   338  081A                     	;# 
   339  081B                     	;# 
   340  081C                     	;# 
   341  081C                     	;# 
   342  081D                     	;# 
   343  088C                     	;# 
   344  088D                     	;# 
   345  088E                     	;# 
   346  088F                     	;# 
   347  088F                     	;# 
   348  0890                     	;# 
   349  0891                     	;# 
   350  0892                     	;# 
   351  0893                     	;# 
   352  0893                     	;# 
   353  0894                     	;# 
   354  0895                     	;# 
   355  0896                     	;# 
   356  0897                     	;# 
   357  0897                     	;# 
   358  0898                     	;# 
   359  0899                     	;# 
   360  0D8C                     	;# 
   361  0D8C                     	;# 
   362  0D8D                     	;# 
   363  0D8E                     	;# 
   364  0D8F                     	;# 
   365  0D8F                     	;# 
   366  0D90                     	;# 
   367  0D91                     	;# 
   368  0D92                     	;# 
   369  0D92                     	;# 
   370  0D93                     	;# 
   371  0D94                     	;# 
   372  0D95                     	;# 
   373  0D95                     	;# 
   374  0D96                     	;# 
   375  0D97                     	;# 
   376  0D98                     	;# 
   377  0D99                     	;# 
   378  0D9A                     	;# 
   379  0D9B                     	;# 
   380  0D9C                     	;# 
   381  0D9D                     	;# 
   382  0D9E                     	;# 
   383  0D9E                     	;# 
   384  0D9F                     	;# 
   385  0DA0                     	;# 
   386  0DA1                     	;# 
   387  0DA1                     	;# 
   388  0DA2                     	;# 
   389  0DA3                     	;# 
   390  0DA4                     	;# 
   391  0DA4                     	;# 
   392  0DA5                     	;# 
   393  0DA6                     	;# 
   394  0DA7                     	;# 
   395  0DA7                     	;# 
   396  0DA8                     	;# 
   397  0DA9                     	;# 
   398  0DAA                     	;# 
   399  0DAB                     	;# 
   400  0DAC                     	;# 
   401  0DAD                     	;# 
   402  0DAE                     	;# 
   403  0DAF                     	;# 
   404  0E0F                     	;# 
   405  0E10                     	;# 
   406  0E11                     	;# 
   407  0E12                     	;# 
   408  0E13                     	;# 
   409  0E14                     	;# 
   410  0E15                     	;# 
   411  0E16                     	;# 
   412  0E17                     	;# 
   413  0E18                     	;# 
   414  0E19                     	;# 
   415  0E1A                     	;# 
   416  0E1B                     	;# 
   417  0E1C                     	;# 
   418  0E1D                     	;# 
   419  0E1E                     	;# 
   420  0E1F                     	;# 
   421  0E20                     	;# 
   422  0E21                     	;# 
   423  0E22                     	;# 
   424  0E23                     	;# 
   425  0E24                     	;# 
   426  0E25                     	;# 
   427  0E26                     	;# 
   428  0E27                     	;# 
   429  0E28                     	;# 
   430  0E29                     	;# 
   431  0E2A                     	;# 
   432  0E2B                     	;# 
   433  0E2C                     	;# 
   434  0E2D                     	;# 
   435  0E2E                     	;# 
   436  0E90                     	;# 
   437  0E91                     	;# 
   438  0E92                     	;# 
   439  0E94                     	;# 
   440  0E95                     	;# 
   441  0E9C                     	;# 
   442  0E9D                     	;# 
   443  0E9E                     	;# 
   444  0E9F                     	;# 
   445  0EA0                     	;# 
   446  0EA1                     	;# 
   447  0EA2                     	;# 
   448  0EA3                     	;# 
   449  0EA4                     	;# 
   450  0EA5                     	;# 
   451  0EA6                     	;# 
   452  0EA7                     	;# 
   453  0F0F                     	;# 
   454  0F10                     	;# 
   455  0F11                     	;# 
   456  0F12                     	;# 
   457  0F13                     	;# 
   458  0F14                     	;# 
   459  0F15                     	;# 
   460  0F16                     	;# 
   461  0F17                     	;# 
   462  0F18                     	;# 
   463  0F19                     	;# 
   464  0F1A                     	;# 
   465  0F1B                     	;# 
   466  0F1C                     	;# 
   467  0F1D                     	;# 
   468  0F1E                     	;# 
   469  0F1F                     	;# 
   470  0F20                     	;# 
   471  0F21                     	;# 
   472  0F22                     	;# 
   473  0F23                     	;# 
   474  0F24                     	;# 
   475  0F25                     	;# 
   476  0F26                     	;# 
   477  0F27                     	;# 
   478  0F28                     	;# 
   479  0F29                     	;# 
   480  0F2A                     	;# 
   481  0F2B                     	;# 
   482  0F2C                     	;# 
   483  0F2D                     	;# 
   484  0F2E                     	;# 
   485  0F2F                     	;# 
   486  0F30                     	;# 
   487  0F31                     	;# 
   488  0F32                     	;# 
   489  0F33                     	;# 
   490  0F34                     	;# 
   491  0F35                     	;# 
   492  0F36                     	;# 
   493  0F37                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  000E                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0013                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001D                     	;# 
   537  001E                     	;# 
   538  001F                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  008E                     	;# 
   542  0090                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0093                     	;# 
   546  0094                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0098                     	;# 
   550  0099                     	;# 
   551  009A                     	;# 
   552  009B                     	;# 
   553  009B                     	;# 
   554  009C                     	;# 
   555  009D                     	;# 
   556  009E                     	;# 
   557  009F                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  0111                     	;# 
   562  0112                     	;# 
   563  0113                     	;# 
   564  0114                     	;# 
   565  0115                     	;# 
   566  0116                     	;# 
   567  0117                     	;# 
   568  0118                     	;# 
   569  0119                     	;# 
   570  011C                     	;# 
   571  018C                     	;# 
   572  018D                     	;# 
   573  018E                     	;# 
   574  0191                     	;# 
   575  0191                     	;# 
   576  0192                     	;# 
   577  0193                     	;# 
   578  0193                     	;# 
   579  0194                     	;# 
   580  0195                     	;# 
   581  0196                     	;# 
   582  0197                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  0199                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019A                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019D                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  019F                     	;# 
   608  020C                     	;# 
   609  020D                     	;# 
   610  020E                     	;# 
   611  0211                     	;# 
   612  0211                     	;# 
   613  0212                     	;# 
   614  0212                     	;# 
   615  0213                     	;# 
   616  0213                     	;# 
   617  0214                     	;# 
   618  0214                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0216                     	;# 
   624  0216                     	;# 
   625  0217                     	;# 
   626  0217                     	;# 
   627  028C                     	;# 
   628  028D                     	;# 
   629  028E                     	;# 
   630  0291                     	;# 
   631  0291                     	;# 
   632  0292                     	;# 
   633  0293                     	;# 
   634  0294                     	;# 
   635  0298                     	;# 
   636  0298                     	;# 
   637  0299                     	;# 
   638  029A                     	;# 
   639  029B                     	;# 
   640  029E                     	;# 
   641  030C                     	;# 
   642  030D                     	;# 
   643  030E                     	;# 
   644  038C                     	;# 
   645  038D                     	;# 
   646  038E                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0397                     	;# 
   654  0398                     	;# 
   655  0399                     	;# 
   656  040E                     	;# 
   657  0413                     	;# 
   658  0413                     	;# 
   659  0414                     	;# 
   660  0414                     	;# 
   661  0415                     	;# 
   662  0416                     	;# 
   663  0417                     	;# 
   664  0418                     	;# 
   665  041A                     	;# 
   666  041A                     	;# 
   667  041B                     	;# 
   668  041B                     	;# 
   669  041C                     	;# 
   670  041D                     	;# 
   671  041E                     	;# 
   672  041F                     	;# 
   673  0493                     	;# 
   674  0494                     	;# 
   675  0495                     	;# 
   676  0496                     	;# 
   677  049A                     	;# 
   678  049B                     	;# 
   679  049C                     	;# 
   680  049D                     	;# 
   681  058C                     	;# 
   682  058C                     	;# 
   683  058D                     	;# 
   684  058E                     	;# 
   685  058E                     	;# 
   686  058F                     	;# 
   687  0590                     	;# 
   688  0590                     	;# 
   689  0591                     	;# 
   690  0592                     	;# 
   691  0592                     	;# 
   692  0593                     	;# 
   693  0594                     	;# 
   694  0594                     	;# 
   695  0595                     	;# 
   696  0596                     	;# 
   697  0596                     	;# 
   698  0597                     	;# 
   699  0598                     	;# 
   700  0599                     	;# 
   701  059A                     	;# 
   702  059B                     	;# 
   703  059B                     	;# 
   704  059C                     	;# 
   705  059D                     	;# 
   706  060C                     	;# 
   707  060C                     	;# 
   708  060D                     	;# 
   709  060E                     	;# 
   710  060F                     	;# 
   711  060F                     	;# 
   712  0610                     	;# 
   713  0611                     	;# 
   714  0612                     	;# 
   715  0613                     	;# 
   716  0614                     	;# 
   717  0617                     	;# 
   718  0617                     	;# 
   719  0618                     	;# 
   720  0619                     	;# 
   721  061A                     	;# 
   722  061A                     	;# 
   723  061B                     	;# 
   724  061C                     	;# 
   725  0691                     	;# 
   726  0692                     	;# 
   727  0693                     	;# 
   728  0694                     	;# 
   729  0695                     	;# 
   730  0696                     	;# 
   731  0697                     	;# 
   732  0699                     	;# 
   733  069A                     	;# 
   734  0711                     	;# 
   735  0712                     	;# 
   736  0713                     	;# 
   737  0714                     	;# 
   738  0715                     	;# 
   739  0718                     	;# 
   740  0718                     	;# 
   741  0719                     	;# 
   742  071A                     	;# 
   743  071A                     	;# 
   744  071B                     	;# 
   745  071C                     	;# 
   746  071D                     	;# 
   747  0791                     	;# 
   748  0791                     	;# 
   749  0792                     	;# 
   750  0793                     	;# 
   751  0793                     	;# 
   752  0794                     	;# 
   753  0795                     	;# 
   754  0795                     	;# 
   755  0796                     	;# 
   756  0797                     	;# 
   757  0797                     	;# 
   758  0798                     	;# 
   759  0799                     	;# 
   760  079A                     	;# 
   761  080C                     	;# 
   762  080C                     	;# 
   763  080D                     	;# 
   764  080E                     	;# 
   765  080E                     	;# 
   766  080F                     	;# 
   767  0810                     	;# 
   768  0810                     	;# 
   769  0811                     	;# 
   770  0812                     	;# 
   771  0812                     	;# 
   772  0813                     	;# 
   773  0814                     	;# 
   774  0815                     	;# 
   775  0816                     	;# 
   776  0817                     	;# 
   777  0818                     	;# 
   778  0819                     	;# 
   779  081A                     	;# 
   780  081A                     	;# 
   781  081B                     	;# 
   782  081C                     	;# 
   783  081C                     	;# 
   784  081D                     	;# 
   785  088C                     	;# 
   786  088D                     	;# 
   787  088E                     	;# 
   788  088F                     	;# 
   789  088F                     	;# 
   790  0890                     	;# 
   791  0891                     	;# 
   792  0892                     	;# 
   793  0893                     	;# 
   794  0893                     	;# 
   795  0894                     	;# 
   796  0895                     	;# 
   797  0896                     	;# 
   798  0897                     	;# 
   799  0897                     	;# 
   800  0898                     	;# 
   801  0899                     	;# 
   802  0D8C                     	;# 
   803  0D8C                     	;# 
   804  0D8D                     	;# 
   805  0D8E                     	;# 
   806  0D8F                     	;# 
   807  0D8F                     	;# 
   808  0D90                     	;# 
   809  0D91                     	;# 
   810  0D92                     	;# 
   811  0D92                     	;# 
   812  0D93                     	;# 
   813  0D94                     	;# 
   814  0D95                     	;# 
   815  0D95                     	;# 
   816  0D96                     	;# 
   817  0D97                     	;# 
   818  0D98                     	;# 
   819  0D99                     	;# 
   820  0D9A                     	;# 
   821  0D9B                     	;# 
   822  0D9C                     	;# 
   823  0D9D                     	;# 
   824  0D9E                     	;# 
   825  0D9E                     	;# 
   826  0D9F                     	;# 
   827  0DA0                     	;# 
   828  0DA1                     	;# 
   829  0DA1                     	;# 
   830  0DA2                     	;# 
   831  0DA3                     	;# 
   832  0DA4                     	;# 
   833  0DA4                     	;# 
   834  0DA5                     	;# 
   835  0DA6                     	;# 
   836  0DA7                     	;# 
   837  0DA7                     	;# 
   838  0DA8                     	;# 
   839  0DA9                     	;# 
   840  0DAA                     	;# 
   841  0DAB                     	;# 
   842  0DAC                     	;# 
   843  0DAD                     	;# 
   844  0DAE                     	;# 
   845  0DAF                     	;# 
   846  0E0F                     	;# 
   847  0E10                     	;# 
   848  0E11                     	;# 
   849  0E12                     	;# 
   850  0E13                     	;# 
   851  0E14                     	;# 
   852  0E15                     	;# 
   853  0E16                     	;# 
   854  0E17                     	;# 
   855  0E18                     	;# 
   856  0E19                     	;# 
   857  0E1A                     	;# 
   858  0E1B                     	;# 
   859  0E1C                     	;# 
   860  0E1D                     	;# 
   861  0E1E                     	;# 
   862  0E1F                     	;# 
   863  0E20                     	;# 
   864  0E21                     	;# 
   865  0E22                     	;# 
   866  0E23                     	;# 
   867  0E24                     	;# 
   868  0E25                     	;# 
   869  0E26                     	;# 
   870  0E27                     	;# 
   871  0E28                     	;# 
   872  0E29                     	;# 
   873  0E2A                     	;# 
   874  0E2B                     	;# 
   875  0E2C                     	;# 
   876  0E2D                     	;# 
   877  0E2E                     	;# 
   878  0E90                     	;# 
   879  0E91                     	;# 
   880  0E92                     	;# 
   881  0E94                     	;# 
   882  0E95                     	;# 
   883  0E9C                     	;# 
   884  0E9D                     	;# 
   885  0E9E                     	;# 
   886  0E9F                     	;# 
   887  0EA0                     	;# 
   888  0EA1                     	;# 
   889  0EA2                     	;# 
   890  0EA3                     	;# 
   891  0EA4                     	;# 
   892  0EA5                     	;# 
   893  0EA6                     	;# 
   894  0EA7                     	;# 
   895  0F0F                     	;# 
   896  0F10                     	;# 
   897  0F11                     	;# 
   898  0F12                     	;# 
   899  0F13                     	;# 
   900  0F14                     	;# 
   901  0F15                     	;# 
   902  0F16                     	;# 
   903  0F17                     	;# 
   904  0F18                     	;# 
   905  0F19                     	;# 
   906  0F1A                     	;# 
   907  0F1B                     	;# 
   908  0F1C                     	;# 
   909  0F1D                     	;# 
   910  0F1E                     	;# 
   911  0F1F                     	;# 
   912  0F20                     	;# 
   913  0F21                     	;# 
   914  0F22                     	;# 
   915  0F23                     	;# 
   916  0F24                     	;# 
   917  0F25                     	;# 
   918  0F26                     	;# 
   919  0F27                     	;# 
   920  0F28                     	;# 
   921  0F29                     	;# 
   922  0F2A                     	;# 
   923  0F2B                     	;# 
   924  0F2C                     	;# 
   925  0F2D                     	;# 
   926  0F2E                     	;# 
   927  0F2F                     	;# 
   928  0F30                     	;# 
   929  0F31                     	;# 
   930  0F32                     	;# 
   931  0F33                     	;# 
   932  0F34                     	;# 
   933  0F35                     	;# 
   934  0F36                     	;# 
   935  0F37                     	;# 
   936  0FE4                     	;# 
   937  0FE5                     	;# 
   938  0FE6                     	;# 
   939  0FE7                     	;# 
   940  0FE8                     	;# 
   941  0FE9                     	;# 
   942  0FEA                     	;# 
   943  0FEB                     	;# 
   944  0FED                     	;# 
   945  0FEE                     	;# 
   946  0FEF                     	;# 
   947  0016                     _TMR1	set	22
   948  001A                     _TMR2	set	26
   949  0010                     _PIR1bits	set	16
   950  001F                     _T2RST	set	31
   951  001D                     _T2HLTbits	set	29
   952  001C                     _T2CONbits	set	28
   953  001E                     _T2CLKCON	set	30
   954  0018                     _T1CONbits	set	24
   955  000B                     _INTCONbits	set	11
   956  000C                     _PORTA	set	12
   957  0015                     _TMR0	set	21
   958  009B                     _ADRESL	set	155
   959  009C                     _ADRESH	set	156
   960  009E                     _ADCON1bits	set	158
   961  009D                     _ADCON0bits	set	157
   962  008E                     _TRISC	set	142
   963  008D                     _TRISB	set	141
   964  008C                     _TRISA	set	140
   965  0095                     _OPTION_REGbits	set	149
   966  0090                     _PIE1bits	set	144
   967  009A                     _OSCSTATbits	set	154
   968  0099                     _OSCCONbits	set	153
   969  010E                     _LATCbits	set	270
   970  018E                     _ANSELC	set	398
   971  018D                     _ANSELB	set	397
   972  018C                     _ANSELA	set	396
   973  0215                     _SSP1CON1bits	set	533
   974  0214                     _SSP1STATbits	set	532
   975  0216                     _SSPCON2bits	set	534
   976  0211                     _SSP1BUF	set	529
   977  0216                     _SSP1CON2bits	set	534
   978  0212                     _SSP1ADD	set	530
   979  0215                     _SSP1CONbits	set	533
   980  10B3                     _RCEN	set	4275
   981  028D                     _ODCONBbits	set	653
   982  0399                     _IOCCF	set	921
   983  0398                     _IOCCN	set	920
   984  0399                     _IOCCFbits	set	921
   985  0397                     _IOCCP	set	919
   986  049A                     _TMR5L	set	1178
   987  049B                     _TMR5H	set	1179
   988  0493                     _TMR3L	set	1171
   989  0494                     _TMR3H	set	1172
   990  049C                     _T5CONbits	set	1180
   991  0495                     _T3CONbits	set	1173
   992  0E20                     _SSPCLKPPS	set	3616
   993  0E21                     _SSPDATPPS	set	3617
   994  0E9E                     _RB6PPS	set	3742
   995  0E9C                     _RB4PPS	set	3740
   996                           
   997                           	psect	cinit
   998  00EA                     start_initialization:	
   999                           ; #config settings
  1000                           
  1001  00EA                     __initialization:
  1002                           
  1003                           ; Clear objects allocated to COMMON
  1004  00EA  01F0               	clrf	__pbssCOMMON& (0+127)
  1005  00EB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1006  00EC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1007  00ED  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1008  00EE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1009  00EF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1010                           
  1011                           ; Clear objects allocated to BANK0
  1012  00F0  3020               	movlw	low __pbssBANK0
  1013  00F1  0084               	movwf	4
  1014  00F2  3000               	movlw	high __pbssBANK0
  1015  00F3  0085               	movwf	5
  1016  00F4  3028               	movlw	40
  1017  00F5  3184  24F9  3180   	fcall	clear_ram0
  1018  00F8                     end_of_initialization:	
  1019                           ;End of C runtime variable initialization code
  1020                           
  1021  00F8                     __end_of__initialization:
  1022  00F8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1023  00F9  0020               	movlb	0
  1024  00FA  3180  28FC         	ljmp	_main	;jump to C main() function
  1025                           
  1026                           	psect	bssCOMMON
  1027  0070                     __pbssCOMMON:
  1028  0070                     _ch1:
  1029  0070                     	ds	2
  1030  0072                     _TMR2H:
  1031  0072                     	ds	2
  1032  0074                     _count:
  1033  0074                     	ds	2
  1034                           
  1035                           	psect	bssBANK0
  1036  0020                     __pbssBANK0:
  1037  0020                     _voltage:
  1038  0020                     	ds	2
  1039  0022                     _ch4:
  1040  0022                     	ds	2
  1041  0024                     _ch3:
  1042  0024                     	ds	2
  1043  0026                     _ch2:
  1044  0026                     	ds	2
  1045  0028                     _tmrLoop:
  1046  0028                     	ds	2
  1047  002A                     _TMR0H:
  1048  002A                     	ds	2
  1049  002C                     _esc4:
  1050  002C                     	ds	2
  1051  002E                     _esc3:
  1052  002E                     	ds	2
  1053  0030                     _esc2:
  1054  0030                     	ds	2
  1055  0032                     _esc1:
  1056  0032                     	ds	2
  1057  0034                     _magz:
  1058  0034                     	ds	2
  1059  0036                     _magy:
  1060  0036                     	ds	2
  1061  0038                     _magx:
  1062  0038                     	ds	2
  1063  003A                     _gyroz:
  1064  003A                     	ds	2
  1065  003C                     _gyroy:
  1066  003C                     	ds	2
  1067  003E                     _gyrox:
  1068  003E                     	ds	2
  1069  0040                     _accz:
  1070  0040                     	ds	2
  1071  0042                     _accy:
  1072  0042                     	ds	2
  1073  0044                     _accx:
  1074  0044                     	ds	2
  1075  0046                     _start:
  1076  0046                     	ds	1
  1077  0047                     _p:
  1078  0047                     	ds	1
  1079                           
  1080                           	psect	clrtext
  1081  04F9                     clear_ram0:	
  1082                           ;	Called with FSR0 containing the base address, and
  1083                           ;	WREG with the size to clear
  1084                           
  1085  04F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1086  04FA                     clrloop0:
  1087  04FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1088  04FB  3101               	addfsr 0,1
  1089  04FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1090  04FD  2CFA               	goto	clrloop0	;have we reached the end yet?
  1091  04FE  3400               	retlw	0	;all done for this memory range, return
  1092                           
  1093                           	psect	cstackCOMMON
  1094  0076                     __pcstackCOMMON:
  1095  0076                     ?_pic_init:
  1096  0076                     ?_gyro_config:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099  0076                     ?_read_sensor:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102  0076                     ?_calculate_pid:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0076                     ?_balance_drone:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0076                     ?_battery_compensation:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0076                     ?_i2c_start:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0076                     ?_i2c_write_byte:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0076                     ?_i2c_stop:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0076                     ?_i2c_restart:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0076                     ?_main:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0076                     ?_remote:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0076                     ??_remote:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x0
  1134  0076                     	ds	6
  1135                           
  1136                           	psect	cstackBANK0
  1137  0048                     __pcstackBANK0:
  1138  0048                     ??_pic_init:
  1139  0048                     ??_calculate_pid:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0048                     ??_balance_drone:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0048                     ??_battery_compensation:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0048                     ??_i2c_start:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0048                     ??_i2c_write_byte:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0048                     ??_i2c_stop:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0048                     ??_i2c_restart:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0048                     ?_nack:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0048                     ?_i2c_read_byte:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166  0048                     i2c_write_byte@address:	
  1167                           ; 2 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 1 bytes @ 0x0
  1171  0048                     	ds	2
  1172  004A                     ?_i2c_write:
  1173  004A                     ??_nack:	
  1174                           ; 1 bytes @ 0x2
  1175                           
  1176  004A                     ??_i2c_read_byte:	
  1177                           ; 1 bytes @ 0x2
  1178                           
  1179  004A                     i2c_write@subaddress:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182                           
  1183                           ; 1 bytes @ 0x2
  1184  004A                     	ds	1
  1185  004B                     i2c_write@data:
  1186                           
  1187                           ; 1 bytes @ 0x3
  1188  004B                     	ds	1
  1189  004C                     ??_i2c_write:
  1190  004C                     i2c_write@address:	
  1191                           ; 1 bytes @ 0x4
  1192                           
  1193  004C                     i2c_read_byte@ack:	
  1194                           ; 1 bytes @ 0x4
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0x4
  1198  004C                     	ds	1
  1199  004D                     ??_gyro_config:
  1200  004D                     i2c_read_byte@temp:	
  1201                           ; 1 bytes @ 0x5
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0x5
  1205  004D                     	ds	2
  1206  004F                     ?_i2c_read:
  1207  004F                     i2c_read@subaddress:	
  1208                           ; 2 bytes @ 0x7
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0x7
  1212  004F                     	ds	2
  1213  0051                     ??_i2c_read:
  1214                           
  1215                           ; 1 bytes @ 0x9
  1216  0051                     	ds	3
  1217  0054                     i2c_read@low:
  1218                           
  1219                           ; 2 bytes @ 0xC
  1220  0054                     	ds	2
  1221  0056                     i2c_read@high:
  1222                           
  1223                           ; 2 bytes @ 0xE
  1224  0056                     	ds	2
  1225  0058                     i2c_read@address:
  1226                           
  1227                           ; 1 bytes @ 0x10
  1228  0058                     	ds	1
  1229  0059                     ??_read_sensor:
  1230                           
  1231                           ; 1 bytes @ 0x11
  1232  0059                     	ds	1
  1233  005A                     ??_main:
  1234                           
  1235                           ; 1 bytes @ 0x12
  1236  005A                     	ds	8
  1237                           
  1238                           	psect	maintext
  1239  00FC                     __pmaintext:	
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 33 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0, pclath, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : B1F/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1261 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1262 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1263 ;;Total ram usage:        8 bytes
  1264 ;; Hardware stack levels required when called:    5
  1265 ;; This function calls:
  1266 ;;		_balance_drone
  1267 ;;		_battery_compensation
  1268 ;;		_calculate_pid
  1269 ;;		_gyro_config
  1270 ;;		_pic_init
  1271 ;;		_read_sensor
  1272 ;; This function is called by:
  1273 ;;		Startup code after reset
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _main
  1279  00FC                     _main:
  1280  00FC                     l1827:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1283                           
  1284                           
  1285                           ;main.c: 35:     pic_init();
  1286  00FC  3183  2397  3180   	fcall	_pic_init
  1287                           
  1288                           ;main.c: 36:     gyro_config();
  1289  00FF  3183  23F8  3180   	fcall	_gyro_config
  1290  0102                     l1829:
  1291                           
  1292                           ;main.c: 38:     start = 0;
  1293  0102  0020               	movlb	0	; select bank0
  1294  0103  01C6               	clrf	_start
  1295  0104                     l1831:
  1296                           
  1297                           ;main.c: 39:     LATCbits.LATC7 = 0;
  1298  0104  0022               	movlb	2	; select bank2
  1299  0105  138E               	bcf	14,7	;volatile
  1300  0106                     l1833:
  1301                           
  1302                           ;main.c: 40:     ch3 = 1000;
  1303  0106  30E8               	movlw	232
  1304  0107  0020               	movlb	0	; select bank0
  1305  0108  00A4               	movwf	_ch3
  1306  0109  3003               	movlw	3
  1307  010A  00A5               	movwf	_ch3+1
  1308  010B                     l1835:
  1309                           
  1310                           ;main.c: 43:         TMR0H = 0;
  1311  010B  01AA               	clrf	_TMR0H
  1312  010C  01AB               	clrf	_TMR0H+1
  1313  010D                     l1837:
  1314                           
  1315                           ;main.c: 44:         TMR0 = 0;
  1316  010D  0195               	clrf	21	;volatile
  1317  010E                     l1839:
  1318                           
  1319                           ;main.c: 45:         TMR0H = 0;
  1320  010E  01AA               	clrf	_TMR0H
  1321  010F  01AB               	clrf	_TMR0H+1
  1322  0110                     l1841:
  1323                           
  1324                           ;main.c: 47:         if(!start){
  1325  0110  0846               	movf	_start,w
  1326  0111  1D03               	btfss	3,2
  1327  0112  2914               	goto	u1301
  1328  0113  2915               	goto	u1300
  1329  0114                     u1301:
  1330  0114  292B               	goto	l1849
  1331  0115                     u1300:
  1332  0115                     l1843:
  1333                           
  1334                           ;main.c: 49:             esc1 = esc2 = esc3 = esc4 = 1000;
  1335  0115  30E8               	movlw	232
  1336  0116  00AC               	movwf	_esc4
  1337  0117  3003               	movlw	3
  1338  0118  00AD               	movwf	_esc4+1
  1339  0119  082D               	movf	_esc4+1,w
  1340  011A  00AF               	movwf	_esc3+1
  1341  011B  082C               	movf	_esc4,w
  1342  011C  00AE               	movwf	_esc3
  1343  011D  082F               	movf	_esc3+1,w
  1344  011E  00B1               	movwf	_esc2+1
  1345  011F  082E               	movf	_esc3,w
  1346  0120  00B0               	movwf	_esc2
  1347  0121  0831               	movf	_esc2+1,w
  1348  0122  00B3               	movwf	_esc1+1
  1349  0123  0830               	movf	_esc2,w
  1350  0124  00B2               	movwf	_esc1
  1351  0125                     l1845:
  1352                           
  1353                           ;main.c: 50:             p.p1 = p.p2 = p.p3 = p.p4 = 0;
  1354  0125  11C7               	bcf	_p,3
  1355  0126  1147               	bcf	_p,2
  1356  0127  10C7               	bcf	_p,1
  1357  0128  1047               	bcf	_p,0
  1358  0129                     l1847:
  1359                           
  1360                           ;main.c: 51:             start = 1;
  1361  0129  01C6               	clrf	_start
  1362  012A  0AC6               	incf	_start,f
  1363  012B                     l1849:
  1364                           
  1365                           ;main.c: 53:         if(start == 1 && ch4 > 1900 && ch3 < 1050){
  1366  012B  0346               	decf	_start,w
  1367  012C  1D03               	btfss	3,2
  1368  012D  292F               	goto	u1311
  1369  012E  2930               	goto	u1310
  1370  012F                     u1311:
  1371  012F  2946               	goto	l1857
  1372  0130                     u1310:
  1373  0130                     l1851:
  1374  0130  3007               	movlw	7
  1375  0131  0223               	subwf	_ch4+1,w
  1376  0132  306D               	movlw	109
  1377  0133  1903               	skipnz
  1378  0134  0222               	subwf	_ch4,w
  1379  0135  1C03               	skipc
  1380  0136  2938               	goto	u1321
  1381  0137  2939               	goto	u1320
  1382  0138                     u1321:
  1383  0138  2946               	goto	l1857
  1384  0139                     u1320:
  1385  0139                     l1853:
  1386  0139  3004               	movlw	4
  1387  013A  0225               	subwf	_ch3+1,w
  1388  013B  301A               	movlw	26
  1389  013C  1903               	skipnz
  1390  013D  0224               	subwf	_ch3,w
  1391  013E  1803               	skipnc
  1392  013F  2941               	goto	u1331
  1393  0140  2942               	goto	u1330
  1394  0141                     u1331:
  1395  0141  2946               	goto	l1857
  1396  0142                     u1330:
  1397  0142                     l1855:
  1398                           
  1399                           ;main.c: 54:             start = 2;
  1400  0142  3002               	movlw	2
  1401  0143  00DA               	movwf	??_main
  1402  0144  085A               	movf	??_main,w
  1403  0145  00C6               	movwf	_start
  1404  0146                     l1857:
  1405                           
  1406                           ;main.c: 57:         if(start == 2 && ch4 < 1600 && ch3 < 1050){
  1407  0146  3002               	movlw	2
  1408  0147  0646               	xorwf	_start,w
  1409  0148  1D03               	btfss	3,2
  1410  0149  294B               	goto	u1341
  1411  014A  294C               	goto	u1340
  1412  014B                     u1341:
  1413  014B  2964               	goto	l1867
  1414  014C                     u1340:
  1415  014C                     l1859:
  1416  014C  3006               	movlw	6
  1417  014D  0223               	subwf	_ch4+1,w
  1418  014E  3040               	movlw	64
  1419  014F  1903               	skipnz
  1420  0150  0222               	subwf	_ch4,w
  1421  0151  1803               	skipnc
  1422  0152  2954               	goto	u1351
  1423  0153  2955               	goto	u1350
  1424  0154                     u1351:
  1425  0154  2964               	goto	l1867
  1426  0155                     u1350:
  1427  0155                     l1861:
  1428  0155  3004               	movlw	4
  1429  0156  0225               	subwf	_ch3+1,w
  1430  0157  301A               	movlw	26
  1431  0158  1903               	skipnz
  1432  0159  0224               	subwf	_ch3,w
  1433  015A  1803               	skipnc
  1434  015B  295D               	goto	u1361
  1435  015C  295E               	goto	u1360
  1436  015D                     u1361:
  1437  015D  2964               	goto	l1867
  1438  015E                     u1360:
  1439  015E                     l1863:
  1440                           
  1441                           ;main.c: 58:             start = 3;
  1442  015E  3003               	movlw	3
  1443  015F  00DA               	movwf	??_main
  1444  0160  085A               	movf	??_main,w
  1445  0161  00C6               	movwf	_start
  1446  0162                     l1865:
  1447                           
  1448                           ;main.c: 59:             LATCbits.LATC7 = 1;
  1449  0162  0022               	movlb	2	; select bank2
  1450  0163  178E               	bsf	14,7	;volatile
  1451  0164                     l1867:
  1452                           
  1453                           ;main.c: 63:         if(start == 3 && ch4 < 1050 && ch3 < 1050){
  1454  0164  3003               	movlw	3
  1455  0165  0020               	movlb	0	; select bank0
  1456  0166  0646               	xorwf	_start,w
  1457  0167  1D03               	btfss	3,2
  1458  0168  296A               	goto	u1371
  1459  0169  296B               	goto	u1370
  1460  016A                     u1371:
  1461  016A  2980               	goto	l1877
  1462  016B                     u1370:
  1463  016B                     l1869:
  1464  016B  3004               	movlw	4
  1465  016C  0223               	subwf	_ch4+1,w
  1466  016D  301A               	movlw	26
  1467  016E  1903               	skipnz
  1468  016F  0222               	subwf	_ch4,w
  1469  0170  1803               	skipnc
  1470  0171  2973               	goto	u1381
  1471  0172  2974               	goto	u1380
  1472  0173                     u1381:
  1473  0173  2980               	goto	l1877
  1474  0174                     u1380:
  1475  0174                     l1871:
  1476  0174  3004               	movlw	4
  1477  0175  0225               	subwf	_ch3+1,w
  1478  0176  301A               	movlw	26
  1479  0177  1903               	skipnz
  1480  0178  0224               	subwf	_ch3,w
  1481  0179  1803               	skipnc
  1482  017A  297C               	goto	u1391
  1483  017B  297D               	goto	u1390
  1484  017C                     u1391:
  1485  017C  2980               	goto	l1877
  1486  017D                     u1390:
  1487  017D                     l1873:
  1488                           
  1489                           ;main.c: 64:             start = 0;
  1490  017D  01C6               	clrf	_start
  1491  017E                     l1875:
  1492                           
  1493                           ;main.c: 65:             LATCbits.LATC7 = 0;
  1494  017E  0022               	movlb	2	; select bank2
  1495  017F  138E               	bcf	14,7	;volatile
  1496  0180                     l1877:
  1497                           
  1498                           ;main.c: 69:         read_sensor();
  1499  0180  3182  22AE  3180   	fcall	_read_sensor
  1500  0183                     l1879:
  1501                           
  1502                           ;main.c: 70:         calculate_pid();
  1503  0183  3184  24FF  3180   	fcall	_calculate_pid
  1504  0186                     l1881:
  1505                           
  1506                           ;main.c: 71:         balance_drone();
  1507  0186  3185  2500  3180   	fcall	_balance_drone
  1508  0189                     l1883:
  1509                           
  1510                           ;main.c: 72:         battery_compensation();
  1511  0189  3184  24CD  3180   	fcall	_battery_compensation
  1512  018C                     l1885:
  1513                           
  1514                           ;main.c: 75:         esc1 = esc2 = esc3 = esc4 = ch3;
  1515  018C  0020               	movlb	0	; select bank0
  1516  018D  0825               	movf	_ch3+1,w
  1517  018E  00AD               	movwf	_esc4+1
  1518  018F  0824               	movf	_ch3,w
  1519  0190  00AC               	movwf	_esc4
  1520  0191  082D               	movf	_esc4+1,w
  1521  0192  00AF               	movwf	_esc3+1
  1522  0193  082C               	movf	_esc4,w
  1523  0194  00AE               	movwf	_esc3
  1524  0195  082F               	movf	_esc3+1,w
  1525  0196  00B1               	movwf	_esc2+1
  1526  0197  082E               	movf	_esc3,w
  1527  0198  00B0               	movwf	_esc2
  1528  0199  0831               	movf	_esc2+1,w
  1529  019A  00B3               	movwf	_esc1+1
  1530  019B  0830               	movf	_esc2,w
  1531  019C  00B2               	movwf	_esc1
  1532  019D                     l1887:
  1533                           
  1534                           ;main.c: 76:         tmrLoop = (TMR0H << 8) | TMR0;
  1535  019D  0815               	movf	21,w	;volatile
  1536  019E  00DA               	movwf	??_main
  1537  019F  01DB               	clrf	??_main+1
  1538  01A0  082A               	movf	_TMR0H,w
  1539  01A1  00DD               	movwf	??_main+3
  1540  01A2  01DC               	clrf	??_main+2
  1541  01A3  085A               	movf	??_main,w
  1542  01A4  045C               	iorwf	??_main+2,w
  1543  01A5  00DE               	movwf	??_main+4
  1544  01A6  085B               	movf	??_main+1,w
  1545  01A7  045D               	iorwf	??_main+3,w
  1546  01A8  00DF               	movwf	??_main+5
  1547  01A9  085E               	movf	??_main+4,w
  1548  01AA  00A8               	movwf	_tmrLoop
  1549  01AB  085F               	movf	??_main+5,w
  1550  01AC  00A9               	movwf	_tmrLoop+1
  1551  01AD                     l1889:
  1552                           
  1553                           ;main.c: 78:         if(start < 3){
  1554  01AD  3003               	movlw	3
  1555  01AE  0246               	subwf	_start,w
  1556  01AF  1803               	skipnc
  1557  01B0  29B2               	goto	u1401
  1558  01B1  29B3               	goto	u1400
  1559  01B2                     u1401:
  1560  01B2  29DD               	goto	l1899
  1561  01B3                     u1400:
  1562  01B3                     l1891:
  1563                           
  1564                           ;main.c: 79:             PORTA |= 0b00010111;
  1565  01B3  3017               	movlw	23
  1566  01B4  00DA               	movwf	??_main
  1567  01B5  085A               	movf	??_main,w
  1568  01B6  048C               	iorwf	12,f	;volatile
  1569  01B7                     l1893:	
  1570                           ;main.c: 80:             while((((TMR0H << 8) | TMR0) - tmrLoop) < 1000 || TMR0 < 0xE8);
  1571                           
  1572  01B7  0815               	movf	21,w	;volatile
  1573  01B8  00DA               	movwf	??_main
  1574  01B9  01DB               	clrf	??_main+1
  1575  01BA  082A               	movf	_TMR0H,w
  1576  01BB  00DD               	movwf	??_main+3
  1577  01BC  01DC               	clrf	??_main+2
  1578  01BD  085A               	movf	??_main,w
  1579  01BE  045C               	iorwf	??_main+2,w
  1580  01BF  00DE               	movwf	??_main+4
  1581  01C0  085B               	movf	??_main+1,w
  1582  01C1  045D               	iorwf	??_main+3,w
  1583  01C2  00DF               	movwf	??_main+5
  1584  01C3  0828               	movf	_tmrLoop,w
  1585  01C4  025E               	subwf	??_main+4,w
  1586  01C5  00E0               	movwf	??_main+6
  1587  01C6  0829               	movf	_tmrLoop+1,w
  1588  01C7  3B5F               	subwfb	??_main+5,w
  1589  01C8  00E1               	movwf	??_main+7
  1590  01C9  3003               	movlw	3
  1591  01CA  0261               	subwf	??_main+7,w
  1592  01CB  30E8               	movlw	232
  1593  01CC  1903               	skipnz
  1594  01CD  0260               	subwf	??_main+6,w
  1595  01CE  1C03               	skipc
  1596  01CF  29D1               	goto	u1411
  1597  01D0  29D2               	goto	u1410
  1598  01D1                     u1411:
  1599  01D1  29B7               	goto	l1893
  1600  01D2                     u1410:
  1601  01D2                     l1895:
  1602  01D2  30E8               	movlw	232
  1603  01D3  0215               	subwf	21,w	;volatile
  1604  01D4  1C03               	skipc
  1605  01D5  29D7               	goto	u1421
  1606  01D6  29D8               	goto	u1420
  1607  01D7                     u1421:
  1608  01D7  29B7               	goto	l1893
  1609  01D8                     u1420:
  1610  01D8                     l1897:
  1611                           
  1612                           ;main.c: 81:             PORTA &= 0b11101000;
  1613  01D8  30E8               	movlw	232
  1614  01D9  00DA               	movwf	??_main
  1615  01DA  085A               	movf	??_main,w
  1616  01DB  058C               	andwf	12,f	;volatile
  1617                           
  1618                           ;main.c: 82:         }
  1619  01DC  2A9C               	goto	l1923
  1620  01DD                     l1899:
  1621                           
  1622                           ;main.c: 85:             if(esc1 < 1200)esc1 = 1200;
  1623  01DD  3004               	movlw	4
  1624  01DE  0233               	subwf	_esc1+1,w
  1625  01DF  30B0               	movlw	176
  1626  01E0  1903               	skipnz
  1627  01E1  0232               	subwf	_esc1,w
  1628  01E2  1803               	skipnc
  1629  01E3  29E5               	goto	u1431
  1630  01E4  29E6               	goto	u1430
  1631  01E5                     u1431:
  1632  01E5  29EA               	goto	l83
  1633  01E6                     u1430:
  1634  01E6                     l1901:
  1635  01E6  30B0               	movlw	176
  1636  01E7  00B2               	movwf	_esc1
  1637  01E8  3004               	movlw	4
  1638  01E9  00B3               	movwf	_esc1+1
  1639  01EA                     l83:
  1640                           
  1641                           ;main.c: 86:             if(esc2 < 1200)esc2 = 1200;
  1642  01EA  3004               	movlw	4
  1643  01EB  0231               	subwf	_esc2+1,w
  1644  01EC  30B0               	movlw	176
  1645  01ED  1903               	skipnz
  1646  01EE  0230               	subwf	_esc2,w
  1647  01EF  1803               	skipnc
  1648  01F0  29F2               	goto	u1441
  1649  01F1  29F3               	goto	u1440
  1650  01F2                     u1441:
  1651  01F2  29F7               	goto	l84
  1652  01F3                     u1440:
  1653  01F3                     l1903:
  1654  01F3  30B0               	movlw	176
  1655  01F4  00B0               	movwf	_esc2
  1656  01F5  3004               	movlw	4
  1657  01F6  00B1               	movwf	_esc2+1
  1658  01F7                     l84:
  1659                           
  1660                           ;main.c: 87:             if(esc3 < 1200)esc3 = 1200;
  1661  01F7  3004               	movlw	4
  1662  01F8  022F               	subwf	_esc3+1,w
  1663  01F9  30B0               	movlw	176
  1664  01FA  1903               	skipnz
  1665  01FB  022E               	subwf	_esc3,w
  1666  01FC  1803               	skipnc
  1667  01FD  29FF               	goto	u1451
  1668  01FE  2A00               	goto	u1450
  1669  01FF                     u1451:
  1670  01FF  2A04               	goto	l85
  1671  0200                     u1450:
  1672  0200                     l1905:
  1673  0200  30B0               	movlw	176
  1674  0201  00AE               	movwf	_esc3
  1675  0202  3004               	movlw	4
  1676  0203  00AF               	movwf	_esc3+1
  1677  0204                     l85:
  1678                           
  1679                           ;main.c: 88:             if(esc4 < 1200)esc4 = 1200;
  1680  0204  3004               	movlw	4
  1681  0205  022D               	subwf	_esc4+1,w
  1682  0206  30B0               	movlw	176
  1683  0207  1903               	skipnz
  1684  0208  022C               	subwf	_esc4,w
  1685  0209  1803               	skipnc
  1686  020A  2A0C               	goto	u1461
  1687  020B  2A0D               	goto	u1460
  1688  020C                     u1461:
  1689  020C  2A11               	goto	l1909
  1690  020D                     u1460:
  1691  020D                     l1907:
  1692  020D  30B0               	movlw	176
  1693  020E  00AC               	movwf	_esc4
  1694  020F  3004               	movlw	4
  1695  0210  00AD               	movwf	_esc4+1
  1696  0211                     l1909:
  1697                           
  1698                           ;main.c: 89:             PORTA |= 0b00010111;
  1699  0211  3017               	movlw	23
  1700  0212  00DA               	movwf	??_main
  1701  0213  085A               	movf	??_main,w
  1702  0214  048C               	iorwf	12,f	;volatile
  1703                           
  1704                           ;main.c: 90:             while((PORTA & 0b00010111) > 0){
  1705  0215  2A96               	goto	l1921
  1706  0216                     l1911:
  1707                           
  1708                           ;main.c: 91:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc1)PORTA &= 0b1111
      +                          1110;
  1709  0216  0815               	movf	21,w	;volatile
  1710  0217  00DA               	movwf	??_main
  1711  0218  01DB               	clrf	??_main+1
  1712  0219  082A               	movf	_TMR0H,w
  1713  021A  00DD               	movwf	??_main+3
  1714  021B  01DC               	clrf	??_main+2
  1715  021C  085A               	movf	??_main,w
  1716  021D  045C               	iorwf	??_main+2,w
  1717  021E  00DE               	movwf	??_main+4
  1718  021F  085B               	movf	??_main+1,w
  1719  0220  045D               	iorwf	??_main+3,w
  1720  0221  00DF               	movwf	??_main+5
  1721  0222  0828               	movf	_tmrLoop,w
  1722  0223  025E               	subwf	??_main+4,w
  1723  0224  00E0               	movwf	??_main+6
  1724  0225  0829               	movf	_tmrLoop+1,w
  1725  0226  3B5F               	subwfb	??_main+5,w
  1726  0227  00E1               	movwf	??_main+7
  1727  0228  0861               	movf	??_main+7,w
  1728  0229  0233               	subwf	_esc1+1,w
  1729  022A  1D03               	skipz
  1730  022B  2A2E               	goto	u1475
  1731  022C  0860               	movf	??_main+6,w
  1732  022D  0232               	subwf	_esc1,w
  1733  022E                     u1475:
  1734  022E  1803               	skipnc
  1735  022F  2A31               	goto	u1471
  1736  0230  2A32               	goto	u1470
  1737  0231                     u1471:
  1738  0231  2A36               	goto	l89
  1739  0232                     u1470:
  1740  0232                     l1913:
  1741  0232  30FE               	movlw	254
  1742  0233  00DA               	movwf	??_main
  1743  0234  085A               	movf	??_main,w
  1744  0235  058C               	andwf	12,f	;volatile
  1745  0236                     l89:
  1746                           
  1747                           ;main.c: 92:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc2)PORTA &= 0b1111
      +                          1101;
  1748  0236  0815               	movf	21,w	;volatile
  1749  0237  00DA               	movwf	??_main
  1750  0238  01DB               	clrf	??_main+1
  1751  0239  082A               	movf	_TMR0H,w
  1752  023A  00DD               	movwf	??_main+3
  1753  023B  01DC               	clrf	??_main+2
  1754  023C  085A               	movf	??_main,w
  1755  023D  045C               	iorwf	??_main+2,w
  1756  023E  00DE               	movwf	??_main+4
  1757  023F  085B               	movf	??_main+1,w
  1758  0240  045D               	iorwf	??_main+3,w
  1759  0241  00DF               	movwf	??_main+5
  1760  0242  0828               	movf	_tmrLoop,w
  1761  0243  025E               	subwf	??_main+4,w
  1762  0244  00E0               	movwf	??_main+6
  1763  0245  0829               	movf	_tmrLoop+1,w
  1764  0246  3B5F               	subwfb	??_main+5,w
  1765  0247  00E1               	movwf	??_main+7
  1766  0248  0861               	movf	??_main+7,w
  1767  0249  0231               	subwf	_esc2+1,w
  1768  024A  1D03               	skipz
  1769  024B  2A4E               	goto	u1485
  1770  024C  0860               	movf	??_main+6,w
  1771  024D  0230               	subwf	_esc2,w
  1772  024E                     u1485:
  1773  024E  1803               	skipnc
  1774  024F  2A51               	goto	u1481
  1775  0250  2A52               	goto	u1480
  1776  0251                     u1481:
  1777  0251  2A56               	goto	l90
  1778  0252                     u1480:
  1779  0252                     l1915:
  1780  0252  30FD               	movlw	253
  1781  0253  00DA               	movwf	??_main
  1782  0254  085A               	movf	??_main,w
  1783  0255  058C               	andwf	12,f	;volatile
  1784  0256                     l90:
  1785                           
  1786                           ;main.c: 93:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc3)PORTA &= 0b1111
      +                          1011;
  1787  0256  0815               	movf	21,w	;volatile
  1788  0257  00DA               	movwf	??_main
  1789  0258  01DB               	clrf	??_main+1
  1790  0259  082A               	movf	_TMR0H,w
  1791  025A  00DD               	movwf	??_main+3
  1792  025B  01DC               	clrf	??_main+2
  1793  025C  085A               	movf	??_main,w
  1794  025D  045C               	iorwf	??_main+2,w
  1795  025E  00DE               	movwf	??_main+4
  1796  025F  085B               	movf	??_main+1,w
  1797  0260  045D               	iorwf	??_main+3,w
  1798  0261  00DF               	movwf	??_main+5
  1799  0262  0828               	movf	_tmrLoop,w
  1800  0263  025E               	subwf	??_main+4,w
  1801  0264  00E0               	movwf	??_main+6
  1802  0265  0829               	movf	_tmrLoop+1,w
  1803  0266  3B5F               	subwfb	??_main+5,w
  1804  0267  00E1               	movwf	??_main+7
  1805  0268  0861               	movf	??_main+7,w
  1806  0269  022F               	subwf	_esc3+1,w
  1807  026A  1D03               	skipz
  1808  026B  2A6E               	goto	u1495
  1809  026C  0860               	movf	??_main+6,w
  1810  026D  022E               	subwf	_esc3,w
  1811  026E                     u1495:
  1812  026E  1803               	skipnc
  1813  026F  2A71               	goto	u1491
  1814  0270  2A72               	goto	u1490
  1815  0271                     u1491:
  1816  0271  2A76               	goto	l91
  1817  0272                     u1490:
  1818  0272                     l1917:
  1819  0272  30FB               	movlw	251
  1820  0273  00DA               	movwf	??_main
  1821  0274  085A               	movf	??_main,w
  1822  0275  058C               	andwf	12,f	;volatile
  1823  0276                     l91:
  1824                           
  1825                           ;main.c: 94:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc4)PORTA &= 0b1110
      +                          1111;
  1826  0276  0815               	movf	21,w	;volatile
  1827  0277  00DA               	movwf	??_main
  1828  0278  01DB               	clrf	??_main+1
  1829  0279  082A               	movf	_TMR0H,w
  1830  027A  00DD               	movwf	??_main+3
  1831  027B  01DC               	clrf	??_main+2
  1832  027C  085A               	movf	??_main,w
  1833  027D  045C               	iorwf	??_main+2,w
  1834  027E  00DE               	movwf	??_main+4
  1835  027F  085B               	movf	??_main+1,w
  1836  0280  045D               	iorwf	??_main+3,w
  1837  0281  00DF               	movwf	??_main+5
  1838  0282  0828               	movf	_tmrLoop,w
  1839  0283  025E               	subwf	??_main+4,w
  1840  0284  00E0               	movwf	??_main+6
  1841  0285  0829               	movf	_tmrLoop+1,w
  1842  0286  3B5F               	subwfb	??_main+5,w
  1843  0287  00E1               	movwf	??_main+7
  1844  0288  0861               	movf	??_main+7,w
  1845  0289  022D               	subwf	_esc4+1,w
  1846  028A  1D03               	skipz
  1847  028B  2A8E               	goto	u1505
  1848  028C  0860               	movf	??_main+6,w
  1849  028D  022C               	subwf	_esc4,w
  1850  028E                     u1505:
  1851  028E  1803               	skipnc
  1852  028F  2A91               	goto	u1501
  1853  0290  2A92               	goto	u1500
  1854  0291                     u1501:
  1855  0291  2A96               	goto	l1921
  1856  0292                     u1500:
  1857  0292                     l1919:
  1858  0292  30EF               	movlw	239
  1859  0293  00DA               	movwf	??_main
  1860  0294  085A               	movf	??_main,w
  1861  0295  058C               	andwf	12,f	;volatile
  1862  0296                     l1921:
  1863                           
  1864                           ;main.c: 90:             while((PORTA & 0b00010111) > 0){
  1865  0296  080C               	movf	12,w	;volatile
  1866  0297  3917               	andlw	23
  1867  0298  1D03               	btfss	3,2
  1868  0299  2A9B               	goto	u1511
  1869  029A  2A9C               	goto	u1510
  1870  029B                     u1511:
  1871  029B  2A16               	goto	l1911
  1872  029C                     u1510:
  1873  029C                     l1923:
  1874  029C  3000               	movlw	0
  1875  029D  022B               	subwf	_TMR0H+1,w
  1876  029E  304E               	movlw	78
  1877  029F  1903               	skipnz
  1878  02A0  022A               	subwf	_TMR0H,w
  1879  02A1  1C03               	skipc
  1880  02A2  2AA4               	goto	u1521
  1881  02A3  2AA5               	goto	u1520
  1882  02A4                     u1521:
  1883  02A4  2A9C               	goto	l1923
  1884  02A5                     u1520:
  1885  02A5                     l1925:
  1886  02A5  3014               	movlw	20
  1887  02A6  0215               	subwf	21,w	;volatile
  1888  02A7  1C03               	skipc
  1889  02A8  2AAA               	goto	u1531
  1890  02A9  2AAB               	goto	u1530
  1891  02AA                     u1531:
  1892  02AA  2A9C               	goto	l1923
  1893  02AB                     u1530:
  1894  02AB  290B               	goto	l1835
  1895  02AC  3180  28E8         	ljmp	start
  1896  02AE                     __end_of_main:
  1897                           
  1898                           	psect	text1
  1899  02AE                     __ptext1:	
  1900 ;; *************** function _read_sensor *****************
  1901 ;; Defined at:
  1902 ;;		line 75 in file "config.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;Total ram usage:        1 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    4
  1923 ;; This function calls:
  1924 ;;		_i2c_read
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _read_sensor
  1932  02AE                     _read_sensor:
  1933  02AE                     l1821:	
  1934                           ;incstack = 0
  1935                           ; Regs used in _read_sensor: [wreg+status,2+status,0+pclath+cstack]
  1936                           
  1937                           
  1938                           ;config.c: 76:     gyrox = i2c_read(0xD2, 0xA8);
  1939  02AE  30A8               	movlw	168
  1940  02AF  0020               	movlb	0	; select bank0
  1941  02B0  00D9               	movwf	??_read_sensor
  1942  02B1  0859               	movf	??_read_sensor,w
  1943  02B2  00CF               	movwf	i2c_read@subaddress
  1944  02B3  30D2               	movlw	210
  1945  02B4  3183  2325  3182   	fcall	_i2c_read
  1946  02B7  0020               	movlb	0	; select bank0
  1947  02B8  0850               	movf	?_i2c_read+1,w
  1948  02B9  00BF               	movwf	_gyrox+1
  1949  02BA  084F               	movf	?_i2c_read,w
  1950  02BB  00BE               	movwf	_gyrox
  1951                           
  1952                           ;config.c: 77:     gyroy = i2c_read(0xD2, 0xAA);
  1953  02BC  30AA               	movlw	170
  1954  02BD  00D9               	movwf	??_read_sensor
  1955  02BE  0859               	movf	??_read_sensor,w
  1956  02BF  00CF               	movwf	i2c_read@subaddress
  1957  02C0  30D2               	movlw	210
  1958  02C1  3183  2325  3182   	fcall	_i2c_read
  1959  02C4  0020               	movlb	0	; select bank0
  1960  02C5  0850               	movf	?_i2c_read+1,w
  1961  02C6  00BD               	movwf	_gyroy+1
  1962  02C7  084F               	movf	?_i2c_read,w
  1963  02C8  00BC               	movwf	_gyroy
  1964                           
  1965                           ;config.c: 78:     gyroz = i2c_read(0xD2, 0xAC);
  1966  02C9  30AC               	movlw	172
  1967  02CA  00D9               	movwf	??_read_sensor
  1968  02CB  0859               	movf	??_read_sensor,w
  1969  02CC  00CF               	movwf	i2c_read@subaddress
  1970  02CD  30D2               	movlw	210
  1971  02CE  3183  2325  3182   	fcall	_i2c_read
  1972  02D1  0020               	movlb	0	; select bank0
  1973  02D2  0850               	movf	?_i2c_read+1,w
  1974  02D3  00BB               	movwf	_gyroz+1
  1975  02D4  084F               	movf	?_i2c_read,w
  1976  02D5  00BA               	movwf	_gyroz
  1977                           
  1978                           ;config.c: 79:     accx = i2c_read(0x32, 0xA8);
  1979  02D6  30A8               	movlw	168
  1980  02D7  00D9               	movwf	??_read_sensor
  1981  02D8  0859               	movf	??_read_sensor,w
  1982  02D9  00CF               	movwf	i2c_read@subaddress
  1983  02DA  3032               	movlw	50
  1984  02DB  3183  2325  3182   	fcall	_i2c_read
  1985  02DE  0020               	movlb	0	; select bank0
  1986  02DF  0850               	movf	?_i2c_read+1,w
  1987  02E0  00C5               	movwf	_accx+1
  1988  02E1  084F               	movf	?_i2c_read,w
  1989  02E2  00C4               	movwf	_accx
  1990                           
  1991                           ;config.c: 80:     accy = i2c_read(0x32, 0xAA);
  1992  02E3  30AA               	movlw	170
  1993  02E4  00D9               	movwf	??_read_sensor
  1994  02E5  0859               	movf	??_read_sensor,w
  1995  02E6  00CF               	movwf	i2c_read@subaddress
  1996  02E7  3032               	movlw	50
  1997  02E8  3183  2325  3182   	fcall	_i2c_read
  1998  02EB  0020               	movlb	0	; select bank0
  1999  02EC  0850               	movf	?_i2c_read+1,w
  2000  02ED  00C3               	movwf	_accy+1
  2001  02EE  084F               	movf	?_i2c_read,w
  2002  02EF  00C2               	movwf	_accy
  2003                           
  2004                           ;config.c: 81:     accz = i2c_read(0x32, 0xAC);
  2005  02F0  30AC               	movlw	172
  2006  02F1  00D9               	movwf	??_read_sensor
  2007  02F2  0859               	movf	??_read_sensor,w
  2008  02F3  00CF               	movwf	i2c_read@subaddress
  2009  02F4  3032               	movlw	50
  2010  02F5  3183  2325  3182   	fcall	_i2c_read
  2011  02F8  0020               	movlb	0	; select bank0
  2012  02F9  0850               	movf	?_i2c_read+1,w
  2013  02FA  00C1               	movwf	_accz+1
  2014  02FB  084F               	movf	?_i2c_read,w
  2015  02FC  00C0               	movwf	_accz
  2016                           
  2017                           ;config.c: 82:     magx = i2c_read(0x3C, 0x83);
  2018  02FD  3083               	movlw	131
  2019  02FE  00D9               	movwf	??_read_sensor
  2020  02FF  0859               	movf	??_read_sensor,w
  2021  0300  00CF               	movwf	i2c_read@subaddress
  2022  0301  303C               	movlw	60
  2023  0302  3183  2325  3182   	fcall	_i2c_read
  2024  0305  0020               	movlb	0	; select bank0
  2025  0306  0850               	movf	?_i2c_read+1,w
  2026  0307  00B9               	movwf	_magx+1
  2027  0308  084F               	movf	?_i2c_read,w
  2028  0309  00B8               	movwf	_magx
  2029                           
  2030                           ;config.c: 83:     magy = i2c_read(0x3C, 0x85);
  2031  030A  3085               	movlw	133
  2032  030B  00D9               	movwf	??_read_sensor
  2033  030C  0859               	movf	??_read_sensor,w
  2034  030D  00CF               	movwf	i2c_read@subaddress
  2035  030E  303C               	movlw	60
  2036  030F  3183  2325  3182   	fcall	_i2c_read
  2037  0312  0020               	movlb	0	; select bank0
  2038  0313  0850               	movf	?_i2c_read+1,w
  2039  0314  00B7               	movwf	_magy+1
  2040  0315  084F               	movf	?_i2c_read,w
  2041  0316  00B6               	movwf	_magy
  2042                           
  2043                           ;config.c: 84:     magz = i2c_read(0x3C, 0x87);
  2044  0317  3087               	movlw	135
  2045  0318  00D9               	movwf	??_read_sensor
  2046  0319  0859               	movf	??_read_sensor,w
  2047  031A  00CF               	movwf	i2c_read@subaddress
  2048  031B  303C               	movlw	60
  2049  031C  3183  2325  3182   	fcall	_i2c_read
  2050  031F  0020               	movlb	0	; select bank0
  2051  0320  0850               	movf	?_i2c_read+1,w
  2052  0321  00B5               	movwf	_magz+1
  2053  0322  084F               	movf	?_i2c_read,w
  2054  0323  00B4               	movwf	_magz
  2055  0324                     l253:
  2056  0324  0008               	return
  2057  0325                     __end_of_read_sensor:
  2058                           
  2059                           	psect	text2
  2060  0325                     __ptext2:	
  2061 ;; *************** function _i2c_read *****************
  2062 ;; Defined at:
  2063 ;;		line 101 in file "config.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  address         1    wreg     unsigned char 
  2066 ;;  subaddress      1    7[BANK0 ] unsigned char 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  address         1   16[BANK0 ] unsigned char 
  2069 ;;  high            2   14[BANK0 ] int 
  2070 ;;  low             2   12[BANK0 ] int 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2    7[BANK0 ] int 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2083 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;Total ram usage:       10 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    3
  2087 ;; This function calls:
  2088 ;;		_i2c_read_byte
  2089 ;;		_i2c_restart
  2090 ;;		_i2c_start
  2091 ;;		_i2c_stop
  2092 ;;		_i2c_write_byte
  2093 ;;		_nack
  2094 ;; This function is called by:
  2095 ;;		_read_sensor
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _i2c_read
  2101  0325                     _i2c_read:
  2102                           
  2103                           ;incstack = 0
  2104                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2105                           ;i2c_read@address stored from wreg
  2106  0325  0020               	movlb	0	; select bank0
  2107  0326  00D8               	movwf	i2c_read@address
  2108  0327                     l1711:
  2109                           
  2110                           ;config.c: 102:     int low, high;;config.c: 103:     i2c_start();
  2111  0327  3184  24F0  3183   	fcall	_i2c_start
  2112  032A                     l1713:
  2113                           
  2114                           ;config.c: 104:     i2c_write_byte(address);
  2115  032A  0020               	movlb	0	; select bank0
  2116  032B  0858               	movf	i2c_read@address,w
  2117  032C  3184  24A6  3183   	fcall	_i2c_write_byte
  2118  032F                     l1715:
  2119                           
  2120                           ;config.c: 105:     if(nack())
  2121  032F  3184  24BB  3183   	fcall	_nack
  2122  0332  0020               	movlb	0	; select bank0
  2123  0333  0848               	movf	?_nack,w
  2124  0334  0449               	iorwf	?_nack+1,w
  2125  0335  1903               	btfsc	3,2
  2126  0336  2B38               	goto	u1241
  2127  0337  2B39               	goto	u1240
  2128  0338                     u1241:
  2129  0338  2B3C               	goto	l1721
  2130  0339                     u1240:
  2131  0339                     l1717:
  2132                           
  2133                           ;config.c: 106:         return 0;
  2134  0339  01CF               	clrf	?_i2c_read
  2135  033A  01D0               	clrf	?_i2c_read+1
  2136  033B  2B96               	goto	l263
  2137  033C                     l1721:
  2138                           
  2139                           ;config.c: 108:     i2c_write_byte(subaddress);
  2140  033C  084F               	movf	i2c_read@subaddress,w
  2141  033D  3184  24A6  3183   	fcall	_i2c_write_byte
  2142                           
  2143                           ;config.c: 109:     if(nack())
  2144  0340  3184  24BB  3183   	fcall	_nack
  2145  0343  0020               	movlb	0	; select bank0
  2146  0344  0848               	movf	?_nack,w
  2147  0345  0449               	iorwf	?_nack+1,w
  2148  0346  1903               	btfsc	3,2
  2149  0347  2B49               	goto	u1251
  2150  0348  2B4A               	goto	u1250
  2151  0349                     u1251:
  2152  0349  2B4B               	goto	l1727
  2153  034A                     u1250:
  2154  034A  2B39               	goto	l1717
  2155  034B                     l1727:
  2156                           
  2157                           ;config.c: 111:     i2c_restart();
  2158  034B  3184  24DE  3183   	fcall	_i2c_restart
  2159  034E                     l1729:
  2160                           
  2161                           ;config.c: 112:     i2c_write_byte(address | 1);
  2162  034E  0020               	movlb	0	; select bank0
  2163  034F  0858               	movf	i2c_read@address,w
  2164  0350  3801               	iorlw	1
  2165  0351  3184  24A6  3183   	fcall	_i2c_write_byte
  2166  0354                     l1731:
  2167                           
  2168                           ;config.c: 113:     if(nack())
  2169  0354  3184  24BB  3183   	fcall	_nack
  2170  0357  0020               	movlb	0	; select bank0
  2171  0358  0848               	movf	?_nack,w
  2172  0359  0449               	iorwf	?_nack+1,w
  2173  035A  1903               	btfsc	3,2
  2174  035B  2B5D               	goto	u1261
  2175  035C  2B5E               	goto	u1260
  2176  035D                     u1261:
  2177  035D  2B5F               	goto	l1737
  2178  035E                     u1260:
  2179  035E  2B39               	goto	l1717
  2180  035F                     l1737:
  2181                           
  2182                           ;config.c: 115:     low = i2c_read_byte(0);
  2183  035F  3000               	movlw	0
  2184  0360  3184  2483  3183   	fcall	_i2c_read_byte
  2185  0363  0020               	movlb	0	; select bank0
  2186  0364  0849               	movf	?_i2c_read_byte+1,w
  2187  0365  00D5               	movwf	i2c_read@low+1
  2188  0366  0848               	movf	?_i2c_read_byte,w
  2189  0367  00D4               	movwf	i2c_read@low
  2190                           
  2191                           ;config.c: 116:     high = i2c_read_byte(1);
  2192  0368  3001               	movlw	1
  2193  0369  3184  2483  3183   	fcall	_i2c_read_byte
  2194  036C  0020               	movlb	0	; select bank0
  2195  036D  0849               	movf	?_i2c_read_byte+1,w
  2196  036E  00D7               	movwf	i2c_read@high+1
  2197  036F  0848               	movf	?_i2c_read_byte,w
  2198  0370  00D6               	movwf	i2c_read@high
  2199  0371                     l1739:
  2200                           
  2201                           ;config.c: 117:     i2c_stop();
  2202  0371  3184  24E7  3183   	fcall	_i2c_stop
  2203  0374                     l1741:
  2204                           
  2205                           ;config.c: 118:     if(address != 0x3C)
  2206  0374  303C               	movlw	60
  2207  0375  0020               	movlb	0	; select bank0
  2208  0376  0658               	xorwf	i2c_read@address,w
  2209  0377  1903               	btfsc	3,2
  2210  0378  2B7A               	goto	u1271
  2211  0379  2B7B               	goto	u1270
  2212  037A                     u1271:
  2213  037A  2B89               	goto	l1749
  2214  037B                     u1270:
  2215  037B                     l1743:
  2216                           
  2217                           ;config.c: 119:         return((high << 8) | low);
  2218  037B  0857               	movf	i2c_read@high+1,w
  2219  037C  00D2               	movwf	??_i2c_read+1
  2220  037D  0856               	movf	i2c_read@high,w
  2221  037E  00D1               	movwf	??_i2c_read
  2222  037F  0851               	movf	??_i2c_read,w
  2223  0380  00D2               	movwf	??_i2c_read+1
  2224  0381  01D1               	clrf	??_i2c_read
  2225  0382  0854               	movf	i2c_read@low,w
  2226  0383  0451               	iorwf	??_i2c_read,w
  2227  0384  00CF               	movwf	?_i2c_read
  2228  0385  0855               	movf	i2c_read@low+1,w
  2229  0386  0452               	iorwf	??_i2c_read+1,w
  2230  0387  00D0               	movwf	?_i2c_read+1
  2231  0388  2B96               	goto	l263
  2232  0389                     l1749:
  2233                           
  2234                           ;config.c: 121:         return((low << 8) | high);
  2235  0389  0855               	movf	i2c_read@low+1,w
  2236  038A  00D2               	movwf	??_i2c_read+1
  2237  038B  0854               	movf	i2c_read@low,w
  2238  038C  00D1               	movwf	??_i2c_read
  2239  038D  0851               	movf	??_i2c_read,w
  2240  038E  00D2               	movwf	??_i2c_read+1
  2241  038F  01D1               	clrf	??_i2c_read
  2242  0390  0856               	movf	i2c_read@high,w
  2243  0391  0451               	iorwf	??_i2c_read,w
  2244  0392  00CF               	movwf	?_i2c_read
  2245  0393  0857               	movf	i2c_read@high+1,w
  2246  0394  0452               	iorwf	??_i2c_read+1,w
  2247  0395  00D0               	movwf	?_i2c_read+1
  2248  0396                     l263:
  2249  0396  0008               	return
  2250  0397                     __end_of_i2c_read:
  2251                           
  2252                           	psect	text3
  2253  04DE                     __ptext3:	
  2254 ;; *************** function _i2c_restart *****************
  2255 ;; Defined at:
  2256 ;;		line 152 in file "config.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		None
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_i2c_read
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _i2c_restart
  2286  04DE                     _i2c_restart:
  2287  04DE                     l1677:	
  2288                           ;incstack = 0
  2289                           ; Regs used in _i2c_restart: []
  2290                           
  2291                           
  2292                           ;config.c: 153:     SSPCON2bits.RSEN = 1;
  2293  04DE  0024               	movlb	4	; select bank4
  2294  04DF  1496               	bsf	22,1	;volatile
  2295  04E0                     l289:	
  2296                           ;config.c: 154:     while(SSPCON2bits.RSEN);
  2297                           
  2298  04E0  1896               	btfsc	22,1	;volatile
  2299  04E1  2CE3               	goto	u1181
  2300  04E2  2CE4               	goto	u1180
  2301  04E3                     u1181:
  2302  04E3  2CE0               	goto	l289
  2303  04E4                     u1180:
  2304  04E4                     l291:
  2305                           
  2306                           ;config.c: 155:     PIR1bits.SSP1IF = 0;
  2307  04E4  0020               	movlb	0	; select bank0
  2308  04E5  1190               	bcf	16,3	;volatile
  2309  04E6                     l292:
  2310  04E6  0008               	return
  2311  04E7                     __end_of_i2c_restart:
  2312                           
  2313                           	psect	text4
  2314  0483                     __ptext4:	
  2315 ;; *************** function _i2c_read_byte *****************
  2316 ;; Defined at:
  2317 ;;		line 124 in file "config.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  ack             1    wreg     unsigned char 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  ack             1    4[BANK0 ] unsigned char 
  2322 ;;  temp            2    5[BANK0 ] int 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2    0[BANK0 ] int 
  2325 ;; Registers used:
  2326 ;;		wreg, status,0
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;Total ram usage:        7 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    1
  2339 ;; This function calls:
  2340 ;;		Nothing
  2341 ;; This function is called by:
  2342 ;;		_i2c_read
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _i2c_read_byte
  2348  0483                     _i2c_read_byte:
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _i2c_read_byte: [wreg+status,0]
  2352                           ;i2c_read_byte@ack stored from wreg
  2353  0483  0020               	movlb	0	; select bank0
  2354  0484  00CC               	movwf	i2c_read_byte@ack
  2355  0485                     l1679:
  2356                           
  2357                           ;config.c: 125:     int temp;;config.c: 126:     SSP1CON2bits.RCEN = 1;
  2358  0485  0024               	movlb	4	; select bank4
  2359  0486  1596               	bsf	22,3	;volatile
  2360  0487                     l270:	
  2361                           ;config.c: 127:     while(RCEN);
  2362                           
  2363  0487  1996               	btfsc	22,3	;volatile
  2364  0488  2C8A               	goto	u1191
  2365  0489  2C8B               	goto	u1190
  2366  048A                     u1191:
  2367  048A  2C87               	goto	l270
  2368  048B                     u1190:
  2369  048B                     l1681:
  2370                           
  2371                           ;config.c: 128:     temp = SSP1BUF;
  2372  048B  0811               	movf	17,w	;volatile
  2373  048C  0020               	movlb	0	; select bank0
  2374  048D  00CA               	movwf	??_i2c_read_byte
  2375  048E  01CB               	clrf	??_i2c_read_byte+1
  2376  048F  084A               	movf	??_i2c_read_byte,w
  2377  0490  00CD               	movwf	i2c_read_byte@temp
  2378  0491  084B               	movf	??_i2c_read_byte+1,w
  2379  0492  00CE               	movwf	i2c_read_byte@temp+1
  2380  0493                     l1683:
  2381                           
  2382                           ;config.c: 129:     PIR1bits.SSP1IF = 0;
  2383  0493  1190               	bcf	16,3	;volatile
  2384  0494                     l1685:
  2385                           
  2386                           ;config.c: 131:     SSP1CON2bits.ACKDT = ack;
  2387  0494  0C4C               	rrf	i2c_read_byte@ack,w
  2388  0495  0024               	movlb	4	; select bank4
  2389  0496  1C03               	skipc
  2390  0497  1296               	bcf	22,5	;volatile
  2391  0498  1803               	skipnc
  2392  0499  1696               	bsf	22,5	;volatile
  2393  049A                     l1687:
  2394                           
  2395                           ;config.c: 132:     SSP1CON2bits.ACKEN = 1;
  2396  049A  1616               	bsf	22,4	;volatile
  2397  049B                     l273:	
  2398                           ;config.c: 133:     while(SSP1CON2bits.ACKEN);
  2399                           
  2400  049B  1A16               	btfsc	22,4	;volatile
  2401  049C  2C9E               	goto	u1201
  2402  049D  2C9F               	goto	u1200
  2403  049E                     u1201:
  2404  049E  2C9B               	goto	l273
  2405  049F                     u1200:
  2406  049F                     l275:
  2407                           
  2408                           ;config.c: 134:     PIR1bits.SSP1IF = 0;
  2409  049F  0020               	movlb	0	; select bank0
  2410  04A0  1190               	bcf	16,3	;volatile
  2411  04A1                     l1689:
  2412                           
  2413                           ;config.c: 135:     return temp;
  2414  04A1  084E               	movf	i2c_read_byte@temp+1,w
  2415  04A2  00C9               	movwf	?_i2c_read_byte+1
  2416  04A3  084D               	movf	i2c_read_byte@temp,w
  2417  04A4  00C8               	movwf	?_i2c_read_byte
  2418  04A5                     l276:
  2419  04A5  0008               	return
  2420  04A6                     __end_of_i2c_read_byte:
  2421                           
  2422                           	psect	text5
  2423  0397                     __ptext5:	
  2424 ;; *************** function _pic_init *****************
  2425 ;; Defined at:
  2426 ;;		line 5 in file "config.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _pic_init
  2456  0397                     _pic_init:
  2457  0397                     l1753:	
  2458                           ;incstack = 0
  2459                           ; Regs used in _pic_init: [wreg+status,2+status,0]
  2460                           
  2461                           
  2462                           ;config.c: 8:     OSCCONbits.IRCF = 0b1110;
  2463  0397  0021               	movlb	1	; select bank1
  2464  0398  0819               	movf	25,w	;volatile
  2465  0399  3987               	andlw	-121
  2466  039A  3870               	iorlw	112
  2467  039B  0099               	movwf	25	;volatile
  2468                           
  2469                           ;config.c: 9:     OSCCONbits.SCS = 0;
  2470  039C  30FC               	movlw	-4
  2471  039D  0599               	andwf	25,f	;volatile
  2472  039E                     l244:	
  2473                           ;config.c: 10:     while(!OSCSTATbits.PLLR);
  2474                           
  2475  039E  1F1A               	btfss	26,6	;volatile
  2476  039F  2BA1               	goto	u1281
  2477  03A0  2BA2               	goto	u1280
  2478  03A1                     u1281:
  2479  03A1  2B9E               	goto	l244
  2480  03A2                     u1280:
  2481  03A2                     l246:
  2482                           
  2483                           ;config.c: 12:     INTCONbits.GIE = 1;
  2484  03A2  178B               	bsf	11,7	;volatile
  2485                           
  2486                           ;config.c: 13:     INTCONbits.IOCIE = 1;
  2487  03A3  158B               	bsf	11,3	;volatile
  2488                           
  2489                           ;config.c: 14:     INTCONbits.PEIE = 1;
  2490  03A4  170B               	bsf	11,6	;volatile
  2491                           
  2492                           ;config.c: 15:     PIE1bits.TMR2IE = 1;
  2493  03A5  1490               	bsf	16,1	;volatile
  2494                           
  2495                           ;config.c: 16:     INTCONbits.TMR0IE = 1;
  2496  03A6  168B               	bsf	11,5	;volatile
  2497  03A7                     l1755:
  2498                           
  2499                           ;config.c: 17:     IOCCP = 0b01111000;
  2500  03A7  3078               	movlw	120
  2501  03A8  0027               	movlb	7	; select bank7
  2502  03A9  0097               	movwf	23	;volatile
  2503  03AA                     l1757:
  2504                           
  2505                           ;config.c: 21:     OPTION_REGbits.TMR0CS = 0;
  2506  03AA  0021               	movlb	1	; select bank1
  2507  03AB  1295               	bcf	21,5	;volatile
  2508  03AC                     l1759:
  2509                           
  2510                           ;config.c: 22:     OPTION_REGbits.PSA = 0;
  2511  03AC  1195               	bcf	21,3	;volatile
  2512  03AD                     l1761:
  2513                           
  2514                           ;config.c: 23:     OPTION_REGbits.PS = 2;
  2515  03AD  0815               	movf	21,w	;volatile
  2516  03AE  39F8               	andlw	-8
  2517  03AF  3802               	iorlw	2
  2518  03B0  0095               	movwf	21	;volatile
  2519  03B1                     l1763:
  2520                           
  2521                           ;config.c: 25:     T1CONbits.TMR1CS = 0;
  2522  03B1  303F               	movlw	-193
  2523  03B2  0020               	movlb	0	; select bank0
  2524  03B3  0598               	andwf	24,f	;volatile
  2525  03B4                     l1765:
  2526                           
  2527                           ;config.c: 26:     T1CONbits.T1CKPS = 3;
  2528  03B4  3030               	movlw	48
  2529  03B5  0498               	iorwf	24,f	;volatile
  2530  03B6                     l1767:
  2531                           
  2532                           ;config.c: 28:     T3CONbits.TMR3CS = 0;
  2533  03B6  303F               	movlw	-193
  2534  03B7  0029               	movlb	9	; select bank9
  2535  03B8  0595               	andwf	21,f	;volatile
  2536  03B9                     l1769:
  2537                           
  2538                           ;config.c: 29:     T3CONbits.T3CKPS = 3;
  2539  03B9  3030               	movlw	48
  2540  03BA  0495               	iorwf	21,f	;volatile
  2541  03BB                     l1771:
  2542                           
  2543                           ;config.c: 31:     T5CONbits.TMR5CS = 0;
  2544  03BB  303F               	movlw	-193
  2545  03BC  059C               	andwf	28,f	;volatile
  2546  03BD                     l1773:
  2547                           
  2548                           ;config.c: 32:     T5CONbits.T5CKPS = 3;
  2549  03BD  3030               	movlw	48
  2550  03BE  049C               	iorwf	28,f	;volatile
  2551  03BF                     l1775:
  2552                           
  2553                           ;config.c: 34:     T2CLKCON = 0;
  2554  03BF  0020               	movlb	0	; select bank0
  2555  03C0  019E               	clrf	30	;volatile
  2556  03C1                     l1777:
  2557                           
  2558                           ;config.c: 35:     T2CONbits.CKPS = 3;
  2559  03C1  081C               	movf	28,w	;volatile
  2560  03C2  398F               	andlw	-113
  2561  03C3  3830               	iorlw	48
  2562  03C4  009C               	movwf	28	;volatile
  2563  03C5                     l1779:
  2564                           
  2565                           ;config.c: 36:     T2CONbits.OUTPS = 0;
  2566  03C5  30F0               	movlw	-16
  2567  03C6  059C               	andwf	28,f	;volatile
  2568  03C7                     l1781:
  2569                           
  2570                           ;config.c: 37:     T2HLTbits.PSYNC = 1;
  2571  03C7  179D               	bsf	29,7	;volatile
  2572  03C8                     l1783:
  2573                           
  2574                           ;config.c: 38:     T2RST = 15;
  2575  03C8  300F               	movlw	15
  2576  03C9  009F               	movwf	31	;volatile
  2577  03CA                     l1785:
  2578                           
  2579                           ;config.c: 40:     SSP1CONbits.SSPEN = 1;
  2580  03CA  0024               	movlb	4	; select bank4
  2581  03CB  1695               	bsf	21,5	;volatile
  2582  03CC                     l1787:
  2583                           
  2584                           ;config.c: 41:     SSP1CONbits.SSPM = 8;
  2585  03CC  0815               	movf	21,w	;volatile
  2586  03CD  39F0               	andlw	-16
  2587  03CE  3808               	iorlw	8
  2588  03CF  0095               	movwf	21	;volatile
  2589  03D0                     l1789:
  2590                           
  2591                           ;config.c: 43:     SSP1ADD = 19;
  2592  03D0  3013               	movlw	19
  2593  03D1  0092               	movwf	18	;volatile
  2594  03D2                     l1791:
  2595                           
  2596                           ;config.c: 44:     RB4PPS = 17;
  2597  03D2  3011               	movlw	17
  2598  03D3  003D               	movlb	29	; select bank29
  2599  03D4  009C               	movwf	28	;volatile
  2600  03D5                     l1793:
  2601                           
  2602                           ;config.c: 45:     RB6PPS = 16;
  2603  03D5  3010               	movlw	16
  2604  03D6  009E               	movwf	30	;volatile
  2605  03D7                     l1795:
  2606                           
  2607                           ;config.c: 46:     SSPDATPPS = 12;
  2608  03D7  300C               	movlw	12
  2609  03D8  003C               	movlb	28	; select bank28
  2610  03D9  00A1               	movwf	33	;volatile
  2611  03DA                     l1797:
  2612                           
  2613                           ;config.c: 47:     SSPCLKPPS = 14;
  2614  03DA  300E               	movlw	14
  2615  03DB  00A0               	movwf	32	;volatile
  2616  03DC                     l1799:
  2617                           
  2618                           ;config.c: 49:     ANSELA = 0;
  2619  03DC  0023               	movlb	3	; select bank3
  2620  03DD  018C               	clrf	12	;volatile
  2621                           
  2622                           ;config.c: 50:     ANSELB = 0b00100000;
  2623  03DE  3020               	movlw	32
  2624  03DF  008D               	movwf	13	;volatile
  2625  03E0                     l1801:
  2626                           
  2627                           ;config.c: 51:     ANSELC = 0;
  2628  03E0  018E               	clrf	14	;volatile
  2629  03E1                     l1803:
  2630                           
  2631                           ;config.c: 52:     TRISA = 0;
  2632  03E1  0021               	movlb	1	; select bank1
  2633  03E2  018C               	clrf	12	;volatile
  2634                           
  2635                           ;config.c: 53:     TRISB = 0b01110000;
  2636  03E3  3070               	movlw	112
  2637  03E4  008D               	movwf	13	;volatile
  2638  03E5                     l1805:
  2639                           
  2640                           ;config.c: 54:     ODCONBbits.ODB4 = 1;
  2641  03E5  0025               	movlb	5	; select bank5
  2642  03E6  160D               	bsf	13,4	;volatile
  2643  03E7                     l1807:
  2644                           
  2645                           ;config.c: 55:     ODCONBbits.ODB6 = 1;
  2646  03E7  170D               	bsf	13,6	;volatile
  2647                           
  2648                           ;config.c: 56:     TRISC = 0b01111000;
  2649  03E8  3078               	movlw	120
  2650  03E9  0021               	movlb	1	; select bank1
  2651  03EA  008E               	movwf	14	;volatile
  2652  03EB                     l1809:
  2653                           
  2654                           ;config.c: 59:     ADCON0bits.ADON = 1;
  2655  03EB  141D               	bsf	29,0	;volatile
  2656  03EC                     l1811:
  2657                           
  2658                           ;config.c: 60:     ADCON0bits.CHS = 11;
  2659  03EC  081D               	movf	29,w	;volatile
  2660  03ED  3983               	andlw	-125
  2661  03EE  382C               	iorlw	44
  2662  03EF  009D               	movwf	29	;volatile
  2663  03F0                     l1813:
  2664                           
  2665                           ;config.c: 61:     ADCON1bits.ADPREF = 0;
  2666  03F0  30FC               	movlw	-4
  2667  03F1  059E               	andwf	30,f	;volatile
  2668  03F2                     l1815:
  2669                           
  2670                           ;config.c: 62:     ADCON1bits.ADCS = 2;
  2671  03F2  081E               	movf	30,w	;volatile
  2672  03F3  398F               	andlw	-113
  2673  03F4  3820               	iorlw	32
  2674  03F5  009E               	movwf	30	;volatile
  2675  03F6                     l1817:
  2676                           
  2677                           ;config.c: 63:     ADCON1bits.ADFM = 1;
  2678  03F6  179E               	bsf	30,7	;volatile
  2679  03F7                     l247:
  2680  03F7  0008               	return
  2681  03F8                     __end_of_pic_init:
  2682                           
  2683                           	psect	text6
  2684  03F8                     __ptext6:	
  2685 ;; *************** function _gyro_config *****************
  2686 ;; Defined at:
  2687 ;;		line 65 in file "config.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;Total ram usage:        2 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    4
  2708 ;; This function calls:
  2709 ;;		_i2c_write
  2710 ;; This function is called by:
  2711 ;;		_main
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _gyro_config
  2717  03F8                     _gyro_config:
  2718  03F8                     l1819:	
  2719                           ;incstack = 0
  2720                           ; Regs used in _gyro_config: [wreg+status,2+status,0+pclath+cstack]
  2721                           
  2722                           
  2723                           ;config.c: 66:     i2c_write(0xD2, 0x20, 0x0F);
  2724  03F8  3020               	movlw	32
  2725  03F9  0020               	movlb	0	; select bank0
  2726  03FA  00CD               	movwf	??_gyro_config
  2727  03FB  084D               	movf	??_gyro_config,w
  2728  03FC  00CA               	movwf	i2c_write@subaddress
  2729  03FD  300F               	movlw	15
  2730  03FE  00CE               	movwf	??_gyro_config+1
  2731  03FF  084E               	movf	??_gyro_config+1,w
  2732  0400  00CB               	movwf	i2c_write@data
  2733  0401  30D2               	movlw	210
  2734  0402  3184  244C  3183   	fcall	_i2c_write
  2735                           
  2736                           ;config.c: 67:     i2c_write(0xD2, 0x23, 0x90);
  2737  0405  3023               	movlw	35
  2738  0406  0020               	movlb	0	; select bank0
  2739  0407  00CD               	movwf	??_gyro_config
  2740  0408  084D               	movf	??_gyro_config,w
  2741  0409  00CA               	movwf	i2c_write@subaddress
  2742  040A  3090               	movlw	144
  2743  040B  00CE               	movwf	??_gyro_config+1
  2744  040C  084E               	movf	??_gyro_config+1,w
  2745  040D  00CB               	movwf	i2c_write@data
  2746  040E  30D2               	movlw	210
  2747  040F  3184  244C  3183   	fcall	_i2c_write
  2748                           
  2749                           ;config.c: 68:     i2c_write(0x32, 0x20, 0x57);
  2750  0412  3020               	movlw	32
  2751  0413  0020               	movlb	0	; select bank0
  2752  0414  00CD               	movwf	??_gyro_config
  2753  0415  084D               	movf	??_gyro_config,w
  2754  0416  00CA               	movwf	i2c_write@subaddress
  2755  0417  3057               	movlw	87
  2756  0418  00CE               	movwf	??_gyro_config+1
  2757  0419  084E               	movf	??_gyro_config+1,w
  2758  041A  00CB               	movwf	i2c_write@data
  2759  041B  3032               	movlw	50
  2760  041C  3184  244C  3183   	fcall	_i2c_write
  2761                           
  2762                           ;config.c: 69:     i2c_write(0x32, 0x23, 0x90);
  2763  041F  3023               	movlw	35
  2764  0420  0020               	movlb	0	; select bank0
  2765  0421  00CD               	movwf	??_gyro_config
  2766  0422  084D               	movf	??_gyro_config,w
  2767  0423  00CA               	movwf	i2c_write@subaddress
  2768  0424  3090               	movlw	144
  2769  0425  00CE               	movwf	??_gyro_config+1
  2770  0426  084E               	movf	??_gyro_config+1,w
  2771  0427  00CB               	movwf	i2c_write@data
  2772  0428  3032               	movlw	50
  2773  0429  3184  244C  3183   	fcall	_i2c_write
  2774                           
  2775                           ;config.c: 70:     i2c_write(0x3C, 0, 0x18);
  2776  042C  0020               	movlb	0	; select bank0
  2777  042D  01CA               	clrf	i2c_write@subaddress
  2778  042E  3018               	movlw	24
  2779  042F  00CD               	movwf	??_gyro_config
  2780  0430  084D               	movf	??_gyro_config,w
  2781  0431  00CB               	movwf	i2c_write@data
  2782  0432  303C               	movlw	60
  2783  0433  3184  244C  3183   	fcall	_i2c_write
  2784                           
  2785                           ;config.c: 71:     i2c_write(0x3C, 1, 0x80);
  2786  0436  0020               	movlb	0	; select bank0
  2787  0437  01CA               	clrf	i2c_write@subaddress
  2788  0438  0ACA               	incf	i2c_write@subaddress,f
  2789  0439  3080               	movlw	128
  2790  043A  00CD               	movwf	??_gyro_config
  2791  043B  084D               	movf	??_gyro_config,w
  2792  043C  00CB               	movwf	i2c_write@data
  2793  043D  303C               	movlw	60
  2794  043E  3184  244C  3183   	fcall	_i2c_write
  2795                           
  2796                           ;config.c: 72:     i2c_write(0x3C, 2, 0);
  2797  0441  3002               	movlw	2
  2798  0442  0020               	movlb	0	; select bank0
  2799  0443  00CD               	movwf	??_gyro_config
  2800  0444  084D               	movf	??_gyro_config,w
  2801  0445  00CA               	movwf	i2c_write@subaddress
  2802  0446  01CB               	clrf	i2c_write@data
  2803  0447  303C               	movlw	60
  2804  0448  3184  244C  3183   	fcall	_i2c_write
  2805  044B                     l250:
  2806  044B  0008               	return
  2807  044C                     __end_of_gyro_config:
  2808                           
  2809                           	psect	text7
  2810  044C                     __ptext7:	
  2811 ;; *************** function _i2c_write *****************
  2812 ;; Defined at:
  2813 ;;		line 87 in file "config.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  address         1    wreg     unsigned char 
  2816 ;;  subaddress      1    2[BANK0 ] unsigned char 
  2817 ;;  data            1    3[BANK0 ] unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  address         1    4[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2829 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;Total ram usage:        3 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    3
  2836 ;; This function calls:
  2837 ;;		_i2c_start
  2838 ;;		_i2c_stop
  2839 ;;		_i2c_write_byte
  2840 ;;		_nack
  2841 ;; This function is called by:
  2842 ;;		_gyro_config
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _i2c_write
  2848  044C                     _i2c_write:
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2852                           ;i2c_write@address stored from wreg
  2853  044C  0020               	movlb	0	; select bank0
  2854  044D  00CC               	movwf	i2c_write@address
  2855  044E                     l1693:
  2856                           
  2857                           ;config.c: 88:     i2c_start();
  2858  044E  3184  24F0  3184   	fcall	_i2c_start
  2859  0451                     l1695:
  2860                           
  2861                           ;config.c: 89:     i2c_write_byte(address);
  2862  0451  0020               	movlb	0	; select bank0
  2863  0452  084C               	movf	i2c_write@address,w
  2864  0453  3184  24A6  3184   	fcall	_i2c_write_byte
  2865  0456                     l1697:
  2866                           
  2867                           ;config.c: 90:     if(nack())
  2868  0456  3184  24BB  3184   	fcall	_nack
  2869  0459  0020               	movlb	0	; select bank0
  2870  045A  0848               	movf	?_nack,w
  2871  045B  0449               	iorwf	?_nack+1,w
  2872  045C  1903               	btfsc	3,2
  2873  045D  2C5F               	goto	u1211
  2874  045E  2C60               	goto	u1210
  2875  045F                     u1211:
  2876  045F  2C61               	goto	l1701
  2877  0460                     u1210:
  2878  0460  2C82               	goto	l257
  2879  0461                     l1701:
  2880                           
  2881                           ;config.c: 92:     i2c_write_byte(subaddress);
  2882  0461  084A               	movf	i2c_write@subaddress,w
  2883  0462  3184  24A6  3184   	fcall	_i2c_write_byte
  2884                           
  2885                           ;config.c: 93:     if(nack())
  2886  0465  3184  24BB  3184   	fcall	_nack
  2887  0468  0020               	movlb	0	; select bank0
  2888  0469  0848               	movf	?_nack,w
  2889  046A  0449               	iorwf	?_nack+1,w
  2890  046B  1903               	btfsc	3,2
  2891  046C  2C6E               	goto	u1221
  2892  046D  2C6F               	goto	u1220
  2893  046E                     u1221:
  2894  046E  2C70               	goto	l1705
  2895  046F                     u1220:
  2896  046F  2C82               	goto	l257
  2897  0470                     l1705:
  2898                           
  2899                           ;config.c: 95:     i2c_write_byte(data);
  2900  0470  084B               	movf	i2c_write@data,w
  2901  0471  3184  24A6  3184   	fcall	_i2c_write_byte
  2902                           
  2903                           ;config.c: 96:     if(nack())
  2904  0474  3184  24BB  3184   	fcall	_nack
  2905  0477  0020               	movlb	0	; select bank0
  2906  0478  0848               	movf	?_nack,w
  2907  0479  0449               	iorwf	?_nack+1,w
  2908  047A  1903               	btfsc	3,2
  2909  047B  2C7D               	goto	u1231
  2910  047C  2C7E               	goto	u1230
  2911  047D                     u1231:
  2912  047D  2C7F               	goto	l1709
  2913  047E                     u1230:
  2914  047E  2C82               	goto	l257
  2915  047F                     l1709:
  2916                           
  2917                           ;config.c: 98:     i2c_stop();
  2918  047F  3184  24E7  3184   	fcall	_i2c_stop
  2919  0482                     l257:
  2920  0482  0008               	return
  2921  0483                     __end_of_i2c_write:
  2922                           
  2923                           	psect	text8
  2924  04BB                     __ptext8:	
  2925 ;; *************** function _nack *****************
  2926 ;; Defined at:
  2927 ;;		line 138 in file "config.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2    0[BANK0 ] int 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2941 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;Total ram usage:        2 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    2
  2948 ;; This function calls:
  2949 ;;		_i2c_stop
  2950 ;; This function is called by:
  2951 ;;		_i2c_write
  2952 ;;		_i2c_read
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           
  2957                           ;psect for function _nack
  2958  04BB                     _nack:
  2959  04BB                     l1665:	
  2960                           ;incstack = 0
  2961                           ; Regs used in _nack: [wreg+status,2+status,0+pclath+cstack]
  2962                           
  2963                           
  2964                           ;config.c: 139:     if(SSP1CON2bits.ACKSTAT){
  2965  04BB  0024               	movlb	4	; select bank4
  2966  04BC  1F16               	btfss	22,6	;volatile
  2967  04BD  2CBF               	goto	u1171
  2968  04BE  2CC0               	goto	u1170
  2969  04BF                     u1171:
  2970  04BF  2CC9               	goto	l1673
  2971  04C0                     u1170:
  2972  04C0                     l1667:
  2973                           
  2974                           ;config.c: 140:         i2c_stop();
  2975  04C0  3184  24E7  3184   	fcall	_i2c_stop
  2976  04C3                     l1669:
  2977                           
  2978                           ;config.c: 141:         return 1;
  2979  04C3  3001               	movlw	1
  2980  04C4  0020               	movlb	0	; select bank0
  2981  04C5  00C8               	movwf	?_nack
  2982  04C6  3000               	movlw	0
  2983  04C7  00C9               	movwf	?_nack+1
  2984  04C8  2CCC               	goto	l280
  2985  04C9                     l1673:
  2986                           
  2987                           ;config.c: 143:     return 0;
  2988  04C9  0020               	movlb	0	; select bank0
  2989  04CA  01C8               	clrf	?_nack
  2990  04CB  01C9               	clrf	?_nack+1
  2991  04CC                     l280:
  2992  04CC  0008               	return
  2993  04CD                     __end_of_nack:
  2994                           
  2995                           	psect	text9
  2996  04E7                     __ptext9:	
  2997 ;; *************** function _i2c_stop *****************
  2998 ;; Defined at:
  2999 ;;		line 167 in file "config.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		None
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_i2c_write
  3024 ;;		_i2c_read
  3025 ;;		_nack
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _i2c_stop
  3031  04E7                     _i2c_stop:
  3032  04E7                     l1655:	
  3033                           ;incstack = 0
  3034                           ; Regs used in _i2c_stop: []
  3035                           
  3036                           
  3037                           ;config.c: 168:     SSP1CON2bits.PEN = 1;
  3038  04E7  0024               	movlb	4	; select bank4
  3039  04E8  1516               	bsf	22,2	;volatile
  3040  04E9                     l302:	
  3041                           ;config.c: 169:     while(SSP1CON2bits.PEN);
  3042                           
  3043  04E9  1916               	btfsc	22,2	;volatile
  3044  04EA  2CEC               	goto	u1131
  3045  04EB  2CED               	goto	u1130
  3046  04EC                     u1131:
  3047  04EC  2CE9               	goto	l302
  3048  04ED                     u1130:
  3049  04ED                     l304:
  3050                           
  3051                           ;config.c: 170:     PIR1bits.SSP1IF = 0;
  3052  04ED  0020               	movlb	0	; select bank0
  3053  04EE  1190               	bcf	16,3	;volatile
  3054  04EF                     l305:
  3055  04EF  0008               	return
  3056  04F0                     __end_of_i2c_stop:
  3057                           
  3058                           	psect	text10
  3059  04A6                     __ptext10:	
  3060 ;; *************** function _i2c_write_byte *****************
  3061 ;; Defined at:
  3062 ;;		line 158 in file "config.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  address         1    wreg     unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  address         1    0[BANK0 ] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    1
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_i2c_write
  3087 ;;		_i2c_read
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _i2c_write_byte
  3093  04A6                     _i2c_write_byte:
  3094                           
  3095                           ;incstack = 0
  3096                           ; Regs used in _i2c_write_byte: [wreg]
  3097                           ;i2c_write_byte@address stored from wreg
  3098  04A6  0020               	movlb	0	; select bank0
  3099  04A7  00C8               	movwf	i2c_write_byte@address
  3100  04A8                     l1659:
  3101                           
  3102                           ;config.c: 159:     SSP1CON2bits.RCEN = 0;
  3103  04A8  0024               	movlb	4	; select bank4
  3104  04A9  1196               	bcf	22,3	;volatile
  3105  04AA                     l1661:
  3106                           
  3107                           ;config.c: 160:     SSP1BUF = address;
  3108  04AA  0020               	movlb	0	; select bank0
  3109  04AB  0848               	movf	i2c_write_byte@address,w
  3110  04AC  0024               	movlb	4	; select bank4
  3111  04AD  0091               	movwf	17	;volatile
  3112  04AE                     l295:	
  3113                           ;config.c: 161:     while(SSP1STATbits.BF);
  3114                           
  3115  04AE  1814               	btfsc	20,0	;volatile
  3116  04AF  2CB1               	goto	u1151
  3117  04B0  2CB2               	goto	u1150
  3118  04B1                     u1151:
  3119  04B1  2CAE               	goto	l295
  3120  04B2                     u1150:
  3121  04B2                     l297:
  3122                           
  3123                           ;config.c: 162:     PIR1bits.SSP1IF = 0;
  3124  04B2  0020               	movlb	0	; select bank0
  3125  04B3  1190               	bcf	16,3	;volatile
  3126                           
  3127                           ;config.c: 163:     if(SSP1CON1bits.WCOL)
  3128  04B4  0024               	movlb	4	; select bank4
  3129  04B5  1F95               	btfss	21,7	;volatile
  3130  04B6  2CB8               	goto	u1161
  3131  04B7  2CB9               	goto	u1160
  3132  04B8                     u1161:
  3133  04B8  2CBA               	goto	l299
  3134  04B9                     u1160:
  3135  04B9                     l1663:
  3136                           
  3137                           ;config.c: 164:         SSP1CON1bits.WCOL = 0;
  3138  04B9  1395               	bcf	21,7	;volatile
  3139  04BA                     l299:
  3140  04BA  0008               	return
  3141  04BB                     __end_of_i2c_write_byte:
  3142                           
  3143                           	psect	text11
  3144  04F0                     __ptext11:	
  3145 ;; *************** function _i2c_start *****************
  3146 ;; Defined at:
  3147 ;;		line 146 in file "config.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		None
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    1
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_i2c_write
  3172 ;;		_i2c_read
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           
  3177                           ;psect for function _i2c_start
  3178  04F0                     _i2c_start:
  3179  04F0                     l1657:	
  3180                           ;incstack = 0
  3181                           ; Regs used in _i2c_start: []
  3182                           
  3183                           
  3184                           ;config.c: 147:     SSP1CON2bits.SEN = 1;
  3185  04F0  0024               	movlb	4	; select bank4
  3186  04F1  1416               	bsf	22,0	;volatile
  3187  04F2                     l283:	
  3188                           ;config.c: 148:     while((SSP1CON2bits.SEN));
  3189                           
  3190  04F2  1816               	btfsc	22,0	;volatile
  3191  04F3  2CF5               	goto	u1141
  3192  04F4  2CF6               	goto	u1140
  3193  04F5                     u1141:
  3194  04F5  2CF2               	goto	l283
  3195  04F6                     u1140:
  3196  04F6                     l285:
  3197                           
  3198                           ;config.c: 149:     PIR1bits.SSP1IF = 0;
  3199  04F6  0020               	movlb	0	; select bank0
  3200  04F7  1190               	bcf	16,3	;volatile
  3201  04F8                     l286:
  3202  04F8  0008               	return
  3203  04F9                     __end_of_i2c_start:
  3204                           
  3205                           	psect	text12
  3206  04FF                     __ptext12:	
  3207 ;; *************** function _calculate_pid *****************
  3208 ;; Defined at:
  3209 ;;		line 173 in file "config.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		None
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function _calculate_pid
  3239  04FF                     _calculate_pid:
  3240  04FF                     l308:	
  3241                           ;incstack = 0
  3242                           ; Regs used in _calculate_pid: []
  3243                           
  3244  04FF  0008               	return
  3245  0500                     __end_of_calculate_pid:
  3246                           
  3247                           	psect	text13
  3248  04CD                     __ptext13:	
  3249 ;; *************** function _battery_compensation *****************
  3250 ;; Defined at:
  3251 ;;		line 181 in file "config.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           
  3280                           ;psect for function _battery_compensation
  3281  04CD                     _battery_compensation:
  3282  04CD                     l1823:	
  3283                           ;incstack = 0
  3284                           ; Regs used in _battery_compensation: [wreg]
  3285                           
  3286                           
  3287                           ;config.c: 183:     ADCON0bits.GO = 1;
  3288  04CD  0021               	movlb	1	; select bank1
  3289  04CE  149D               	bsf	29,1	;volatile
  3290  04CF                     l314:	
  3291                           ;config.c: 184:     while(ADCON0bits.GO);
  3292                           
  3293  04CF  189D               	btfsc	29,1	;volatile
  3294  04D0  2CD2               	goto	u1291
  3295  04D1  2CD3               	goto	u1290
  3296  04D2                     u1291:
  3297  04D2  2CCF               	goto	l314
  3298  04D3                     u1290:
  3299  04D3                     l316:
  3300                           
  3301                           ;config.c: 185:     PIR1bits.ADIF = 0;
  3302  04D3  0020               	movlb	0	; select bank0
  3303  04D4  1310               	bcf	16,6	;volatile
  3304  04D5                     l1825:
  3305                           
  3306                           ;config.c: 186:     voltage = (unsigned)((ADRESH << 8) | ADRESL);
  3307  04D5  0021               	movlb	1	; select bank1
  3308  04D6  081C               	movf	28,w	;volatile
  3309  04D7  0020               	movlb	0	; select bank0
  3310  04D8  00A1               	movwf	_voltage+1
  3311  04D9  0021               	movlb	1	; select bank1
  3312  04DA  081B               	movf	27,w	;volatile
  3313  04DB  0020               	movlb	0	; select bank0
  3314  04DC  00A0               	movwf	_voltage
  3315  04DD                     l317:
  3316  04DD  0008               	return
  3317  04DE                     __end_of_battery_compensation:
  3318                           
  3319                           	psect	text14
  3320  0500                     __ptext14:	
  3321 ;; *************** function _balance_drone *****************
  3322 ;; Defined at:
  3323 ;;		line 177 in file "config.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		None
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _balance_drone
  3353  0500                     _balance_drone:
  3354  0500                     l311:	
  3355                           ;incstack = 0
  3356                           ; Regs used in _balance_drone: []
  3357                           
  3358  0500  0008               	return
  3359  0501                     __end_of_balance_drone:
  3360                           
  3361                           	psect	intentry
  3362  0004                     __pintentry:	
  3363 ;; *************** function _remote *****************
  3364 ;; Defined at:
  3365 ;;		line 190 in file "config.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;Total ram usage:        6 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		Interrupt level 1
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392  0004                     _remote:
  3393                           
  3394                           ;incstack = 0
  3395  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3396                           
  3397                           ; Regs used in _remote: [wreg+status,2+status,0]
  3398  0005  3180               	pagesel	$
  3399  0006                     i1l1533:
  3400                           
  3401                           ;config.c: 192:     if(INTCONbits.T0IF)
  3402  0006  1D0B               	btfss	11,2	;volatile
  3403  0007  2809               	goto	u98_21
  3404  0008  280A               	goto	u98_20
  3405  0009                     u98_21:
  3406  0009  2810               	goto	i1l1539
  3407  000A                     u98_20:
  3408  000A                     i1l1535:
  3409                           
  3410                           ;config.c: 193:     {;config.c: 194:         TMR0H++;
  3411  000A  3001               	movlw	1
  3412  000B  0020               	movlb	0	; select bank0
  3413  000C  07AA               	addwf	_TMR0H,f
  3414  000D  3000               	movlw	0
  3415  000E  3DAB               	addwfc	_TMR0H+1,f
  3416  000F                     i1l1537:
  3417                           
  3418                           ;config.c: 195:         INTCONbits.T0IF = 0;
  3419  000F  110B               	bcf	11,2	;volatile
  3420  0010                     i1l1539:
  3421                           
  3422                           ;config.c: 198:     if(PIR1bits.TMR2IF){
  3423  0010  0020               	movlb	0	; select bank0
  3424  0011  1C90               	btfss	16,1	;volatile
  3425  0012  2814               	goto	u99_21
  3426  0013  2815               	goto	u99_20
  3427  0014                     u99_21:
  3428  0014  281A               	goto	i1l1545
  3429  0015                     u99_20:
  3430  0015                     i1l1541:
  3431                           
  3432                           ;config.c: 199:         TMR2H++;
  3433  0015  3001               	movlw	1
  3434  0016  07F2               	addwf	_TMR2H,f
  3435  0017  3000               	movlw	0
  3436  0018  3DF3               	addwfc	_TMR2H+1,f
  3437  0019                     i1l1543:
  3438                           
  3439                           ;config.c: 200:         PIR1bits.TMR2IF = 0;
  3440  0019  1090               	bcf	16,1	;volatile
  3441  001A                     i1l1545:
  3442                           
  3443                           ;config.c: 203:     if(INTCONbits.IOCIF){
  3444  001A  1C0B               	btfss	11,0	;volatile
  3445  001B  281D               	goto	u100_21
  3446  001C  281E               	goto	u100_20
  3447  001D                     u100_21:
  3448  001D  28E6               	goto	i1l341
  3449  001E                     u100_20:
  3450  001E                     i1l1547:
  3451                           
  3452                           ;config.c: 204:         if(IOCCFbits.IOCCF3)
  3453  001E  0027               	movlb	7	; select bank7
  3454  001F  1D99               	btfss	25,3	;volatile
  3455  0020  2822               	goto	u101_21
  3456  0021  2823               	goto	u101_20
  3457  0022                     u101_21:
  3458  0022  284A               	goto	i1l1571
  3459  0023                     u101_20:
  3460  0023                     i1l1549:
  3461                           
  3462                           ;config.c: 205:         {;config.c: 206:             if(p.p1)
  3463  0023  0020               	movlb	0	; select bank0
  3464  0024  1C47               	btfss	_p,0
  3465  0025  2827               	goto	u102_21
  3466  0026  2828               	goto	u102_20
  3467  0027                     u102_21:
  3468  0027  283F               	goto	i1l326
  3469  0028                     u102_20:
  3470  0028                     i1l1551:
  3471                           
  3472                           ;config.c: 207:             {;config.c: 208:                 T1CONbits.TMR1ON = 0;
  3473  0028  1018               	bcf	24,0	;volatile
  3474  0029                     i1l1553:
  3475                           
  3476                           ;config.c: 209:                 if(TMR1 < 2100)
  3477  0029  3008               	movlw	8
  3478  002A  0217               	subwf	23,w	;volatile
  3479  002B  3034               	movlw	52
  3480  002C  1903               	skipnz
  3481  002D  0216               	subwf	22,w	;volatile
  3482  002E  1803               	skipnc
  3483  002F  2831               	goto	u103_21
  3484  0030  2832               	goto	u103_20
  3485  0031                     u103_21:
  3486  0031  2836               	goto	i1l1557
  3487  0032                     u103_20:
  3488  0032                     i1l1555:
  3489                           
  3490                           ;config.c: 210:                     ch1 = TMR1;
  3491  0032  0817               	movf	23,w	;volatile
  3492  0033  00F1               	movwf	_ch1+1
  3493  0034  0816               	movf	22,w	;volatile
  3494  0035  00F0               	movwf	_ch1
  3495  0036                     i1l1557:
  3496                           
  3497                           ;config.c: 211:                 IOCCN &= 0b11110111;
  3498  0036  30F7               	movlw	247
  3499  0037  00F6               	movwf	??_remote
  3500  0038  0876               	movf	??_remote,w
  3501  0039  0027               	movlb	7	; select bank7
  3502  003A  0598               	andwf	24,f	;volatile
  3503  003B                     i1l1559:
  3504                           
  3505                           ;config.c: 212:                 IOCCP |= 0b00001000;
  3506  003B  1597               	bsf	23,3	;volatile
  3507  003C                     i1l1561:
  3508                           
  3509                           ;config.c: 213:                 p.p1 = 0;
  3510  003C  0020               	movlb	0	; select bank0
  3511  003D  1047               	bcf	_p,0
  3512                           
  3513                           ;config.c: 214:             }
  3514  003E  284A               	goto	i1l1571
  3515  003F                     i1l326:	
  3516                           ;config.c: 215:             else
  3517                           
  3518                           
  3519                           ;config.c: 216:             {;config.c: 217:                 T1CONbits.TMR1ON = 1;
  3520  003F  1418               	bsf	24,0	;volatile
  3521  0040                     i1l1563:
  3522                           
  3523                           ;config.c: 218:                 TMR1 = 0;
  3524  0040  0196               	clrf	22	;volatile
  3525  0041  0197               	clrf	23	;volatile
  3526  0042                     i1l1565:
  3527                           
  3528                           ;config.c: 219:                 IOCCP &= 0b11110111;
  3529  0042  30F7               	movlw	247
  3530  0043  00F6               	movwf	??_remote
  3531  0044  0876               	movf	??_remote,w
  3532  0045  0027               	movlb	7	; select bank7
  3533  0046  0597               	andwf	23,f	;volatile
  3534  0047                     i1l1567:
  3535                           
  3536                           ;config.c: 220:                 IOCCN |= 0b00001000;
  3537  0047  1598               	bsf	24,3	;volatile
  3538  0048                     i1l1569:
  3539                           
  3540                           ;config.c: 221:                 p.p1 = 1;
  3541  0048  0020               	movlb	0	; select bank0
  3542  0049  1447               	bsf	_p,0
  3543  004A                     i1l1571:
  3544                           
  3545                           ;config.c: 225:         if(IOCCFbits.IOCCF4)
  3546  004A  0027               	movlb	7	; select bank7
  3547  004B  1E19               	btfss	25,4	;volatile
  3548  004C  284E               	goto	u104_21
  3549  004D  284F               	goto	u104_20
  3550  004E                     u104_21:
  3551  004E  287A               	goto	i1l1599
  3552  004F                     u104_20:
  3553  004F                     i1l1573:
  3554                           
  3555                           ;config.c: 226:         {;config.c: 227:             if(p.p2)
  3556  004F  0020               	movlb	0	; select bank0
  3557  0050  1CC7               	btfss	_p,1
  3558  0051  2853               	goto	u105_21
  3559  0052  2854               	goto	u105_20
  3560  0053                     u105_21:
  3561  0053  286D               	goto	i1l330
  3562  0054                     u105_20:
  3563  0054                     i1l1575:
  3564                           
  3565                           ;config.c: 228:             {;config.c: 229:                 T3CONbits.TMR3ON = 0;
  3566  0054  0029               	movlb	9	; select bank9
  3567  0055  1015               	bcf	21,0	;volatile
  3568  0056                     i1l1577:
  3569                           
  3570                           ;config.c: 230:                 IOCCN &= 0b11101111;
  3571  0056  30EF               	movlw	239
  3572  0057  00F6               	movwf	??_remote
  3573  0058  0876               	movf	??_remote,w
  3574  0059  0027               	movlb	7	; select bank7
  3575  005A  0598               	andwf	24,f	;volatile
  3576  005B                     i1l1579:
  3577                           
  3578                           ;config.c: 231:                 IOCCP |= 0b00010000;
  3579  005B  1617               	bsf	23,4	;volatile
  3580  005C                     i1l1581:
  3581                           
  3582                           ;config.c: 232:                 if(TMR3H < 9)
  3583  005C  3009               	movlw	9
  3584  005D  0029               	movlb	9	; select bank9
  3585  005E  0214               	subwf	20,w	;volatile
  3586  005F  1803               	skipnc
  3587  0060  2862               	goto	u106_21
  3588  0061  2863               	goto	u106_20
  3589  0062                     u106_21:
  3590  0062  286A               	goto	i1l1585
  3591  0063                     u106_20:
  3592  0063                     i1l1583:
  3593                           
  3594                           ;config.c: 233:                     ch2 = ((unsigned)TMR3H<<8) | (unsigned)TMR3L;
  3595  0063  0814               	movf	20,w	;volatile
  3596  0064  0020               	movlb	0	; select bank0
  3597  0065  00A7               	movwf	_ch2+1
  3598  0066  0029               	movlb	9	; select bank9
  3599  0067  0813               	movf	19,w	;volatile
  3600  0068  0020               	movlb	0	; select bank0
  3601  0069  00A6               	movwf	_ch2
  3602  006A                     i1l1585:
  3603                           
  3604                           ;config.c: 234:                 p.p2 = 0;
  3605  006A  0020               	movlb	0	; select bank0
  3606  006B  10C7               	bcf	_p,1
  3607                           
  3608                           ;config.c: 235:             }
  3609  006C  287A               	goto	i1l1599
  3610  006D                     i1l330:	
  3611                           ;config.c: 236:             else
  3612                           
  3613                           
  3614                           ;config.c: 237:             {;config.c: 238:                 IOCCN |= 0b00010000;
  3615  006D  0027               	movlb	7	; select bank7
  3616  006E  1618               	bsf	24,4	;volatile
  3617  006F                     i1l1587:
  3618                           
  3619                           ;config.c: 239:                 IOCCP &= 0b11101111;
  3620  006F  30EF               	movlw	239
  3621  0070  00F6               	movwf	??_remote
  3622  0071  0876               	movf	??_remote,w
  3623  0072  0597               	andwf	23,f	;volatile
  3624  0073                     i1l1589:
  3625                           
  3626                           ;config.c: 240:                 TMR3L = 0;
  3627  0073  0029               	movlb	9	; select bank9
  3628  0074  0193               	clrf	19	;volatile
  3629  0075                     i1l1591:
  3630                           
  3631                           ;config.c: 241:                 TMR3H = 0;
  3632  0075  0194               	clrf	20	;volatile
  3633  0076                     i1l1593:
  3634                           
  3635                           ;config.c: 242:                 TMR3L = 0;
  3636  0076  0193               	clrf	19	;volatile
  3637  0077                     i1l1595:
  3638                           
  3639                           ;config.c: 243:                 T3CONbits.TMR3ON = 1;
  3640  0077  1415               	bsf	21,0	;volatile
  3641  0078                     i1l1597:
  3642                           
  3643                           ;config.c: 244:                 p.p2 = 1;
  3644  0078  0020               	movlb	0	; select bank0
  3645  0079  14C7               	bsf	_p,1
  3646  007A                     i1l1599:
  3647                           
  3648                           ;config.c: 248:         if(IOCCFbits.IOCCF5)
  3649  007A  0027               	movlb	7	; select bank7
  3650  007B  1E99               	btfss	25,5	;volatile
  3651  007C  287E               	goto	u107_21
  3652  007D  287F               	goto	u107_20
  3653  007E                     u107_21:
  3654  007E  28A9               	goto	i1l1625
  3655  007F                     u107_20:
  3656  007F                     i1l1601:
  3657                           
  3658                           ;config.c: 249:         {;config.c: 250:             if(p.p3)
  3659  007F  0020               	movlb	0	; select bank0
  3660  0080  1D47               	btfss	_p,2
  3661  0081  2883               	goto	u108_21
  3662  0082  2884               	goto	u108_20
  3663  0083                     u108_21:
  3664  0083  289D               	goto	i1l334
  3665  0084                     u108_20:
  3666  0084                     i1l1603:
  3667                           
  3668                           ;config.c: 251:             {;config.c: 252:                 T5CONbits.TMR5ON = 0;
  3669  0084  0029               	movlb	9	; select bank9
  3670  0085  101C               	bcf	28,0	;volatile
  3671  0086                     i1l1605:
  3672                           
  3673                           ;config.c: 253:                 IOCCN &= 0b11011111;
  3674  0086  30DF               	movlw	223
  3675  0087  00F6               	movwf	??_remote
  3676  0088  0876               	movf	??_remote,w
  3677  0089  0027               	movlb	7	; select bank7
  3678  008A  0598               	andwf	24,f	;volatile
  3679  008B                     i1l1607:
  3680                           
  3681                           ;config.c: 254:                 IOCCP |= 0b00100000;
  3682  008B  1697               	bsf	23,5	;volatile
  3683  008C                     i1l1609:
  3684                           
  3685                           ;config.c: 255:                 if(TMR5H < 9)
  3686  008C  3009               	movlw	9
  3687  008D  0029               	movlb	9	; select bank9
  3688  008E  021B               	subwf	27,w	;volatile
  3689  008F  1803               	skipnc
  3690  0090  2892               	goto	u109_21
  3691  0091  2893               	goto	u109_20
  3692  0092                     u109_21:
  3693  0092  289A               	goto	i1l1613
  3694  0093                     u109_20:
  3695  0093                     i1l1611:
  3696                           
  3697                           ;config.c: 256:                     ch3 = ((unsigned)TMR5H << 8) | (unsigned)TMR5L;
  3698  0093  081B               	movf	27,w	;volatile
  3699  0094  0020               	movlb	0	; select bank0
  3700  0095  00A5               	movwf	_ch3+1
  3701  0096  0029               	movlb	9	; select bank9
  3702  0097  081A               	movf	26,w	;volatile
  3703  0098  0020               	movlb	0	; select bank0
  3704  0099  00A4               	movwf	_ch3
  3705  009A                     i1l1613:
  3706                           
  3707                           ;config.c: 257:                 p.p3 = 0;
  3708  009A  0020               	movlb	0	; select bank0
  3709  009B  1147               	bcf	_p,2
  3710                           
  3711                           ;config.c: 258:             }
  3712  009C  28A9               	goto	i1l1625
  3713  009D                     i1l334:	
  3714                           ;config.c: 259:             else
  3715                           
  3716                           
  3717                           ;config.c: 260:             {;config.c: 261:                 IOCCN |= 0b00100000;
  3718  009D  0027               	movlb	7	; select bank7
  3719  009E  1698               	bsf	24,5	;volatile
  3720  009F                     i1l1615:
  3721                           
  3722                           ;config.c: 262:                 IOCCP &= 0b11011111;
  3723  009F  30DF               	movlw	223
  3724  00A0  00F6               	movwf	??_remote
  3725  00A1  0876               	movf	??_remote,w
  3726  00A2  0597               	andwf	23,f	;volatile
  3727  00A3                     i1l1617:
  3728                           
  3729                           ;config.c: 263:                 TMR5L = 0;
  3730  00A3  0029               	movlb	9	; select bank9
  3731  00A4  019A               	clrf	26	;volatile
  3732  00A5                     i1l1619:
  3733                           
  3734                           ;config.c: 264:                 TMR5H = 0;
  3735  00A5  019B               	clrf	27	;volatile
  3736  00A6                     i1l1621:
  3737                           
  3738                           ;config.c: 265:                 T5CONbits.TMR5ON = 1;
  3739  00A6  141C               	bsf	28,0	;volatile
  3740  00A7                     i1l1623:
  3741                           
  3742                           ;config.c: 266:                 p.p3 = 1;
  3743  00A7  0020               	movlb	0	; select bank0
  3744  00A8  1547               	bsf	_p,2
  3745  00A9                     i1l1625:
  3746                           
  3747                           ;config.c: 270:         if(IOCCFbits.IOCCF6)
  3748  00A9  0027               	movlb	7	; select bank7
  3749  00AA  1F19               	btfss	25,6	;volatile
  3750  00AB  28AD               	goto	u110_21
  3751  00AC  28AE               	goto	u110_20
  3752  00AD                     u110_21:
  3753  00AD  28E3               	goto	i1l1651
  3754  00AE                     u110_20:
  3755  00AE                     i1l1627:
  3756                           
  3757                           ;config.c: 271:         {;config.c: 272:             if(p.p4)
  3758  00AE  0020               	movlb	0	; select bank0
  3759  00AF  1DC7               	btfss	_p,3
  3760  00B0  28B2               	goto	u111_21
  3761  00B1  28B3               	goto	u111_20
  3762  00B2                     u111_21:
  3763  00B2  28D7               	goto	i1l338
  3764  00B3                     u111_20:
  3765  00B3                     i1l1629:
  3766                           
  3767                           ;config.c: 273:             {;config.c: 274:                 T2CONbits.ON = 0;
  3768  00B3  139C               	bcf	28,7	;volatile
  3769  00B4                     i1l1631:
  3770                           
  3771                           ;config.c: 275:                 IOCCN &= 0b10111111;
  3772  00B4  30BF               	movlw	191
  3773  00B5  00F6               	movwf	??_remote
  3774  00B6  0876               	movf	??_remote,w
  3775  00B7  0027               	movlb	7	; select bank7
  3776  00B8  0598               	andwf	24,f	;volatile
  3777  00B9                     i1l1633:
  3778                           
  3779                           ;config.c: 276:                 IOCCP |= 0b01000000;
  3780  00B9  1717               	bsf	23,6	;volatile
  3781  00BA                     i1l1635:
  3782                           
  3783                           ;config.c: 277:                 if(TMR2H < 9)
  3784  00BA  3000               	movlw	0
  3785  00BB  0273               	subwf	_TMR2H+1,w
  3786  00BC  3009               	movlw	9
  3787  00BD  1903               	skipnz
  3788  00BE  0272               	subwf	_TMR2H,w
  3789  00BF  1803               	skipnc
  3790  00C0  28C2               	goto	u112_21
  3791  00C1  28C3               	goto	u112_20
  3792  00C2                     u112_21:
  3793  00C2  28D4               	goto	i1l1639
  3794  00C3                     u112_20:
  3795  00C3                     i1l1637:
  3796                           
  3797                           ;config.c: 278:                     ch4 = (TMR2H<<8) | TMR2;
  3798  00C3  0020               	movlb	0	; select bank0
  3799  00C4  081A               	movf	26,w	;volatile
  3800  00C5  00F6               	movwf	??_remote
  3801  00C6  01F7               	clrf	??_remote+1
  3802  00C7  0872               	movf	_TMR2H,w
  3803  00C8  00F9               	movwf	??_remote+3
  3804  00C9  01F8               	clrf	??_remote+2
  3805  00CA  0876               	movf	??_remote,w
  3806  00CB  0478               	iorwf	??_remote+2,w
  3807  00CC  00FA               	movwf	??_remote+4
  3808  00CD  0877               	movf	??_remote+1,w
  3809  00CE  0479               	iorwf	??_remote+3,w
  3810  00CF  00FB               	movwf	??_remote+5
  3811  00D0  087A               	movf	??_remote+4,w
  3812  00D1  00A2               	movwf	_ch4
  3813  00D2  087B               	movf	??_remote+5,w
  3814  00D3  00A3               	movwf	_ch4+1
  3815  00D4                     i1l1639:
  3816                           
  3817                           ;config.c: 279:                 p.p4 = 0;
  3818  00D4  0020               	movlb	0	; select bank0
  3819  00D5  11C7               	bcf	_p,3
  3820                           
  3821                           ;config.c: 280:             }
  3822  00D6  28E3               	goto	i1l1651
  3823  00D7                     i1l338:	
  3824                           ;config.c: 281:             else
  3825                           
  3826                           
  3827                           ;config.c: 282:             {;config.c: 283:                 IOCCN |= 0b01000000;
  3828  00D7  0027               	movlb	7	; select bank7
  3829  00D8  1718               	bsf	24,6	;volatile
  3830  00D9                     i1l1641:
  3831                           
  3832                           ;config.c: 284:                 IOCCP &= 0b10111111;
  3833  00D9  30BF               	movlw	191
  3834  00DA  00F6               	movwf	??_remote
  3835  00DB  0876               	movf	??_remote,w
  3836  00DC  0597               	andwf	23,f	;volatile
  3837  00DD                     i1l1643:
  3838                           
  3839                           ;config.c: 285:                 TMR2 = 0;
  3840  00DD  0020               	movlb	0	; select bank0
  3841  00DE  019A               	clrf	26	;volatile
  3842  00DF                     i1l1645:
  3843                           
  3844                           ;config.c: 286:                 TMR2H = 0;
  3845  00DF  01F2               	clrf	_TMR2H
  3846  00E0  01F3               	clrf	_TMR2H+1
  3847  00E1                     i1l1647:
  3848                           
  3849                           ;config.c: 287:                 T2CONbits.ON = 1;
  3850  00E1  179C               	bsf	28,7	;volatile
  3851  00E2                     i1l1649:
  3852                           
  3853                           ;config.c: 288:                 p.p4 = 1;
  3854  00E2  15C7               	bsf	_p,3
  3855  00E3                     i1l1651:
  3856                           
  3857                           ;config.c: 291:         IOCCF = 0;
  3858  00E3  0027               	movlb	7	; select bank7
  3859  00E4  0199               	clrf	25	;volatile
  3860  00E5                     i1l1653:
  3861                           
  3862                           ;config.c: 292:         INTCONbits.IOCIF = 0;
  3863  00E5  100B               	bcf	11,0	;volatile
  3864  00E6                     i1l341:
  3865  00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3866  00E7  0009               	retfie
  3867  00E8                     __end_of_remote:
  3868  007E                     btemp	set	126	;btemp
  3869  007E                     int$flags	set	126
  3870  007E                     wtemp0	set	126
  3871                           
  3872                           	psect	config
  3873                           
  3874                           ;Config register CONFIG1 @ 0x8007
  3875                           ;	Oscillator Selection Bits
  3876                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3877                           ;	Power-up Timer Enable
  3878                           ;	PWRTE = OFF, PWRT disabled
  3879                           ;	MCLR Pin Function Select
  3880                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3881                           ;	Flash Program Memory Code Protection
  3882                           ;	CP = OFF, Program memory code protection is disabled
  3883                           ;	Brown-out Reset Enable
  3884                           ;	BOREN = OFF, Brown-out Reset disabled
  3885                           ;	Clock Out Enable
  3886                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3887                           ;	Internal/External Switch Over
  3888                           ;	IESO = ON, Internal External Switch Over mode is enabled
  3889                           ;	Fail-Safe Clock Monitor Enable
  3890                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3891  8007                     	org	32775
  3892  8007  39BC               	dw	14780
  3893                           
  3894                           ;Config register CONFIG2 @ 0x8008
  3895                           ;	Flash Memory Self-Write Protection
  3896                           ;	WRT = OFF, Write protection off
  3897                           ;	Peripheral Pin Select one-way control
  3898                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3899                           ;	Zero Cross Detect Disable Bit
  3900                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3901                           ;	PLL Enable Bit
  3902                           ;	PLLEN = ON, 4x PLL is always enabled
  3903                           ;	Stack Overflow/Underflow Reset Enable
  3904                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3905                           ;	Brown-out Reset Voltage Selection
  3906                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3907                           ;	Low-Power Brown Out Reset
  3908                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3909                           ;	Low-Voltage Programming Enable
  3910                           ;	LVP = ON, Low-voltage programming enabled
  3911  8008                     	org	32776
  3912  8008  3FFF               	dw	16383
  3913                           
  3914                           ;Config register CONFIG3 @ 0x8009
  3915                           ;	WDT Period Select
  3916                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3917                           ;	Watchdog Timer Enable
  3918                           ;	WDTE = OFF, WDT disabled
  3919                           ;	WDT Window Select
  3920                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3921                           ;	WDT Input Clock Selector
  3922                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3923  8009                     	org	32777
  3924  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      66
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _remote in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_sensor
    _read_sensor->_i2c_read
    _i2c_read->_i2c_read_byte
    _gyro_config->_i2c_write
    _i2c_write->_nack

Critical Paths under _remote in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _remote in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _remote in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _remote in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _remote in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _remote in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _remote in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _remote in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _remote in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _remote in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _remote in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _remote in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _remote in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2544
                                             18 BANK0      8     8      0
                      _balance_drone
               _battery_compensation
                      _calculate_pid
                        _gyro_config
                           _pic_init
                        _read_sensor
 ---------------------------------------------------------------------------------
 (1) _read_sensor                                          1     1      0    1160
                                             17 BANK0      1     1      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                            10     8      2    1160
                                              7 BANK0     10     8      2
                      _i2c_read_byte
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_byte                                        7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gyro_config                                          2     2      0    1384
                                              5 BANK0      2     2      0
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    1384
                                              2 BANK0      3     1      2
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _nack                                                 2     0      2       0
                                              0 BANK0      2     0      2
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_write_byte                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calculate_pid                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _battery_compensation                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _balance_drone                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _remote                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _balance_drone
   _battery_compensation
   _calculate_pid
   _gyro_config
     _i2c_write
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _pic_init
   _read_sensor
     _i2c_read
       _i2c_read_byte
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop

 _remote (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Apr 20 20:28:44 2022

                            _p 0047                             l90 0256                             l91 0276  
                           l83 01EA                             l84 01F7                             l85 0204  
                           l89 0236                            l302 04E9                            l311 0500  
                          l304 04ED                            l305 04EF                            l314 04CF  
                          l250 044B                            l316 04D3                            l308 04FF  
                          l244 039E                            l317 04DD                            l253 0324  
                          l246 03A2                            l270 0487                            l247 03F7  
                          l263 0396                            l280 04CC                            l257 0482  
                          l273 049B                            l283 04F2                            l275 049F  
                          l291 04E4                            l276 04A5                            l292 04E6  
                          l285 04F6                            l286 04F8                            l295 04AE  
                          l297 04B2                            l289 04E0                            l299 04BA  
                          _ch1 0070                            _ch2 0026                            _ch3 0024  
                          _ch4 0022                            wreg 0009        __size_of_i2c_write_byte 0015  
                         l1701 0461                           l1711 0327                           l1705 0470  
                         l1801 03E0                           l1721 033C                           l1713 032A  
                         l1811 03EC                           l1803 03E1                           l1731 0354  
                         l1715 032F                           l1661 04AA                           l1709 047F  
                         l1813 03F0                           l1805 03E5                           l1741 0374  
                         l1717 0339                           l1821 02AE                           l1901 01E6  
                         l1823 04CD                           l1663 04B9                           l1655 04E7  
                         l1815 03F2                           l1807 03E7                           l1743 037B  
                         l1727 034B                           l1911 0216                           l1903 01F3  
                         l1831 0104                           l1825 04D5                           l1657 04F0  
                         l1673 04C9                           l1665 04BB                           l1817 03F6  
                         l1809 03EB                           l1761 03AD                           l1753 0397  
                         l1681 048B                           l1737 035F                           l1729 034E  
                         l1913 0232                           l1921 0296                           l1905 0200  
                         l1841 0110                           l1833 0106                           l1659 04A8  
                         l1667 04C0                           l1819 03F8                           l1771 03BB  
                         l1763 03B1                           l1755 03A7                           l1683 0493  
                         l1739 0371                           l1915 0252                           l1907 020D  
                         l1923 029C                           l1851 0130                           l1843 0115  
                         l1835 010B                           l1827 00FC                           l1669 04C3  
                         l1693 044E                           l1781 03C7                           l1773 03BD  
                         l1765 03B4                           l1757 03AA                           l1685 0494  
                         l1677 04DE                           l1749 0389                           l1925 02A5  
                         l1917 0272                           l1909 0211                           l1861 0155  
                         l1853 0139                           l1845 0125                           l1837 010D  
                         l1829 0102                           l1695 0451                           l1791 03D2  
                         l1783 03C8                           l1775 03BF                           l1767 03B6  
                         l1759 03AC                           l1687 049A                           l1679 0485  
                         l1919 0292                           l1871 0174                           l1863 015E  
                         l1855 0142                           l1847 0129                           l1839 010E  
                         l1697 0456                           l1793 03D5                           l1785 03CA  
                         l1777 03C1                           l1769 03B9                           l1689 04A1  
                         l1881 0186                           l1873 017D                           l1865 0162  
                         l1857 0146                           l1849 012B                           l1795 03D7  
                         l1787 03CC                           l1779 03C5                           l1891 01B3  
                         l1883 0189                           l1875 017E                           l1859 014C  
                         l1867 0164                           l1797 03DA                           l1789 03D0  
                         l1893 01B7                           l1885 018C                           l1869 016B  
                         l1877 0180                           l1799 03DC                           l1895 01D2  
                         l1887 019D                           l1879 0183                           l1897 01D8  
                         l1889 01AD                           l1899 01DD                           u1200 049F  
                         u1201 049E                           u1130 04ED                           u1210 0460  
                         u1131 04EC                           u1211 045F                           u1140 04F6  
                         u1220 046F                           u1300 0115                           u1141 04F5  
                         u1221 046E                           u1301 0114                           u1150 04B2  
                         u1230 047E                           u1310 0130                           u1151 04B1  
                         u1231 047D                           u1311 012F                           u1160 04B9  
                         u1240 0339                           u1400 01B3                           u1320 0139  
                         u1161 04B8                           u1241 0338                           u1401 01B2  
                         u1321 0138                           u1170 04C0                           u1250 034A  
                         u1410 01D2                           u1330 0142                           u1171 04BF  
                         u1251 0349                           u1411 01D1                           u1331 0141  
                         u1180 04E4                           u1260 035E                           u1500 0292  
                         u1420 01D8                           u1340 014C                           u1181 04E3  
                         u1261 035D                           u1501 0291                           u1421 01D7  
                         u1341 014B                           u1190 048B                           u1270 037B  
                         u1510 029C                           u1430 01E6                           u1350 0155  
                         u1191 048A                           u1271 037A                           u1511 029B  
                         u1431 01E5                           u1351 0154                           u1280 03A2  
                         u1520 02A5                           u1440 01F3                           u1360 015E  
                         u1281 03A1                           u1521 02A4                           u1505 028E  
                         u1441 01F2                           u1361 015D                           u1290 04D3  
                         u1530 02AB                           u1450 0200                           u1370 016B  
                         u1291 04D2                           u1531 02AA                           u1451 01FF  
                         u1371 016A                           u1460 020D                           u1380 0174  
                         u1461 020C                           u1381 0173                           u1470 0232  
                         u1390 017D                           u1471 0231                           u1391 017C  
                         u1480 0252                           u1481 0251                           u1490 0272  
                         u1491 0271                           u1475 022E                           u1485 024E  
                         u1495 026E                           _RCEN 10B3                           _TMR0 0015  
                         _TMR1 0016                           _TMR2 001A                           _accx 0044  
                         _accy 0042                           _accz 0040                           _esc1 0032  
                         _esc2 0030                           _esc3 002E                           _esc4 002C  
                _i2c_read_byte 0483                           _nack 04BB                           _main 00FC  
                         _magx 0038                           _magy 0036                           _magz 0034  
                         fsr0h 0005                           indf0 0000                           fsr0l 0004  
                         btemp 007E                           start 00E8                  ??_i2c_restart 0048  
                        ?_nack 0048                          ?_main 0076                          _IOCCF 0399  
                        _IOCCN 0398                          _IOCCP 0397                    i2c_read@low 0054  
                        i1l330 006D                          _T2RST 001F                          i1l341 00E6  
                        i1l334 009D                          i1l326 003F                          i1l338 00D7  
                        _TMR0H 002A                          _TMR2H 0072                          _TMR3H 0494  
                        _TMR3L 0493                          _TMR5H 049B                          _TMR5L 049A  
                        _PORTA 000C                          _TRISA 008C                          _TRISB 008D  
                        _TRISC 008E                          u98_20 000A                          u98_21 0009  
                        u99_20 0015                          u99_21 0014         ??_battery_compensation 0048  
                        _count 0074                   ?_read_sensor 0076                          _gyrox 003E  
                        _gyroy 003C                          _gyroz 003A                          _start 0046  
               ?_i2c_read_byte 0048                          status 0003                          wtemp0 007E  
              __initialization 00EA                   __end_of_nack 04CD                   __end_of_main 02AE  
             __end_of_i2c_read 0397               __end_of_i2c_stop 04F0            __end_of_i2c_restart 04E7  
                       ??_nack 004A                         ??_main 005A                         _ADRESH 009C  
                       _ADRESL 009B                         _ANSELA 018C                         _ANSELB 018D  
                       _ANSELC 018E                   ?_gyro_config 0076                   i2c_read@high 0056  
                       u100_20 001E                         u100_21 001D                         _RB4PPS 0E9C  
                       u101_20 0023                         u101_21 0022                         u110_20 00AE  
                       u102_20 0028                         u110_21 00AD                         u102_21 0027  
                       _RB6PPS 0E9E                         u111_20 00B3                         u103_20 0032  
                       u111_21 00B2                         u103_21 0031                         u112_20 00C3  
                       u104_20 004F                         u112_21 00C2                         i1l1601 007F  
                       u104_21 004E                         i1l1611 0093                         i1l1603 0084  
                       i1l1621 00A6                         i1l1613 009A                         i1l1605 0086  
                       i1l1541 0015                         i1l1533 0006                         i1l1631 00B4  
                       i1l1623 00A7                         i1l1615 009F                         i1l1607 008B  
                       i1l1551 0028                         i1l1543 0019                         i1l1535 000A  
                       u105_20 0054                         i1l1641 00D9                         i1l1633 00B9  
                       i1l1617 00A3                         i1l1609 008C                         i1l1625 00A9  
                       u105_21 0053                         i1l1561 003C                         i1l1553 0029  
                       i1l1545 001A                         i1l1537 000F                         i1l1643 00DD  
                       i1l1635 00BA                         i1l1627 00AE                         i1l1651 00E3  
                       i1l1619 00A5                         i1l1563 0040                         i1l1555 0032  
                       i1l1571 004A                         i1l1547 001E                         i1l1539 0010  
                       i1l1653 00E5                         i1l1645 00DF                         i1l1637 00C3  
                       i1l1629 00B3                         i1l1581 005C                         i1l1573 004F  
                       i1l1565 0042                         i1l1557 0036                         i1l1549 0023  
                       i1l1647 00E1                         i1l1639 00D4                         i1l1591 0075  
                       i1l1583 0063                         i1l1575 0054                         i1l1567 0047  
                       i1l1559 003B                         u106_20 0063                         i1l1649 00E2  
                       i1l1593 0076                         i1l1585 006A                         u106_21 0062  
                       i1l1577 0056                         i1l1569 0048                         i1l1595 0077  
                       i1l1587 006F                         i1l1579 005B                         i1l1597 0078  
                       i1l1589 0073                         i1l1599 007A                         u107_20 007F  
                       u107_21 007E                         u108_20 0084                         u108_21 0083  
                       u109_20 0093                         u109_21 0092             __size_of_i2c_start 0009  
           __size_of_i2c_write 0037               __end_of_pic_init 03F8                         _remote 0004  
       __size_of_balance_drone 0001                 _i2c_write_byte 04A6                ??_i2c_read_byte 004A  
      __end_of__initialization 00F8                 __pcstackCOMMON 0076                    _i2c_restart 04DE  
            __end_of_i2c_start 04F9              __end_of_i2c_write 0483                 _OPTION_REGbits 0095  
       __end_of_i2c_write_byte 04BB                     __pbssBANK0 0020           __size_of_read_sensor 0077  
                    ?_i2c_read 004F                      ?_i2c_stop 0076                  _balance_drone 0500  
                   __pmaintext 00FC                     __pintentry 0004                        ?_remote 0076  
       __size_of_calculate_pid 0001                ?_i2c_write_byte 0076                        _SSP1ADD 0212  
                      _SSP1BUF 0211          i2c_write_byte@address 0048                     ??_i2c_read 0051  
                   ??_i2c_stop 0048                 ?_balance_drone 0076           __size_of_gyro_config 0054  
                    ?_pic_init 0076                i2c_read@address 0058                __size_of_remote 00E4  
                      __ptext1 02AE                        __ptext2 0325                        __ptext3 04DE  
                      __ptext4 0483                        __ptext5 0397                        __ptext6 03F8  
                      __ptext7 044C                        __ptext8 04BB                        __ptext9 04E7  
                    _T1CONbits 0018                      _T2CONbits 001C                      _T3CONbits 0495  
                    _T2HLTbits 001D                      _T5CONbits 049C                      _IOCCFbits 0399  
                      _tmrLoop 0028  __size_of_battery_compensation 0011                        clrloop0 04FA  
                      _voltage 0020           end_of_initialization 00F8                     ??_pic_init 0048  
                _calculate_pid 04FF                      _SSPDATPPS 0E21                      _SSPCLKPPS 0E20  
                i2c_write@data 004B                ??_balance_drone 0048                 ?_calculate_pid 0076  
                 ?_i2c_restart 0076             i2c_read@subaddress 004F                 __end_of_remote 00E8  
          start_initialization 00EA                      _i2c_start 04F0                      _i2c_write 044C  
        __end_of_i2c_read_byte 04A6              __size_of_i2c_read 0072              __size_of_i2c_stop 0009  
             ??_i2c_write_byte 0048                       ??_remote 0076                    __pbssCOMMON 0070  
                    ___latbits 0002                  __pcstackBANK0 0048                     ?_i2c_start 0076  
                   ?_i2c_write 004A                  ??_read_sensor 0059                ??_calculate_pid 0048  
            __size_of_pic_init 0061                       _T2CLKCON 001E                  ??_gyro_config 004D  
                     _LATCbits 010E            __end_of_read_sensor 0325                      clear_ram0 04F9  
                     _PIE1bits 0090                       _PIR1bits 0010   __end_of_battery_compensation 04DE  
         __size_of_i2c_restart 0009                     _ADCON0bits 009D                     _ADCON1bits 009E  
                  ??_i2c_start 0048                    ??_i2c_write 004C                       _i2c_read 0325  
                     _i2c_stop 04E7            __end_of_gyro_config 044C                       __ptext10 04A6  
                     __ptext11 04F0                       __ptext12 04FF                       __ptext13 04CD  
                     __ptext14 0500                   _SSP1CON1bits 0215                   _SSP1CON2bits 0216  
                  _read_sensor 02AE          __end_of_balance_drone 0501                  __size_of_nack 0012  
                __size_of_main 01B2                       _pic_init 0397                       int$flags 007E  
                   _ODCONBbits 028D                   _SSP1STATbits 0214                    _OSCSTATbits 009A  
                   _INTCONbits 000B           _battery_compensation 04CD                    _gyro_config 03F8  
                     intlevel1 0000            i2c_write@subaddress 004A                    _SSP1CONbits 0215  
                   _OSCCONbits 0099         __size_of_i2c_read_byte 0023               i2c_write@address 004C  
                  _SSPCON2bits 0216          ?_battery_compensation 0076              i2c_read_byte@temp 004D  
        __end_of_calculate_pid 0500               i2c_read_byte@ack 004C  
