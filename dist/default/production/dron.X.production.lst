

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Apr 19 21:22:40 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1619 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011C                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0199                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  020E                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  028C                     	;# 
   183  028D                     	;# 
   184  028E                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029E                     	;# 
   196  030C                     	;# 
   197  030D                     	;# 
   198  030E                     	;# 
   199  038C                     	;# 
   200  038D                     	;# 
   201  038E                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0397                     	;# 
   209  0398                     	;# 
   210  0399                     	;# 
   211  040E                     	;# 
   212  0413                     	;# 
   213  0413                     	;# 
   214  0414                     	;# 
   215  0414                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  0418                     	;# 
   220  041A                     	;# 
   221  041A                     	;# 
   222  041B                     	;# 
   223  041B                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  041F                     	;# 
   228  0493                     	;# 
   229  0494                     	;# 
   230  0495                     	;# 
   231  0496                     	;# 
   232  049A                     	;# 
   233  049B                     	;# 
   234  049C                     	;# 
   235  049D                     	;# 
   236  058C                     	;# 
   237  058C                     	;# 
   238  058D                     	;# 
   239  058E                     	;# 
   240  058E                     	;# 
   241  058F                     	;# 
   242  0590                     	;# 
   243  0590                     	;# 
   244  0591                     	;# 
   245  0592                     	;# 
   246  0592                     	;# 
   247  0593                     	;# 
   248  0594                     	;# 
   249  0594                     	;# 
   250  0595                     	;# 
   251  0596                     	;# 
   252  0596                     	;# 
   253  0597                     	;# 
   254  0598                     	;# 
   255  0599                     	;# 
   256  059A                     	;# 
   257  059B                     	;# 
   258  059B                     	;# 
   259  059C                     	;# 
   260  059D                     	;# 
   261  060C                     	;# 
   262  060C                     	;# 
   263  060D                     	;# 
   264  060E                     	;# 
   265  060F                     	;# 
   266  060F                     	;# 
   267  0610                     	;# 
   268  0611                     	;# 
   269  0612                     	;# 
   270  0613                     	;# 
   271  0614                     	;# 
   272  0617                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  061A                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  0691                     	;# 
   281  0692                     	;# 
   282  0693                     	;# 
   283  0694                     	;# 
   284  0695                     	;# 
   285  0696                     	;# 
   286  0697                     	;# 
   287  0699                     	;# 
   288  069A                     	;# 
   289  0711                     	;# 
   290  0712                     	;# 
   291  0713                     	;# 
   292  0714                     	;# 
   293  0715                     	;# 
   294  0718                     	;# 
   295  0718                     	;# 
   296  0719                     	;# 
   297  071A                     	;# 
   298  071A                     	;# 
   299  071B                     	;# 
   300  071C                     	;# 
   301  071D                     	;# 
   302  0791                     	;# 
   303  0791                     	;# 
   304  0792                     	;# 
   305  0793                     	;# 
   306  0793                     	;# 
   307  0794                     	;# 
   308  0795                     	;# 
   309  0795                     	;# 
   310  0796                     	;# 
   311  0797                     	;# 
   312  0797                     	;# 
   313  0798                     	;# 
   314  0799                     	;# 
   315  079A                     	;# 
   316  080C                     	;# 
   317  080C                     	;# 
   318  080D                     	;# 
   319  080E                     	;# 
   320  080E                     	;# 
   321  080F                     	;# 
   322  0810                     	;# 
   323  0810                     	;# 
   324  0811                     	;# 
   325  0812                     	;# 
   326  0812                     	;# 
   327  0813                     	;# 
   328  0814                     	;# 
   329  0815                     	;# 
   330  0816                     	;# 
   331  0817                     	;# 
   332  0818                     	;# 
   333  0819                     	;# 
   334  081A                     	;# 
   335  081A                     	;# 
   336  081B                     	;# 
   337  081C                     	;# 
   338  081C                     	;# 
   339  081D                     	;# 
   340  088C                     	;# 
   341  088D                     	;# 
   342  088E                     	;# 
   343  088F                     	;# 
   344  088F                     	;# 
   345  0890                     	;# 
   346  0891                     	;# 
   347  0892                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0894                     	;# 
   351  0895                     	;# 
   352  0896                     	;# 
   353  0897                     	;# 
   354  0897                     	;# 
   355  0898                     	;# 
   356  0899                     	;# 
   357  0D8C                     	;# 
   358  0D8C                     	;# 
   359  0D8D                     	;# 
   360  0D8E                     	;# 
   361  0D8F                     	;# 
   362  0D8F                     	;# 
   363  0D90                     	;# 
   364  0D91                     	;# 
   365  0D92                     	;# 
   366  0D92                     	;# 
   367  0D93                     	;# 
   368  0D94                     	;# 
   369  0D95                     	;# 
   370  0D95                     	;# 
   371  0D96                     	;# 
   372  0D97                     	;# 
   373  0D98                     	;# 
   374  0D99                     	;# 
   375  0D9A                     	;# 
   376  0D9B                     	;# 
   377  0D9C                     	;# 
   378  0D9D                     	;# 
   379  0D9E                     	;# 
   380  0D9E                     	;# 
   381  0D9F                     	;# 
   382  0DA0                     	;# 
   383  0DA1                     	;# 
   384  0DA1                     	;# 
   385  0DA2                     	;# 
   386  0DA3                     	;# 
   387  0DA4                     	;# 
   388  0DA4                     	;# 
   389  0DA5                     	;# 
   390  0DA6                     	;# 
   391  0DA7                     	;# 
   392  0DA7                     	;# 
   393  0DA8                     	;# 
   394  0DA9                     	;# 
   395  0DAA                     	;# 
   396  0DAB                     	;# 
   397  0DAC                     	;# 
   398  0DAD                     	;# 
   399  0DAE                     	;# 
   400  0DAF                     	;# 
   401  0E0F                     	;# 
   402  0E10                     	;# 
   403  0E11                     	;# 
   404  0E12                     	;# 
   405  0E13                     	;# 
   406  0E14                     	;# 
   407  0E15                     	;# 
   408  0E16                     	;# 
   409  0E17                     	;# 
   410  0E18                     	;# 
   411  0E19                     	;# 
   412  0E1A                     	;# 
   413  0E1B                     	;# 
   414  0E1C                     	;# 
   415  0E1D                     	;# 
   416  0E1E                     	;# 
   417  0E1F                     	;# 
   418  0E20                     	;# 
   419  0E21                     	;# 
   420  0E22                     	;# 
   421  0E23                     	;# 
   422  0E24                     	;# 
   423  0E25                     	;# 
   424  0E26                     	;# 
   425  0E27                     	;# 
   426  0E28                     	;# 
   427  0E29                     	;# 
   428  0E2A                     	;# 
   429  0E2B                     	;# 
   430  0E2C                     	;# 
   431  0E2D                     	;# 
   432  0E2E                     	;# 
   433  0E90                     	;# 
   434  0E91                     	;# 
   435  0E92                     	;# 
   436  0E94                     	;# 
   437  0E95                     	;# 
   438  0E9C                     	;# 
   439  0E9D                     	;# 
   440  0E9E                     	;# 
   441  0E9F                     	;# 
   442  0EA0                     	;# 
   443  0EA1                     	;# 
   444  0EA2                     	;# 
   445  0EA3                     	;# 
   446  0EA4                     	;# 
   447  0EA5                     	;# 
   448  0EA6                     	;# 
   449  0EA7                     	;# 
   450  0F0F                     	;# 
   451  0F10                     	;# 
   452  0F11                     	;# 
   453  0F12                     	;# 
   454  0F13                     	;# 
   455  0F14                     	;# 
   456  0F15                     	;# 
   457  0F16                     	;# 
   458  0F17                     	;# 
   459  0F18                     	;# 
   460  0F19                     	;# 
   461  0F1A                     	;# 
   462  0F1B                     	;# 
   463  0F1C                     	;# 
   464  0F1D                     	;# 
   465  0F1E                     	;# 
   466  0F1F                     	;# 
   467  0F20                     	;# 
   468  0F21                     	;# 
   469  0F22                     	;# 
   470  0F23                     	;# 
   471  0F24                     	;# 
   472  0F25                     	;# 
   473  0F26                     	;# 
   474  0F27                     	;# 
   475  0F28                     	;# 
   476  0F29                     	;# 
   477  0F2A                     	;# 
   478  0F2B                     	;# 
   479  0F2C                     	;# 
   480  0F2D                     	;# 
   481  0F2E                     	;# 
   482  0F2F                     	;# 
   483  0F30                     	;# 
   484  0F31                     	;# 
   485  0F32                     	;# 
   486  0F33                     	;# 
   487  0F34                     	;# 
   488  0F35                     	;# 
   489  0F36                     	;# 
   490  0F37                     	;# 
   491  0FE4                     	;# 
   492  0FE5                     	;# 
   493  0FE6                     	;# 
   494  0FE7                     	;# 
   495  0FE8                     	;# 
   496  0FE9                     	;# 
   497  0FEA                     	;# 
   498  0FEB                     	;# 
   499  0FED                     	;# 
   500  0FEE                     	;# 
   501  0FEF                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  0010                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0013                     	;# 
   521  0014                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  001D                     	;# 
   534  001E                     	;# 
   535  001F                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  0090                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011C                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  0211                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0212                     	;# 
   612  0213                     	;# 
   613  0213                     	;# 
   614  0214                     	;# 
   615  0214                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  028C                     	;# 
   625  028D                     	;# 
   626  028E                     	;# 
   627  0291                     	;# 
   628  0291                     	;# 
   629  0292                     	;# 
   630  0293                     	;# 
   631  0294                     	;# 
   632  0298                     	;# 
   633  0298                     	;# 
   634  0299                     	;# 
   635  029A                     	;# 
   636  029B                     	;# 
   637  029E                     	;# 
   638  030C                     	;# 
   639  030D                     	;# 
   640  030E                     	;# 
   641  038C                     	;# 
   642  038D                     	;# 
   643  038E                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  040E                     	;# 
   654  0413                     	;# 
   655  0413                     	;# 
   656  0414                     	;# 
   657  0414                     	;# 
   658  0415                     	;# 
   659  0416                     	;# 
   660  0417                     	;# 
   661  0418                     	;# 
   662  041A                     	;# 
   663  041A                     	;# 
   664  041B                     	;# 
   665  041B                     	;# 
   666  041C                     	;# 
   667  041D                     	;# 
   668  041E                     	;# 
   669  041F                     	;# 
   670  0493                     	;# 
   671  0494                     	;# 
   672  0495                     	;# 
   673  0496                     	;# 
   674  049A                     	;# 
   675  049B                     	;# 
   676  049C                     	;# 
   677  049D                     	;# 
   678  058C                     	;# 
   679  058C                     	;# 
   680  058D                     	;# 
   681  058E                     	;# 
   682  058E                     	;# 
   683  058F                     	;# 
   684  0590                     	;# 
   685  0590                     	;# 
   686  0591                     	;# 
   687  0592                     	;# 
   688  0592                     	;# 
   689  0593                     	;# 
   690  0594                     	;# 
   691  0594                     	;# 
   692  0595                     	;# 
   693  0596                     	;# 
   694  0596                     	;# 
   695  0597                     	;# 
   696  0598                     	;# 
   697  0599                     	;# 
   698  059A                     	;# 
   699  059B                     	;# 
   700  059B                     	;# 
   701  059C                     	;# 
   702  059D                     	;# 
   703  060C                     	;# 
   704  060C                     	;# 
   705  060D                     	;# 
   706  060E                     	;# 
   707  060F                     	;# 
   708  060F                     	;# 
   709  0610                     	;# 
   710  0611                     	;# 
   711  0612                     	;# 
   712  0613                     	;# 
   713  0614                     	;# 
   714  0617                     	;# 
   715  0617                     	;# 
   716  0618                     	;# 
   717  0619                     	;# 
   718  061A                     	;# 
   719  061A                     	;# 
   720  061B                     	;# 
   721  061C                     	;# 
   722  0691                     	;# 
   723  0692                     	;# 
   724  0693                     	;# 
   725  0694                     	;# 
   726  0695                     	;# 
   727  0696                     	;# 
   728  0697                     	;# 
   729  0699                     	;# 
   730  069A                     	;# 
   731  0711                     	;# 
   732  0712                     	;# 
   733  0713                     	;# 
   734  0714                     	;# 
   735  0715                     	;# 
   736  0718                     	;# 
   737  0718                     	;# 
   738  0719                     	;# 
   739  071A                     	;# 
   740  071A                     	;# 
   741  071B                     	;# 
   742  071C                     	;# 
   743  071D                     	;# 
   744  0791                     	;# 
   745  0791                     	;# 
   746  0792                     	;# 
   747  0793                     	;# 
   748  0793                     	;# 
   749  0794                     	;# 
   750  0795                     	;# 
   751  0795                     	;# 
   752  0796                     	;# 
   753  0797                     	;# 
   754  0797                     	;# 
   755  0798                     	;# 
   756  0799                     	;# 
   757  079A                     	;# 
   758  080C                     	;# 
   759  080C                     	;# 
   760  080D                     	;# 
   761  080E                     	;# 
   762  080E                     	;# 
   763  080F                     	;# 
   764  0810                     	;# 
   765  0810                     	;# 
   766  0811                     	;# 
   767  0812                     	;# 
   768  0812                     	;# 
   769  0813                     	;# 
   770  0814                     	;# 
   771  0815                     	;# 
   772  0816                     	;# 
   773  0817                     	;# 
   774  0818                     	;# 
   775  0819                     	;# 
   776  081A                     	;# 
   777  081A                     	;# 
   778  081B                     	;# 
   779  081C                     	;# 
   780  081C                     	;# 
   781  081D                     	;# 
   782  088C                     	;# 
   783  088D                     	;# 
   784  088E                     	;# 
   785  088F                     	;# 
   786  088F                     	;# 
   787  0890                     	;# 
   788  0891                     	;# 
   789  0892                     	;# 
   790  0893                     	;# 
   791  0893                     	;# 
   792  0894                     	;# 
   793  0895                     	;# 
   794  0896                     	;# 
   795  0897                     	;# 
   796  0897                     	;# 
   797  0898                     	;# 
   798  0899                     	;# 
   799  0D8C                     	;# 
   800  0D8C                     	;# 
   801  0D8D                     	;# 
   802  0D8E                     	;# 
   803  0D8F                     	;# 
   804  0D8F                     	;# 
   805  0D90                     	;# 
   806  0D91                     	;# 
   807  0D92                     	;# 
   808  0D92                     	;# 
   809  0D93                     	;# 
   810  0D94                     	;# 
   811  0D95                     	;# 
   812  0D95                     	;# 
   813  0D96                     	;# 
   814  0D97                     	;# 
   815  0D98                     	;# 
   816  0D99                     	;# 
   817  0D9A                     	;# 
   818  0D9B                     	;# 
   819  0D9C                     	;# 
   820  0D9D                     	;# 
   821  0D9E                     	;# 
   822  0D9E                     	;# 
   823  0D9F                     	;# 
   824  0DA0                     	;# 
   825  0DA1                     	;# 
   826  0DA1                     	;# 
   827  0DA2                     	;# 
   828  0DA3                     	;# 
   829  0DA4                     	;# 
   830  0DA4                     	;# 
   831  0DA5                     	;# 
   832  0DA6                     	;# 
   833  0DA7                     	;# 
   834  0DA7                     	;# 
   835  0DA8                     	;# 
   836  0DA9                     	;# 
   837  0DAA                     	;# 
   838  0DAB                     	;# 
   839  0DAC                     	;# 
   840  0DAD                     	;# 
   841  0DAE                     	;# 
   842  0DAF                     	;# 
   843  0E0F                     	;# 
   844  0E10                     	;# 
   845  0E11                     	;# 
   846  0E12                     	;# 
   847  0E13                     	;# 
   848  0E14                     	;# 
   849  0E15                     	;# 
   850  0E16                     	;# 
   851  0E17                     	;# 
   852  0E18                     	;# 
   853  0E19                     	;# 
   854  0E1A                     	;# 
   855  0E1B                     	;# 
   856  0E1C                     	;# 
   857  0E1D                     	;# 
   858  0E1E                     	;# 
   859  0E1F                     	;# 
   860  0E20                     	;# 
   861  0E21                     	;# 
   862  0E22                     	;# 
   863  0E23                     	;# 
   864  0E24                     	;# 
   865  0E25                     	;# 
   866  0E26                     	;# 
   867  0E27                     	;# 
   868  0E28                     	;# 
   869  0E29                     	;# 
   870  0E2A                     	;# 
   871  0E2B                     	;# 
   872  0E2C                     	;# 
   873  0E2D                     	;# 
   874  0E2E                     	;# 
   875  0E90                     	;# 
   876  0E91                     	;# 
   877  0E92                     	;# 
   878  0E94                     	;# 
   879  0E95                     	;# 
   880  0E9C                     	;# 
   881  0E9D                     	;# 
   882  0E9E                     	;# 
   883  0E9F                     	;# 
   884  0EA0                     	;# 
   885  0EA1                     	;# 
   886  0EA2                     	;# 
   887  0EA3                     	;# 
   888  0EA4                     	;# 
   889  0EA5                     	;# 
   890  0EA6                     	;# 
   891  0EA7                     	;# 
   892  0F0F                     	;# 
   893  0F10                     	;# 
   894  0F11                     	;# 
   895  0F12                     	;# 
   896  0F13                     	;# 
   897  0F14                     	;# 
   898  0F15                     	;# 
   899  0F16                     	;# 
   900  0F17                     	;# 
   901  0F18                     	;# 
   902  0F19                     	;# 
   903  0F1A                     	;# 
   904  0F1B                     	;# 
   905  0F1C                     	;# 
   906  0F1D                     	;# 
   907  0F1E                     	;# 
   908  0F1F                     	;# 
   909  0F20                     	;# 
   910  0F21                     	;# 
   911  0F22                     	;# 
   912  0F23                     	;# 
   913  0F24                     	;# 
   914  0F25                     	;# 
   915  0F26                     	;# 
   916  0F27                     	;# 
   917  0F28                     	;# 
   918  0F29                     	;# 
   919  0F2A                     	;# 
   920  0F2B                     	;# 
   921  0F2C                     	;# 
   922  0F2D                     	;# 
   923  0F2E                     	;# 
   924  0F2F                     	;# 
   925  0F30                     	;# 
   926  0F31                     	;# 
   927  0F32                     	;# 
   928  0F33                     	;# 
   929  0F34                     	;# 
   930  0F35                     	;# 
   931  0F36                     	;# 
   932  0F37                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944  0016                     _TMR1	set	22
   945  001A                     _TMR2	set	26
   946  0010                     _PIR1bits	set	16
   947  001F                     _T2RST	set	31
   948  001D                     _T2HLTbits	set	29
   949  001C                     _T2CONbits	set	28
   950  001E                     _T2CLKCON	set	30
   951  0018                     _T1CONbits	set	24
   952  000B                     _INTCONbits	set	11
   953  000C                     _PORTA	set	12
   954  0015                     _TMR0	set	21
   955  008E                     _TRISC	set	142
   956  008D                     _TRISB	set	141
   957  008C                     _TRISA	set	140
   958  0095                     _OPTION_REGbits	set	149
   959  0090                     _PIE1bits	set	144
   960  009A                     _OSCSTATbits	set	154
   961  0099                     _OSCCONbits	set	153
   962  010E                     _LATCbits	set	270
   963  018E                     _ANSELC	set	398
   964  018D                     _ANSELB	set	397
   965  018C                     _ANSELA	set	396
   966  0215                     _SSP1CON1bits	set	533
   967  0214                     _SSP1STATbits	set	532
   968  0216                     _SSPCON2bits	set	534
   969  0211                     _SSP1BUF	set	529
   970  0216                     _SSP1CON2bits	set	534
   971  0212                     _SSP1ADD	set	530
   972  0215                     _SSP1CONbits	set	533
   973  10B3                     _RCEN	set	4275
   974  028D                     _ODCONBbits	set	653
   975  0399                     _IOCCF	set	921
   976  0398                     _IOCCN	set	920
   977  0399                     _IOCCFbits	set	921
   978  0397                     _IOCCP	set	919
   979  049A                     _TMR5L	set	1178
   980  049B                     _TMR5H	set	1179
   981  0493                     _TMR3L	set	1171
   982  0494                     _TMR3H	set	1172
   983  049C                     _T5CONbits	set	1180
   984  0495                     _T3CONbits	set	1173
   985  0E20                     _SSPCLKPPS	set	3616
   986  0E21                     _SSPDATPPS	set	3617
   987  0E9E                     _RB6PPS	set	3742
   988  0E9C                     _RB4PPS	set	3740
   989                           
   990                           	psect	cinit
   991  00EA                     start_initialization:	
   992                           ; #config settings
   993                           
   994  00EA                     __initialization:
   995                           
   996                           ; Clear objects allocated to COMMON
   997  00EA  01F0               	clrf	__pbssCOMMON& (0+127)
   998  00EB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   999  00EC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1000  00ED  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1001  00EE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1002  00EF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1003                           
  1004                           ; Clear objects allocated to BANK0
  1005  00F0  3020               	movlw	low __pbssBANK0
  1006  00F1  0084               	movwf	4
  1007  00F2  3000               	movlw	high __pbssBANK0
  1008  00F3  0085               	movwf	5
  1009  00F4  302A               	movlw	42
  1010  00F5  3184  24A5  3180   	fcall	clear_ram0
  1011  00F8                     end_of_initialization:	
  1012                           ;End of C runtime variable initialization code
  1013                           
  1014  00F8                     __end_of__initialization:
  1015  00F8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1016  00F9  0020               	movlb	0
  1017  00FA  3180  28FC         	ljmp	_main	;jump to C main() function
  1018                           
  1019                           	psect	bssCOMMON
  1020  0070                     __pbssCOMMON:
  1021  0070                     _ch1:
  1022  0070                     	ds	2
  1023  0072                     _TMR2H:
  1024  0072                     	ds	2
  1025  0074                     _count:
  1026  0074                     	ds	2
  1027                           
  1028                           	psect	bssBANK0
  1029  0020                     __pbssBANK0:
  1030  0020                     _voltaje:
  1031  0020                     	ds	4
  1032  0024                     _ch4:
  1033  0024                     	ds	2
  1034  0026                     _ch3:
  1035  0026                     	ds	2
  1036  0028                     _ch2:
  1037  0028                     	ds	2
  1038  002A                     _tmrLoop:
  1039  002A                     	ds	2
  1040  002C                     _TMR0H:
  1041  002C                     	ds	2
  1042  002E                     _esc4:
  1043  002E                     	ds	2
  1044  0030                     _esc3:
  1045  0030                     	ds	2
  1046  0032                     _esc2:
  1047  0032                     	ds	2
  1048  0034                     _esc1:
  1049  0034                     	ds	2
  1050  0036                     _magz:
  1051  0036                     	ds	2
  1052  0038                     _magy:
  1053  0038                     	ds	2
  1054  003A                     _magx:
  1055  003A                     	ds	2
  1056  003C                     _gyroz:
  1057  003C                     	ds	2
  1058  003E                     _gyroy:
  1059  003E                     	ds	2
  1060  0040                     _gyrox:
  1061  0040                     	ds	2
  1062  0042                     _accz:
  1063  0042                     	ds	2
  1064  0044                     _accy:
  1065  0044                     	ds	2
  1066  0046                     _accx:
  1067  0046                     	ds	2
  1068  0048                     _start:
  1069  0048                     	ds	1
  1070  0049                     _p:
  1071  0049                     	ds	1
  1072                           
  1073                           	psect	clrtext
  1074  04A5                     clear_ram0:	
  1075                           ;	Called with FSR0 containing the base address, and
  1076                           ;	WREG with the size to clear
  1077                           
  1078  04A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1079  04A6                     clrloop0:
  1080  04A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1081  04A7  3101               	addfsr 0,1
  1082  04A8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1083  04A9  2CA6               	goto	clrloop0	;have we reached the end yet?
  1084  04AA  3400               	retlw	0	;all done for this memory range, return
  1085                           
  1086                           	psect	cstackCOMMON
  1087  0076                     __pcstackCOMMON:
  1088  0076                     ?_pic_init:
  1089  0076                     ?_gyro_config:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0076                     ?_read_sensor:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0076                     ?_i2c_start:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0076                     ?_i2c_write_byte:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0076                     ?_i2c_stop:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0076                     ?_i2c_restart:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0076                     ?_main:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0076                     ?_remote:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0076                     ??_remote:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0x0
  1118  0076                     	ds	6
  1119                           
  1120                           	psect	cstackBANK0
  1121  004A                     __pcstackBANK0:
  1122  004A                     ??_pic_init:
  1123  004A                     ??_i2c_start:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  004A                     ??_i2c_write_byte:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  004A                     ??_i2c_stop:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  004A                     ??_i2c_restart:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  004A                     ?_nack:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  004A                     ?_i2c_read_byte:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141  004A                     i2c_write_byte@address:	
  1142                           ; 2 bytes @ 0x0
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0x0
  1146  004A                     	ds	2
  1147  004C                     ?_i2c_write:
  1148  004C                     ??_nack:	
  1149                           ; 1 bytes @ 0x2
  1150                           
  1151  004C                     ??_i2c_read_byte:	
  1152                           ; 1 bytes @ 0x2
  1153                           
  1154  004C                     i2c_write@subaddress:	
  1155                           ; 1 bytes @ 0x2
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x2
  1159  004C                     	ds	1
  1160  004D                     i2c_write@data:
  1161                           
  1162                           ; 1 bytes @ 0x3
  1163  004D                     	ds	1
  1164  004E                     ??_i2c_write:
  1165  004E                     i2c_write@address:	
  1166                           ; 1 bytes @ 0x4
  1167                           
  1168  004E                     i2c_read_byte@ack:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0x4
  1173  004E                     	ds	1
  1174  004F                     ??_gyro_config:
  1175  004F                     i2c_read_byte@temp:	
  1176                           ; 1 bytes @ 0x5
  1177                           
  1178                           
  1179                           ; 2 bytes @ 0x5
  1180  004F                     	ds	2
  1181  0051                     ?_i2c_read:
  1182  0051                     i2c_read@subaddress:	
  1183                           ; 2 bytes @ 0x7
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x7
  1187  0051                     	ds	2
  1188  0053                     ??_i2c_read:
  1189                           
  1190                           ; 1 bytes @ 0x9
  1191  0053                     	ds	3
  1192  0056                     i2c_read@low:
  1193                           
  1194                           ; 2 bytes @ 0xC
  1195  0056                     	ds	2
  1196  0058                     i2c_read@high:
  1197                           
  1198                           ; 2 bytes @ 0xE
  1199  0058                     	ds	2
  1200  005A                     i2c_read@address:
  1201                           
  1202                           ; 1 bytes @ 0x10
  1203  005A                     	ds	1
  1204  005B                     ??_read_sensor:
  1205                           
  1206                           ; 1 bytes @ 0x11
  1207  005B                     	ds	1
  1208  005C                     ??_main:
  1209                           
  1210                           ; 1 bytes @ 0x12
  1211  005C                     	ds	8
  1212                           
  1213                           	psect	maintext
  1214  00FC                     __pmaintext:	
  1215 ;;
  1216 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1217 ;;
  1218 ;; *************** function _main *****************
  1219 ;; Defined at:
  1220 ;;		line 35 in file "main.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : B1F/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1236 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1237 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;Total ram usage:        8 bytes
  1239 ;; Hardware stack levels required when called:    5
  1240 ;; This function calls:
  1241 ;;		_gyro_config
  1242 ;;		_pic_init
  1243 ;;		_read_sensor
  1244 ;; This function is called by:
  1245 ;;		Startup code after reset
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _main
  1251  00FC                     _main:
  1252  00FC                     l1743:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;main.c: 37:     pic_init();
  1258  00FC  3183  2361  3180   	fcall	_pic_init
  1259                           
  1260                           ;main.c: 38:     gyro_config();
  1261  00FF  3183  23B5  3180   	fcall	_gyro_config
  1262  0102                     l1745:
  1263                           
  1264                           ;main.c: 40:     start = 3;
  1265  0102  3003               	movlw	3
  1266  0103  0020               	movlb	0	; select bank0
  1267  0104  00DC               	movwf	??_main
  1268  0105  085C               	movf	??_main,w
  1269  0106  00C8               	movwf	_start
  1270  0107                     l1747:
  1271                           
  1272                           ;main.c: 41:     LATCbits.LATC7 = 0;
  1273  0107  0022               	movlb	2	; select bank2
  1274  0108  138E               	bcf	14,7	;volatile
  1275  0109                     l1749:
  1276                           
  1277                           ;main.c: 42:     ch3 = 2000;
  1278  0109  30D0               	movlw	208
  1279  010A  0020               	movlb	0	; select bank0
  1280  010B  00A6               	movwf	_ch3
  1281  010C  3007               	movlw	7
  1282  010D  00A7               	movwf	_ch3+1
  1283  010E                     l1751:
  1284                           
  1285                           ;main.c: 43:     p.p1 = p.p2 = p.p3 = p.p4 = 0;
  1286  010E  11C9               	bcf	_p,3
  1287  010F  1149               	bcf	_p,2
  1288  0110  10C9               	bcf	_p,1
  1289  0111  1049               	bcf	_p,0
  1290  0112                     l1753:
  1291                           
  1292                           ;main.c: 46:         TMR0H = 0;
  1293  0112  01AC               	clrf	_TMR0H
  1294  0113  01AD               	clrf	_TMR0H+1
  1295  0114                     l1755:
  1296                           
  1297                           ;main.c: 47:         TMR0 = 0;
  1298  0114  0195               	clrf	21	;volatile
  1299  0115                     l1757:
  1300                           
  1301                           ;main.c: 48:         TMR0H = 0;
  1302  0115  01AC               	clrf	_TMR0H
  1303  0116  01AD               	clrf	_TMR0H+1
  1304  0117                     l1759:
  1305                           
  1306                           ;main.c: 50:         if(!start){
  1307  0117  0848               	movf	_start,w
  1308  0118  1D03               	btfss	3,2
  1309  0119  291B               	goto	u1191
  1310  011A  291C               	goto	u1190
  1311  011B                     u1191:
  1312  011B  2932               	goto	l1767
  1313  011C                     u1190:
  1314  011C                     l1761:
  1315                           
  1316                           ;main.c: 52:             esc1 = esc2 = esc3 = esc4 = 1000;
  1317  011C  30E8               	movlw	232
  1318  011D  00AE               	movwf	_esc4
  1319  011E  3003               	movlw	3
  1320  011F  00AF               	movwf	_esc4+1
  1321  0120  082F               	movf	_esc4+1,w
  1322  0121  00B1               	movwf	_esc3+1
  1323  0122  082E               	movf	_esc4,w
  1324  0123  00B0               	movwf	_esc3
  1325  0124  0831               	movf	_esc3+1,w
  1326  0125  00B3               	movwf	_esc2+1
  1327  0126  0830               	movf	_esc3,w
  1328  0127  00B2               	movwf	_esc2
  1329  0128  0833               	movf	_esc2+1,w
  1330  0129  00B5               	movwf	_esc1+1
  1331  012A  0832               	movf	_esc2,w
  1332  012B  00B4               	movwf	_esc1
  1333  012C                     l1763:
  1334                           
  1335                           ;main.c: 53:             p.p1 = p.p2 = p.p3 = p.p4 = 0;
  1336  012C  11C9               	bcf	_p,3
  1337  012D  1149               	bcf	_p,2
  1338  012E  10C9               	bcf	_p,1
  1339  012F  1049               	bcf	_p,0
  1340  0130                     l1765:
  1341                           
  1342                           ;main.c: 54:             start = 1;
  1343  0130  01C8               	clrf	_start
  1344  0131  0AC8               	incf	_start,f
  1345  0132                     l1767:
  1346                           
  1347                           ;main.c: 56:         if(start == 1 && ch4 > 1900 && ch3 < 1050){
  1348  0132  0348               	decf	_start,w
  1349  0133  1D03               	btfss	3,2
  1350  0134  2936               	goto	u1201
  1351  0135  2937               	goto	u1200
  1352  0136                     u1201:
  1353  0136  294D               	goto	l1775
  1354  0137                     u1200:
  1355  0137                     l1769:
  1356  0137  3007               	movlw	7
  1357  0138  0225               	subwf	_ch4+1,w
  1358  0139  306D               	movlw	109
  1359  013A  1903               	skipnz
  1360  013B  0224               	subwf	_ch4,w
  1361  013C  1C03               	skipc
  1362  013D  293F               	goto	u1211
  1363  013E  2940               	goto	u1210
  1364  013F                     u1211:
  1365  013F  294D               	goto	l1775
  1366  0140                     u1210:
  1367  0140                     l1771:
  1368  0140  3004               	movlw	4
  1369  0141  0227               	subwf	_ch3+1,w
  1370  0142  301A               	movlw	26
  1371  0143  1903               	skipnz
  1372  0144  0226               	subwf	_ch3,w
  1373  0145  1803               	skipnc
  1374  0146  2948               	goto	u1221
  1375  0147  2949               	goto	u1220
  1376  0148                     u1221:
  1377  0148  294D               	goto	l1775
  1378  0149                     u1220:
  1379  0149                     l1773:
  1380                           
  1381                           ;main.c: 57:             start = 2;
  1382  0149  3002               	movlw	2
  1383  014A  00DC               	movwf	??_main
  1384  014B  085C               	movf	??_main,w
  1385  014C  00C8               	movwf	_start
  1386  014D                     l1775:
  1387                           
  1388                           ;main.c: 60:         if(start == 2 && ch4 < 1600 && ch3 < 1050){
  1389  014D  3002               	movlw	2
  1390  014E  0648               	xorwf	_start,w
  1391  014F  1D03               	btfss	3,2
  1392  0150  2952               	goto	u1231
  1393  0151  2953               	goto	u1230
  1394  0152                     u1231:
  1395  0152  296B               	goto	l1785
  1396  0153                     u1230:
  1397  0153                     l1777:
  1398  0153  3006               	movlw	6
  1399  0154  0225               	subwf	_ch4+1,w
  1400  0155  3040               	movlw	64
  1401  0156  1903               	skipnz
  1402  0157  0224               	subwf	_ch4,w
  1403  0158  1803               	skipnc
  1404  0159  295B               	goto	u1241
  1405  015A  295C               	goto	u1240
  1406  015B                     u1241:
  1407  015B  296B               	goto	l1785
  1408  015C                     u1240:
  1409  015C                     l1779:
  1410  015C  3004               	movlw	4
  1411  015D  0227               	subwf	_ch3+1,w
  1412  015E  301A               	movlw	26
  1413  015F  1903               	skipnz
  1414  0160  0226               	subwf	_ch3,w
  1415  0161  1803               	skipnc
  1416  0162  2964               	goto	u1251
  1417  0163  2965               	goto	u1250
  1418  0164                     u1251:
  1419  0164  296B               	goto	l1785
  1420  0165                     u1250:
  1421  0165                     l1781:
  1422                           
  1423                           ;main.c: 61:             start = 3;
  1424  0165  3003               	movlw	3
  1425  0166  00DC               	movwf	??_main
  1426  0167  085C               	movf	??_main,w
  1427  0168  00C8               	movwf	_start
  1428  0169                     l1783:
  1429                           
  1430                           ;main.c: 62:             LATCbits.LATC7 = 1;
  1431  0169  0022               	movlb	2	; select bank2
  1432  016A  178E               	bsf	14,7	;volatile
  1433  016B                     l1785:
  1434                           
  1435                           ;main.c: 66:         if(start == 3 && ch4 < 1050 && ch3 < 1050){
  1436  016B  3003               	movlw	3
  1437  016C  0020               	movlb	0	; select bank0
  1438  016D  0648               	xorwf	_start,w
  1439  016E  1D03               	btfss	3,2
  1440  016F  2971               	goto	u1261
  1441  0170  2972               	goto	u1260
  1442  0171                     u1261:
  1443  0171  2987               	goto	l1795
  1444  0172                     u1260:
  1445  0172                     l1787:
  1446  0172  3004               	movlw	4
  1447  0173  0225               	subwf	_ch4+1,w
  1448  0174  301A               	movlw	26
  1449  0175  1903               	skipnz
  1450  0176  0224               	subwf	_ch4,w
  1451  0177  1803               	skipnc
  1452  0178  297A               	goto	u1271
  1453  0179  297B               	goto	u1270
  1454  017A                     u1271:
  1455  017A  2987               	goto	l1795
  1456  017B                     u1270:
  1457  017B                     l1789:
  1458  017B  3004               	movlw	4
  1459  017C  0227               	subwf	_ch3+1,w
  1460  017D  301A               	movlw	26
  1461  017E  1903               	skipnz
  1462  017F  0226               	subwf	_ch3,w
  1463  0180  1803               	skipnc
  1464  0181  2983               	goto	u1281
  1465  0182  2984               	goto	u1280
  1466  0183                     u1281:
  1467  0183  2987               	goto	l1795
  1468  0184                     u1280:
  1469  0184                     l1791:
  1470                           
  1471                           ;main.c: 67:             start = 0;
  1472  0184  01C8               	clrf	_start
  1473  0185                     l1793:
  1474                           
  1475                           ;main.c: 68:             LATCbits.LATC7 = 0;
  1476  0185  0022               	movlb	2	; select bank2
  1477  0186  138E               	bcf	14,7	;volatile
  1478  0187                     l1795:
  1479                           
  1480                           ;main.c: 71:         read_sensor();
  1481  0187  3182  2278  3180   	fcall	_read_sensor
  1482  018A                     l1797:
  1483                           
  1484                           ;main.c: 73:         esc1 = esc2 = esc3 = esc4 = ch3;
  1485  018A  0020               	movlb	0	; select bank0
  1486  018B  0827               	movf	_ch3+1,w
  1487  018C  00AF               	movwf	_esc4+1
  1488  018D  0826               	movf	_ch3,w
  1489  018E  00AE               	movwf	_esc4
  1490  018F  082F               	movf	_esc4+1,w
  1491  0190  00B1               	movwf	_esc3+1
  1492  0191  082E               	movf	_esc4,w
  1493  0192  00B0               	movwf	_esc3
  1494  0193  0831               	movf	_esc3+1,w
  1495  0194  00B3               	movwf	_esc2+1
  1496  0195  0830               	movf	_esc3,w
  1497  0196  00B2               	movwf	_esc2
  1498  0197  0833               	movf	_esc2+1,w
  1499  0198  00B5               	movwf	_esc1+1
  1500  0199  0832               	movf	_esc2,w
  1501  019A  00B4               	movwf	_esc1
  1502  019B                     l1799:
  1503                           
  1504                           ;main.c: 74:         tmrLoop = (TMR0H << 8) | TMR0;
  1505  019B  0815               	movf	21,w	;volatile
  1506  019C  00DC               	movwf	??_main
  1507  019D  01DD               	clrf	??_main+1
  1508  019E  082C               	movf	_TMR0H,w
  1509  019F  00DF               	movwf	??_main+3
  1510  01A0  01DE               	clrf	??_main+2
  1511  01A1  085C               	movf	??_main,w
  1512  01A2  045E               	iorwf	??_main+2,w
  1513  01A3  00E0               	movwf	??_main+4
  1514  01A4  085D               	movf	??_main+1,w
  1515  01A5  045F               	iorwf	??_main+3,w
  1516  01A6  00E1               	movwf	??_main+5
  1517  01A7  0860               	movf	??_main+4,w
  1518  01A8  00AA               	movwf	_tmrLoop
  1519  01A9  0861               	movf	??_main+5,w
  1520  01AA  00AB               	movwf	_tmrLoop+1
  1521  01AB                     l1801:
  1522                           
  1523                           ;main.c: 76:         if(start < 3){
  1524  01AB  3003               	movlw	3
  1525  01AC  0248               	subwf	_start,w
  1526  01AD  1803               	skipnc
  1527  01AE  29B0               	goto	u1291
  1528  01AF  29B1               	goto	u1290
  1529  01B0                     u1291:
  1530  01B0  29DB               	goto	l1811
  1531  01B1                     u1290:
  1532  01B1                     l1803:
  1533                           
  1534                           ;main.c: 77:             PORTA |= 0b00010111;
  1535  01B1  3017               	movlw	23
  1536  01B2  00DC               	movwf	??_main
  1537  01B3  085C               	movf	??_main,w
  1538  01B4  048C               	iorwf	12,f	;volatile
  1539  01B5                     l1805:	
  1540                           ;main.c: 78:             while((((TMR0H << 8) | TMR0) - tmrLoop) < 1000 || TMR0 < 0xE8);
  1541                           
  1542  01B5  0815               	movf	21,w	;volatile
  1543  01B6  00DC               	movwf	??_main
  1544  01B7  01DD               	clrf	??_main+1
  1545  01B8  082C               	movf	_TMR0H,w
  1546  01B9  00DF               	movwf	??_main+3
  1547  01BA  01DE               	clrf	??_main+2
  1548  01BB  085C               	movf	??_main,w
  1549  01BC  045E               	iorwf	??_main+2,w
  1550  01BD  00E0               	movwf	??_main+4
  1551  01BE  085D               	movf	??_main+1,w
  1552  01BF  045F               	iorwf	??_main+3,w
  1553  01C0  00E1               	movwf	??_main+5
  1554  01C1  082A               	movf	_tmrLoop,w
  1555  01C2  0260               	subwf	??_main+4,w
  1556  01C3  00E2               	movwf	??_main+6
  1557  01C4  082B               	movf	_tmrLoop+1,w
  1558  01C5  3B61               	subwfb	??_main+5,w
  1559  01C6  00E3               	movwf	??_main+7
  1560  01C7  3003               	movlw	3
  1561  01C8  0263               	subwf	??_main+7,w
  1562  01C9  30E8               	movlw	232
  1563  01CA  1903               	skipnz
  1564  01CB  0262               	subwf	??_main+6,w
  1565  01CC  1C03               	skipc
  1566  01CD  29CF               	goto	u1301
  1567  01CE  29D0               	goto	u1300
  1568  01CF                     u1301:
  1569  01CF  29B5               	goto	l1805
  1570  01D0                     u1300:
  1571  01D0                     l1807:
  1572  01D0  30E8               	movlw	232
  1573  01D1  0215               	subwf	21,w	;volatile
  1574  01D2  1C03               	skipc
  1575  01D3  29D5               	goto	u1311
  1576  01D4  29D6               	goto	u1310
  1577  01D5                     u1311:
  1578  01D5  29B5               	goto	l1805
  1579  01D6                     u1310:
  1580  01D6                     l1809:
  1581                           
  1582                           ;main.c: 79:             PORTA &= 0b11101000;
  1583  01D6  30E8               	movlw	232
  1584  01D7  00DC               	movwf	??_main
  1585  01D8  085C               	movf	??_main,w
  1586  01D9  058C               	andwf	12,f	;volatile
  1587                           
  1588                           ;main.c: 80:         }
  1589  01DA  2A66               	goto	l1825
  1590  01DB                     l1811:
  1591                           
  1592                           ;main.c: 87:             PORTA |= 0b00010111;
  1593  01DB  3017               	movlw	23
  1594  01DC  00DC               	movwf	??_main
  1595  01DD  085C               	movf	??_main,w
  1596  01DE  048C               	iorwf	12,f	;volatile
  1597                           
  1598                           ;main.c: 88:             while((PORTA & 0b00010111) > 0){
  1599  01DF  2A60               	goto	l1823
  1600  01E0                     l1813:
  1601                           
  1602                           ;main.c: 89:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc1)PORTA &= 0b1111
      +                          1110;
  1603  01E0  0815               	movf	21,w	;volatile
  1604  01E1  00DC               	movwf	??_main
  1605  01E2  01DD               	clrf	??_main+1
  1606  01E3  082C               	movf	_TMR0H,w
  1607  01E4  00DF               	movwf	??_main+3
  1608  01E5  01DE               	clrf	??_main+2
  1609  01E6  085C               	movf	??_main,w
  1610  01E7  045E               	iorwf	??_main+2,w
  1611  01E8  00E0               	movwf	??_main+4
  1612  01E9  085D               	movf	??_main+1,w
  1613  01EA  045F               	iorwf	??_main+3,w
  1614  01EB  00E1               	movwf	??_main+5
  1615  01EC  082A               	movf	_tmrLoop,w
  1616  01ED  0260               	subwf	??_main+4,w
  1617  01EE  00E2               	movwf	??_main+6
  1618  01EF  082B               	movf	_tmrLoop+1,w
  1619  01F0  3B61               	subwfb	??_main+5,w
  1620  01F1  00E3               	movwf	??_main+7
  1621  01F2  0863               	movf	??_main+7,w
  1622  01F3  0235               	subwf	_esc1+1,w
  1623  01F4  1D03               	skipz
  1624  01F5  29F8               	goto	u1325
  1625  01F6  0862               	movf	??_main+6,w
  1626  01F7  0234               	subwf	_esc1,w
  1627  01F8                     u1325:
  1628  01F8  1803               	skipnc
  1629  01F9  29FB               	goto	u1321
  1630  01FA  29FC               	goto	u1320
  1631  01FB                     u1321:
  1632  01FB  2A00               	goto	l79
  1633  01FC                     u1320:
  1634  01FC                     l1815:
  1635  01FC  30FE               	movlw	254
  1636  01FD  00DC               	movwf	??_main
  1637  01FE  085C               	movf	??_main,w
  1638  01FF  058C               	andwf	12,f	;volatile
  1639  0200                     l79:
  1640                           
  1641                           ;main.c: 90:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc2)PORTA &= 0b1111
      +                          1101;
  1642  0200  0815               	movf	21,w	;volatile
  1643  0201  00DC               	movwf	??_main
  1644  0202  01DD               	clrf	??_main+1
  1645  0203  082C               	movf	_TMR0H,w
  1646  0204  00DF               	movwf	??_main+3
  1647  0205  01DE               	clrf	??_main+2
  1648  0206  085C               	movf	??_main,w
  1649  0207  045E               	iorwf	??_main+2,w
  1650  0208  00E0               	movwf	??_main+4
  1651  0209  085D               	movf	??_main+1,w
  1652  020A  045F               	iorwf	??_main+3,w
  1653  020B  00E1               	movwf	??_main+5
  1654  020C  082A               	movf	_tmrLoop,w
  1655  020D  0260               	subwf	??_main+4,w
  1656  020E  00E2               	movwf	??_main+6
  1657  020F  082B               	movf	_tmrLoop+1,w
  1658  0210  3B61               	subwfb	??_main+5,w
  1659  0211  00E3               	movwf	??_main+7
  1660  0212  0863               	movf	??_main+7,w
  1661  0213  0233               	subwf	_esc2+1,w
  1662  0214  1D03               	skipz
  1663  0215  2A18               	goto	u1335
  1664  0216  0862               	movf	??_main+6,w
  1665  0217  0232               	subwf	_esc2,w
  1666  0218                     u1335:
  1667  0218  1803               	skipnc
  1668  0219  2A1B               	goto	u1331
  1669  021A  2A1C               	goto	u1330
  1670  021B                     u1331:
  1671  021B  2A20               	goto	l80
  1672  021C                     u1330:
  1673  021C                     l1817:
  1674  021C  30FD               	movlw	253
  1675  021D  00DC               	movwf	??_main
  1676  021E  085C               	movf	??_main,w
  1677  021F  058C               	andwf	12,f	;volatile
  1678  0220                     l80:
  1679                           
  1680                           ;main.c: 91:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc3)PORTA &= 0b1111
      +                          1011;
  1681  0220  0815               	movf	21,w	;volatile
  1682  0221  00DC               	movwf	??_main
  1683  0222  01DD               	clrf	??_main+1
  1684  0223  082C               	movf	_TMR0H,w
  1685  0224  00DF               	movwf	??_main+3
  1686  0225  01DE               	clrf	??_main+2
  1687  0226  085C               	movf	??_main,w
  1688  0227  045E               	iorwf	??_main+2,w
  1689  0228  00E0               	movwf	??_main+4
  1690  0229  085D               	movf	??_main+1,w
  1691  022A  045F               	iorwf	??_main+3,w
  1692  022B  00E1               	movwf	??_main+5
  1693  022C  082A               	movf	_tmrLoop,w
  1694  022D  0260               	subwf	??_main+4,w
  1695  022E  00E2               	movwf	??_main+6
  1696  022F  082B               	movf	_tmrLoop+1,w
  1697  0230  3B61               	subwfb	??_main+5,w
  1698  0231  00E3               	movwf	??_main+7
  1699  0232  0863               	movf	??_main+7,w
  1700  0233  0231               	subwf	_esc3+1,w
  1701  0234  1D03               	skipz
  1702  0235  2A38               	goto	u1345
  1703  0236  0862               	movf	??_main+6,w
  1704  0237  0230               	subwf	_esc3,w
  1705  0238                     u1345:
  1706  0238  1803               	skipnc
  1707  0239  2A3B               	goto	u1341
  1708  023A  2A3C               	goto	u1340
  1709  023B                     u1341:
  1710  023B  2A40               	goto	l81
  1711  023C                     u1340:
  1712  023C                     l1819:
  1713  023C  30FB               	movlw	251
  1714  023D  00DC               	movwf	??_main
  1715  023E  085C               	movf	??_main,w
  1716  023F  058C               	andwf	12,f	;volatile
  1717  0240                     l81:
  1718                           
  1719                           ;main.c: 92:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc4)PORTA &= 0b1110
      +                          1111;
  1720  0240  0815               	movf	21,w	;volatile
  1721  0241  00DC               	movwf	??_main
  1722  0242  01DD               	clrf	??_main+1
  1723  0243  082C               	movf	_TMR0H,w
  1724  0244  00DF               	movwf	??_main+3
  1725  0245  01DE               	clrf	??_main+2
  1726  0246  085C               	movf	??_main,w
  1727  0247  045E               	iorwf	??_main+2,w
  1728  0248  00E0               	movwf	??_main+4
  1729  0249  085D               	movf	??_main+1,w
  1730  024A  045F               	iorwf	??_main+3,w
  1731  024B  00E1               	movwf	??_main+5
  1732  024C  082A               	movf	_tmrLoop,w
  1733  024D  0260               	subwf	??_main+4,w
  1734  024E  00E2               	movwf	??_main+6
  1735  024F  082B               	movf	_tmrLoop+1,w
  1736  0250  3B61               	subwfb	??_main+5,w
  1737  0251  00E3               	movwf	??_main+7
  1738  0252  0863               	movf	??_main+7,w
  1739  0253  022F               	subwf	_esc4+1,w
  1740  0254  1D03               	skipz
  1741  0255  2A58               	goto	u1355
  1742  0256  0862               	movf	??_main+6,w
  1743  0257  022E               	subwf	_esc4,w
  1744  0258                     u1355:
  1745  0258  1803               	skipnc
  1746  0259  2A5B               	goto	u1351
  1747  025A  2A5C               	goto	u1350
  1748  025B                     u1351:
  1749  025B  2A60               	goto	l1823
  1750  025C                     u1350:
  1751  025C                     l1821:
  1752  025C  30EF               	movlw	239
  1753  025D  00DC               	movwf	??_main
  1754  025E  085C               	movf	??_main,w
  1755  025F  058C               	andwf	12,f	;volatile
  1756  0260                     l1823:
  1757                           
  1758                           ;main.c: 88:             while((PORTA & 0b00010111) > 0){
  1759  0260  080C               	movf	12,w	;volatile
  1760  0261  3917               	andlw	23
  1761  0262  1D03               	btfss	3,2
  1762  0263  2A65               	goto	u1361
  1763  0264  2A66               	goto	u1360
  1764  0265                     u1361:
  1765  0265  29E0               	goto	l1813
  1766  0266                     u1360:
  1767  0266                     l1825:
  1768  0266  3000               	movlw	0
  1769  0267  022D               	subwf	_TMR0H+1,w
  1770  0268  304E               	movlw	78
  1771  0269  1903               	skipnz
  1772  026A  022C               	subwf	_TMR0H,w
  1773  026B  1C03               	skipc
  1774  026C  2A6E               	goto	u1371
  1775  026D  2A6F               	goto	u1370
  1776  026E                     u1371:
  1777  026E  2A66               	goto	l1825
  1778  026F                     u1370:
  1779  026F                     l1827:
  1780  026F  3014               	movlw	20
  1781  0270  0215               	subwf	21,w	;volatile
  1782  0271  1C03               	skipc
  1783  0272  2A74               	goto	u1381
  1784  0273  2A75               	goto	u1380
  1785  0274                     u1381:
  1786  0274  2A66               	goto	l1825
  1787  0275                     u1380:
  1788  0275  2912               	goto	l1753
  1789  0276  3180  28E8         	ljmp	start
  1790  0278                     __end_of_main:
  1791                           
  1792                           	psect	text1
  1793  0278                     __ptext1:	
  1794 ;; *************** function _read_sensor *****************
  1795 ;; Defined at:
  1796 ;;		line 68 in file "config.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;Total ram usage:        1 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    4
  1817 ;; This function calls:
  1818 ;;		_i2c_read
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _read_sensor
  1826  0278                     _read_sensor:
  1827  0278                     l1741:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _read_sensor: [wreg+status,2+status,0+pclath+cstack]
  1830                           
  1831                           
  1832                           ;config.c: 69:     gyrox = i2c_read(0xD2, 0xA8);
  1833  0278  30A8               	movlw	168
  1834  0279  0020               	movlb	0	; select bank0
  1835  027A  00DB               	movwf	??_read_sensor
  1836  027B  085B               	movf	??_read_sensor,w
  1837  027C  00D1               	movwf	i2c_read@subaddress
  1838  027D  30D2               	movlw	210
  1839  027E  3182  22EF  3182   	fcall	_i2c_read
  1840  0281  0020               	movlb	0	; select bank0
  1841  0282  0852               	movf	?_i2c_read+1,w
  1842  0283  00C1               	movwf	_gyrox+1
  1843  0284  0851               	movf	?_i2c_read,w
  1844  0285  00C0               	movwf	_gyrox
  1845                           
  1846                           ;config.c: 70:     gyroy = i2c_read(0xD2, 0xAA);
  1847  0286  30AA               	movlw	170
  1848  0287  00DB               	movwf	??_read_sensor
  1849  0288  085B               	movf	??_read_sensor,w
  1850  0289  00D1               	movwf	i2c_read@subaddress
  1851  028A  30D2               	movlw	210
  1852  028B  3182  22EF  3182   	fcall	_i2c_read
  1853  028E  0020               	movlb	0	; select bank0
  1854  028F  0852               	movf	?_i2c_read+1,w
  1855  0290  00BF               	movwf	_gyroy+1
  1856  0291  0851               	movf	?_i2c_read,w
  1857  0292  00BE               	movwf	_gyroy
  1858                           
  1859                           ;config.c: 71:     gyroz = i2c_read(0xD2, 0xAC);
  1860  0293  30AC               	movlw	172
  1861  0294  00DB               	movwf	??_read_sensor
  1862  0295  085B               	movf	??_read_sensor,w
  1863  0296  00D1               	movwf	i2c_read@subaddress
  1864  0297  30D2               	movlw	210
  1865  0298  3182  22EF  3182   	fcall	_i2c_read
  1866  029B  0020               	movlb	0	; select bank0
  1867  029C  0852               	movf	?_i2c_read+1,w
  1868  029D  00BD               	movwf	_gyroz+1
  1869  029E  0851               	movf	?_i2c_read,w
  1870  029F  00BC               	movwf	_gyroz
  1871                           
  1872                           ;config.c: 72:     accx = i2c_read(0x32, 0xA8);
  1873  02A0  30A8               	movlw	168
  1874  02A1  00DB               	movwf	??_read_sensor
  1875  02A2  085B               	movf	??_read_sensor,w
  1876  02A3  00D1               	movwf	i2c_read@subaddress
  1877  02A4  3032               	movlw	50
  1878  02A5  3182  22EF  3182   	fcall	_i2c_read
  1879  02A8  0020               	movlb	0	; select bank0
  1880  02A9  0852               	movf	?_i2c_read+1,w
  1881  02AA  00C7               	movwf	_accx+1
  1882  02AB  0851               	movf	?_i2c_read,w
  1883  02AC  00C6               	movwf	_accx
  1884                           
  1885                           ;config.c: 73:     accy = i2c_read(0x32, 0xAA);
  1886  02AD  30AA               	movlw	170
  1887  02AE  00DB               	movwf	??_read_sensor
  1888  02AF  085B               	movf	??_read_sensor,w
  1889  02B0  00D1               	movwf	i2c_read@subaddress
  1890  02B1  3032               	movlw	50
  1891  02B2  3182  22EF  3182   	fcall	_i2c_read
  1892  02B5  0020               	movlb	0	; select bank0
  1893  02B6  0852               	movf	?_i2c_read+1,w
  1894  02B7  00C5               	movwf	_accy+1
  1895  02B8  0851               	movf	?_i2c_read,w
  1896  02B9  00C4               	movwf	_accy
  1897                           
  1898                           ;config.c: 74:     accz = i2c_read(0x32, 0xAC);
  1899  02BA  30AC               	movlw	172
  1900  02BB  00DB               	movwf	??_read_sensor
  1901  02BC  085B               	movf	??_read_sensor,w
  1902  02BD  00D1               	movwf	i2c_read@subaddress
  1903  02BE  3032               	movlw	50
  1904  02BF  3182  22EF  3182   	fcall	_i2c_read
  1905  02C2  0020               	movlb	0	; select bank0
  1906  02C3  0852               	movf	?_i2c_read+1,w
  1907  02C4  00C3               	movwf	_accz+1
  1908  02C5  0851               	movf	?_i2c_read,w
  1909  02C6  00C2               	movwf	_accz
  1910                           
  1911                           ;config.c: 75:     magx = i2c_read(0x3C, 0x83);
  1912  02C7  3083               	movlw	131
  1913  02C8  00DB               	movwf	??_read_sensor
  1914  02C9  085B               	movf	??_read_sensor,w
  1915  02CA  00D1               	movwf	i2c_read@subaddress
  1916  02CB  303C               	movlw	60
  1917  02CC  3182  22EF  3182   	fcall	_i2c_read
  1918  02CF  0020               	movlb	0	; select bank0
  1919  02D0  0852               	movf	?_i2c_read+1,w
  1920  02D1  00BB               	movwf	_magx+1
  1921  02D2  0851               	movf	?_i2c_read,w
  1922  02D3  00BA               	movwf	_magx
  1923                           
  1924                           ;config.c: 76:     magy = i2c_read(0x3C, 0x85);
  1925  02D4  3085               	movlw	133
  1926  02D5  00DB               	movwf	??_read_sensor
  1927  02D6  085B               	movf	??_read_sensor,w
  1928  02D7  00D1               	movwf	i2c_read@subaddress
  1929  02D8  303C               	movlw	60
  1930  02D9  3182  22EF  3182   	fcall	_i2c_read
  1931  02DC  0020               	movlb	0	; select bank0
  1932  02DD  0852               	movf	?_i2c_read+1,w
  1933  02DE  00B9               	movwf	_magy+1
  1934  02DF  0851               	movf	?_i2c_read,w
  1935  02E0  00B8               	movwf	_magy
  1936                           
  1937                           ;config.c: 77:     magz = i2c_read(0x3C, 0x87);
  1938  02E1  3087               	movlw	135
  1939  02E2  00DB               	movwf	??_read_sensor
  1940  02E3  085B               	movf	??_read_sensor,w
  1941  02E4  00D1               	movwf	i2c_read@subaddress
  1942  02E5  303C               	movlw	60
  1943  02E6  3182  22EF  3182   	fcall	_i2c_read
  1944  02E9  0020               	movlb	0	; select bank0
  1945  02EA  0852               	movf	?_i2c_read+1,w
  1946  02EB  00B7               	movwf	_magz+1
  1947  02EC  0851               	movf	?_i2c_read,w
  1948  02ED  00B6               	movwf	_magz
  1949  02EE                     l233:
  1950  02EE  0008               	return
  1951  02EF                     __end_of_read_sensor:
  1952                           
  1953                           	psect	text2
  1954  02EF                     __ptext2:	
  1955 ;; *************** function _i2c_read *****************
  1956 ;; Defined at:
  1957 ;;		line 94 in file "config.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  address         1    wreg     unsigned char 
  1960 ;;  subaddress      1    7[BANK0 ] unsigned char 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  address         1   16[BANK0 ] unsigned char 
  1963 ;;  high            2   14[BANK0 ] int 
  1964 ;;  low             2   12[BANK0 ] int 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2    7[BANK0 ] int 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, pclath, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1975 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1976 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;Total ram usage:       10 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    3
  1981 ;; This function calls:
  1982 ;;		_i2c_read_byte
  1983 ;;		_i2c_restart
  1984 ;;		_i2c_start
  1985 ;;		_i2c_stop
  1986 ;;		_i2c_write_byte
  1987 ;;		_nack
  1988 ;; This function is called by:
  1989 ;;		_read_sensor
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _i2c_read
  1995  02EF                     _i2c_read:
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1999                           ;i2c_read@address stored from wreg
  2000  02EF  0020               	movlb	0	; select bank0
  2001  02F0  00DA               	movwf	i2c_read@address
  2002  02F1                     l1635:
  2003                           
  2004                           ;config.c: 95:     int low, high;;config.c: 96:     i2c_start();
  2005  02F1  3184  249C  3182   	fcall	_i2c_start
  2006  02F4                     l1637:
  2007                           
  2008                           ;config.c: 97:     i2c_write_byte(address);
  2009  02F4  0020               	movlb	0	; select bank0
  2010  02F5  085A               	movf	i2c_read@address,w
  2011  02F6  3184  2463  3182   	fcall	_i2c_write_byte
  2012  02F9                     l1639:
  2013                           
  2014                           ;config.c: 98:     if(nack())
  2015  02F9  3184  2478  3182   	fcall	_nack
  2016  02FC  0020               	movlb	0	; select bank0
  2017  02FD  084A               	movf	?_nack,w
  2018  02FE  044B               	iorwf	?_nack+1,w
  2019  02FF  1903               	btfsc	3,2
  2020  0300  2B02               	goto	u1141
  2021  0301  2B03               	goto	u1140
  2022  0302                     u1141:
  2023  0302  2B06               	goto	l1645
  2024  0303                     u1140:
  2025  0303                     l1641:
  2026                           
  2027                           ;config.c: 99:         return 0;
  2028  0303  01D1               	clrf	?_i2c_read
  2029  0304  01D2               	clrf	?_i2c_read+1
  2030  0305  2B60               	goto	l243
  2031  0306                     l1645:
  2032                           
  2033                           ;config.c: 101:     i2c_write_byte(subaddress);
  2034  0306  0851               	movf	i2c_read@subaddress,w
  2035  0307  3184  2463  3182   	fcall	_i2c_write_byte
  2036                           
  2037                           ;config.c: 102:     if(nack())
  2038  030A  3184  2478  3182   	fcall	_nack
  2039  030D  0020               	movlb	0	; select bank0
  2040  030E  084A               	movf	?_nack,w
  2041  030F  044B               	iorwf	?_nack+1,w
  2042  0310  1903               	btfsc	3,2
  2043  0311  2B13               	goto	u1151
  2044  0312  2B14               	goto	u1150
  2045  0313                     u1151:
  2046  0313  2B15               	goto	l1651
  2047  0314                     u1150:
  2048  0314  2B03               	goto	l1641
  2049  0315                     l1651:
  2050                           
  2051                           ;config.c: 104:     i2c_restart();
  2052  0315  3184  248A  3182   	fcall	_i2c_restart
  2053  0318                     l1653:
  2054                           
  2055                           ;config.c: 105:     i2c_write_byte(address | 1);
  2056  0318  0020               	movlb	0	; select bank0
  2057  0319  085A               	movf	i2c_read@address,w
  2058  031A  3801               	iorlw	1
  2059  031B  3184  2463  3182   	fcall	_i2c_write_byte
  2060  031E                     l1655:
  2061                           
  2062                           ;config.c: 106:     if(nack())
  2063  031E  3184  2478  3182   	fcall	_nack
  2064  0321  0020               	movlb	0	; select bank0
  2065  0322  084A               	movf	?_nack,w
  2066  0323  044B               	iorwf	?_nack+1,w
  2067  0324  1903               	btfsc	3,2
  2068  0325  2B27               	goto	u1161
  2069  0326  2B28               	goto	u1160
  2070  0327                     u1161:
  2071  0327  2B29               	goto	l1661
  2072  0328                     u1160:
  2073  0328  2B03               	goto	l1641
  2074  0329                     l1661:
  2075                           
  2076                           ;config.c: 108:     low = i2c_read_byte(0);
  2077  0329  3000               	movlw	0
  2078  032A  3184  2440  3182   	fcall	_i2c_read_byte
  2079  032D  0020               	movlb	0	; select bank0
  2080  032E  084B               	movf	?_i2c_read_byte+1,w
  2081  032F  00D7               	movwf	i2c_read@low+1
  2082  0330  084A               	movf	?_i2c_read_byte,w
  2083  0331  00D6               	movwf	i2c_read@low
  2084                           
  2085                           ;config.c: 109:     high = i2c_read_byte(1);
  2086  0332  3001               	movlw	1
  2087  0333  3184  2440  3182   	fcall	_i2c_read_byte
  2088  0336  0020               	movlb	0	; select bank0
  2089  0337  084B               	movf	?_i2c_read_byte+1,w
  2090  0338  00D9               	movwf	i2c_read@high+1
  2091  0339  084A               	movf	?_i2c_read_byte,w
  2092  033A  00D8               	movwf	i2c_read@high
  2093  033B                     l1663:
  2094                           
  2095                           ;config.c: 110:     i2c_stop();
  2096  033B  3184  2493  3182   	fcall	_i2c_stop
  2097  033E                     l1665:
  2098                           
  2099                           ;config.c: 111:     if(address != 0x3C)
  2100  033E  303C               	movlw	60
  2101  033F  0020               	movlb	0	; select bank0
  2102  0340  065A               	xorwf	i2c_read@address,w
  2103  0341  1903               	btfsc	3,2
  2104  0342  2B44               	goto	u1171
  2105  0343  2B45               	goto	u1170
  2106  0344                     u1171:
  2107  0344  2B53               	goto	l1673
  2108  0345                     u1170:
  2109  0345                     l1667:
  2110                           
  2111                           ;config.c: 112:         return((high << 8) | low);
  2112  0345  0859               	movf	i2c_read@high+1,w
  2113  0346  00D4               	movwf	??_i2c_read+1
  2114  0347  0858               	movf	i2c_read@high,w
  2115  0348  00D3               	movwf	??_i2c_read
  2116  0349  0853               	movf	??_i2c_read,w
  2117  034A  00D4               	movwf	??_i2c_read+1
  2118  034B  01D3               	clrf	??_i2c_read
  2119  034C  0856               	movf	i2c_read@low,w
  2120  034D  0453               	iorwf	??_i2c_read,w
  2121  034E  00D1               	movwf	?_i2c_read
  2122  034F  0857               	movf	i2c_read@low+1,w
  2123  0350  0454               	iorwf	??_i2c_read+1,w
  2124  0351  00D2               	movwf	?_i2c_read+1
  2125  0352  2B60               	goto	l243
  2126  0353                     l1673:
  2127                           
  2128                           ;config.c: 114:         return((low << 8) | high);
  2129  0353  0857               	movf	i2c_read@low+1,w
  2130  0354  00D4               	movwf	??_i2c_read+1
  2131  0355  0856               	movf	i2c_read@low,w
  2132  0356  00D3               	movwf	??_i2c_read
  2133  0357  0853               	movf	??_i2c_read,w
  2134  0358  00D4               	movwf	??_i2c_read+1
  2135  0359  01D3               	clrf	??_i2c_read
  2136  035A  0858               	movf	i2c_read@high,w
  2137  035B  0453               	iorwf	??_i2c_read,w
  2138  035C  00D1               	movwf	?_i2c_read
  2139  035D  0859               	movf	i2c_read@high+1,w
  2140  035E  0454               	iorwf	??_i2c_read+1,w
  2141  035F  00D2               	movwf	?_i2c_read+1
  2142  0360                     l243:
  2143  0360  0008               	return
  2144  0361                     __end_of_i2c_read:
  2145                           
  2146                           	psect	text3
  2147  048A                     __ptext3:	
  2148 ;; *************** function _i2c_restart *****************
  2149 ;; Defined at:
  2150 ;;		line 145 in file "config.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		None
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    1
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_i2c_read
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _i2c_restart
  2180  048A                     _i2c_restart:
  2181  048A                     l1601:	
  2182                           ;incstack = 0
  2183                           ; Regs used in _i2c_restart: []
  2184                           
  2185                           
  2186                           ;config.c: 146:     SSPCON2bits.RSEN = 1;
  2187  048A  0024               	movlb	4	; select bank4
  2188  048B  1496               	bsf	22,1	;volatile
  2189  048C                     l269:	
  2190                           ;config.c: 147:     while(SSPCON2bits.RSEN);
  2191                           
  2192  048C  1896               	btfsc	22,1	;volatile
  2193  048D  2C8F               	goto	u1081
  2194  048E  2C90               	goto	u1080
  2195  048F                     u1081:
  2196  048F  2C8C               	goto	l269
  2197  0490                     u1080:
  2198  0490                     l271:
  2199                           
  2200                           ;config.c: 148:     PIR1bits.SSP1IF = 0;
  2201  0490  0020               	movlb	0	; select bank0
  2202  0491  1190               	bcf	16,3	;volatile
  2203  0492                     l272:
  2204  0492  0008               	return
  2205  0493                     __end_of_i2c_restart:
  2206                           
  2207                           	psect	text4
  2208  0440                     __ptext4:	
  2209 ;; *************** function _i2c_read_byte *****************
  2210 ;; Defined at:
  2211 ;;		line 117 in file "config.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  ack             1    wreg     unsigned char 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  ack             1    4[BANK0 ] unsigned char 
  2216 ;;  temp            2    5[BANK0 ] int 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  2    0[BANK0 ] int 
  2219 ;; Registers used:
  2220 ;;		wreg, status,0
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2227 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2228 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2229 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;Total ram usage:        7 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_i2c_read
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _i2c_read_byte
  2242  0440                     _i2c_read_byte:
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _i2c_read_byte: [wreg+status,0]
  2246                           ;i2c_read_byte@ack stored from wreg
  2247  0440  0020               	movlb	0	; select bank0
  2248  0441  00CE               	movwf	i2c_read_byte@ack
  2249  0442                     l1603:
  2250                           
  2251                           ;config.c: 118:     int temp;;config.c: 119:     SSP1CON2bits.RCEN = 1;
  2252  0442  0024               	movlb	4	; select bank4
  2253  0443  1596               	bsf	22,3	;volatile
  2254  0444                     l250:	
  2255                           ;config.c: 120:     while(RCEN);
  2256                           
  2257  0444  1996               	btfsc	22,3	;volatile
  2258  0445  2C47               	goto	u1091
  2259  0446  2C48               	goto	u1090
  2260  0447                     u1091:
  2261  0447  2C44               	goto	l250
  2262  0448                     u1090:
  2263  0448                     l1605:
  2264                           
  2265                           ;config.c: 121:     temp = SSP1BUF;
  2266  0448  0811               	movf	17,w	;volatile
  2267  0449  0020               	movlb	0	; select bank0
  2268  044A  00CC               	movwf	??_i2c_read_byte
  2269  044B  01CD               	clrf	??_i2c_read_byte+1
  2270  044C  084C               	movf	??_i2c_read_byte,w
  2271  044D  00CF               	movwf	i2c_read_byte@temp
  2272  044E  084D               	movf	??_i2c_read_byte+1,w
  2273  044F  00D0               	movwf	i2c_read_byte@temp+1
  2274  0450                     l1607:
  2275                           
  2276                           ;config.c: 122:     PIR1bits.SSP1IF = 0;
  2277  0450  1190               	bcf	16,3	;volatile
  2278  0451                     l1609:
  2279                           
  2280                           ;config.c: 124:     SSP1CON2bits.ACKDT = ack;
  2281  0451  0C4E               	rrf	i2c_read_byte@ack,w
  2282  0452  0024               	movlb	4	; select bank4
  2283  0453  1C03               	skipc
  2284  0454  1296               	bcf	22,5	;volatile
  2285  0455  1803               	skipnc
  2286  0456  1696               	bsf	22,5	;volatile
  2287  0457                     l1611:
  2288                           
  2289                           ;config.c: 125:     SSP1CON2bits.ACKEN = 1;
  2290  0457  1616               	bsf	22,4	;volatile
  2291  0458                     l253:	
  2292                           ;config.c: 126:     while(SSP1CON2bits.ACKEN);
  2293                           
  2294  0458  1A16               	btfsc	22,4	;volatile
  2295  0459  2C5B               	goto	u1101
  2296  045A  2C5C               	goto	u1100
  2297  045B                     u1101:
  2298  045B  2C58               	goto	l253
  2299  045C                     u1100:
  2300  045C                     l255:
  2301                           
  2302                           ;config.c: 127:     PIR1bits.SSP1IF = 0;
  2303  045C  0020               	movlb	0	; select bank0
  2304  045D  1190               	bcf	16,3	;volatile
  2305  045E                     l1613:
  2306                           
  2307                           ;config.c: 128:     return temp;
  2308  045E  0850               	movf	i2c_read_byte@temp+1,w
  2309  045F  00CB               	movwf	?_i2c_read_byte+1
  2310  0460  084F               	movf	i2c_read_byte@temp,w
  2311  0461  00CA               	movwf	?_i2c_read_byte
  2312  0462                     l256:
  2313  0462  0008               	return
  2314  0463                     __end_of_i2c_read_byte:
  2315                           
  2316                           	psect	text5
  2317  0361                     __ptext5:	
  2318 ;; *************** function _pic_init *****************
  2319 ;; Defined at:
  2320 ;;		line 6 in file "config.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;Total ram usage:        0 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    1
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _pic_init
  2350  0361                     _pic_init:
  2351  0361                     l1677:	
  2352                           ;incstack = 0
  2353                           ; Regs used in _pic_init: [wreg+status,2+status,0]
  2354                           
  2355                           
  2356                           ;config.c: 9:     OSCCONbits.IRCF = 0b1110;
  2357  0361  0021               	movlb	1	; select bank1
  2358  0362  0819               	movf	25,w	;volatile
  2359  0363  3987               	andlw	-121
  2360  0364  3870               	iorlw	112
  2361  0365  0099               	movwf	25	;volatile
  2362                           
  2363                           ;config.c: 10:     OSCCONbits.SCS = 0;
  2364  0366  30FC               	movlw	-4
  2365  0367  0599               	andwf	25,f	;volatile
  2366  0368                     l224:	
  2367                           ;config.c: 11:     while(!OSCSTATbits.PLLR);
  2368                           
  2369  0368  1F1A               	btfss	26,6	;volatile
  2370  0369  2B6B               	goto	u1181
  2371  036A  2B6C               	goto	u1180
  2372  036B                     u1181:
  2373  036B  2B68               	goto	l224
  2374  036C                     u1180:
  2375  036C                     l226:
  2376                           
  2377                           ;config.c: 13:     INTCONbits.GIE = 1;
  2378  036C  178B               	bsf	11,7	;volatile
  2379                           
  2380                           ;config.c: 14:     INTCONbits.IOCIE = 1;
  2381  036D  158B               	bsf	11,3	;volatile
  2382                           
  2383                           ;config.c: 15:     INTCONbits.PEIE = 1;
  2384  036E  170B               	bsf	11,6	;volatile
  2385                           
  2386                           ;config.c: 16:     PIE1bits.TMR2IE = 1;
  2387  036F  1490               	bsf	16,1	;volatile
  2388                           
  2389                           ;config.c: 17:     INTCONbits.TMR0IE = 1;
  2390  0370  168B               	bsf	11,5	;volatile
  2391  0371                     l1679:
  2392                           
  2393                           ;config.c: 18:     IOCCP = 0b01111000;
  2394  0371  3078               	movlw	120
  2395  0372  0027               	movlb	7	; select bank7
  2396  0373  0097               	movwf	23	;volatile
  2397  0374                     l1681:
  2398                           
  2399                           ;config.c: 22:     OPTION_REGbits.TMR0CS = 0;
  2400  0374  0021               	movlb	1	; select bank1
  2401  0375  1295               	bcf	21,5	;volatile
  2402  0376                     l1683:
  2403                           
  2404                           ;config.c: 23:     OPTION_REGbits.PSA = 0;
  2405  0376  1195               	bcf	21,3	;volatile
  2406  0377                     l1685:
  2407                           
  2408                           ;config.c: 24:     OPTION_REGbits.PS = 2;
  2409  0377  0815               	movf	21,w	;volatile
  2410  0378  39F8               	andlw	-8
  2411  0379  3802               	iorlw	2
  2412  037A  0095               	movwf	21	;volatile
  2413  037B                     l1687:
  2414                           
  2415                           ;config.c: 26:     T1CONbits.TMR1CS = 0;
  2416  037B  303F               	movlw	-193
  2417  037C  0020               	movlb	0	; select bank0
  2418  037D  0598               	andwf	24,f	;volatile
  2419  037E                     l1689:
  2420                           
  2421                           ;config.c: 27:     T1CONbits.T1CKPS = 3;
  2422  037E  3030               	movlw	48
  2423  037F  0498               	iorwf	24,f	;volatile
  2424  0380                     l1691:
  2425                           
  2426                           ;config.c: 29:     T3CONbits.TMR3CS = 0;
  2427  0380  303F               	movlw	-193
  2428  0381  0029               	movlb	9	; select bank9
  2429  0382  0595               	andwf	21,f	;volatile
  2430  0383                     l1693:
  2431                           
  2432                           ;config.c: 30:     T3CONbits.T3CKPS = 3;
  2433  0383  3030               	movlw	48
  2434  0384  0495               	iorwf	21,f	;volatile
  2435  0385                     l1695:
  2436                           
  2437                           ;config.c: 32:     T5CONbits.TMR5CS = 0;
  2438  0385  303F               	movlw	-193
  2439  0386  059C               	andwf	28,f	;volatile
  2440  0387                     l1697:
  2441                           
  2442                           ;config.c: 33:     T5CONbits.T5CKPS = 3;
  2443  0387  3030               	movlw	48
  2444  0388  049C               	iorwf	28,f	;volatile
  2445  0389                     l1699:
  2446                           
  2447                           ;config.c: 35:     T2CLKCON = 0;
  2448  0389  0020               	movlb	0	; select bank0
  2449  038A  019E               	clrf	30	;volatile
  2450  038B                     l1701:
  2451                           
  2452                           ;config.c: 36:     T2CONbits.CKPS = 3;
  2453  038B  081C               	movf	28,w	;volatile
  2454  038C  398F               	andlw	-113
  2455  038D  3830               	iorlw	48
  2456  038E  009C               	movwf	28	;volatile
  2457  038F                     l1703:
  2458                           
  2459                           ;config.c: 37:     T2CONbits.OUTPS = 0;
  2460  038F  30F0               	movlw	-16
  2461  0390  059C               	andwf	28,f	;volatile
  2462  0391                     l1705:
  2463                           
  2464                           ;config.c: 38:     T2HLTbits.PSYNC = 1;
  2465  0391  179D               	bsf	29,7	;volatile
  2466  0392                     l1707:
  2467                           
  2468                           ;config.c: 39:     T2RST = 15;
  2469  0392  300F               	movlw	15
  2470  0393  009F               	movwf	31	;volatile
  2471  0394                     l1709:
  2472                           
  2473                           ;config.c: 41:     SSP1CONbits.SSPEN = 1;
  2474  0394  0024               	movlb	4	; select bank4
  2475  0395  1695               	bsf	21,5	;volatile
  2476  0396                     l1711:
  2477                           
  2478                           ;config.c: 42:     SSP1CONbits.SSPM = 8;
  2479  0396  0815               	movf	21,w	;volatile
  2480  0397  39F0               	andlw	-16
  2481  0398  3808               	iorlw	8
  2482  0399  0095               	movwf	21	;volatile
  2483  039A                     l1713:
  2484                           
  2485                           ;config.c: 43:     SSP1ADD = 19;
  2486  039A  3013               	movlw	19
  2487  039B  0092               	movwf	18	;volatile
  2488  039C                     l1715:
  2489                           
  2490                           ;config.c: 44:     RB4PPS = 17;
  2491  039C  3011               	movlw	17
  2492  039D  003D               	movlb	29	; select bank29
  2493  039E  009C               	movwf	28	;volatile
  2494  039F                     l1717:
  2495                           
  2496                           ;config.c: 45:     RB6PPS = 16;
  2497  039F  3010               	movlw	16
  2498  03A0  009E               	movwf	30	;volatile
  2499  03A1                     l1719:
  2500                           
  2501                           ;config.c: 46:     SSPDATPPS = 12;
  2502  03A1  300C               	movlw	12
  2503  03A2  003C               	movlb	28	; select bank28
  2504  03A3  00A1               	movwf	33	;volatile
  2505  03A4                     l1721:
  2506                           
  2507                           ;config.c: 47:     SSPCLKPPS = 14;
  2508  03A4  300E               	movlw	14
  2509  03A5  00A0               	movwf	32	;volatile
  2510  03A6                     l1723:
  2511                           
  2512                           ;config.c: 49:     ANSELA = 0;
  2513  03A6  0023               	movlb	3	; select bank3
  2514  03A7  018C               	clrf	12	;volatile
  2515  03A8                     l1725:
  2516                           
  2517                           ;config.c: 50:     ANSELB = 0;
  2518  03A8  018D               	clrf	13	;volatile
  2519  03A9                     l1727:
  2520                           
  2521                           ;config.c: 51:     ANSELC = 0;
  2522  03A9  018E               	clrf	14	;volatile
  2523  03AA                     l1729:
  2524                           
  2525                           ;config.c: 52:     TRISA = 0;
  2526  03AA  0021               	movlb	1	; select bank1
  2527  03AB  018C               	clrf	12	;volatile
  2528  03AC                     l1731:
  2529                           
  2530                           ;config.c: 53:     TRISB = 0b01010000;
  2531  03AC  3050               	movlw	80
  2532  03AD  008D               	movwf	13	;volatile
  2533  03AE                     l1733:
  2534                           
  2535                           ;config.c: 54:     ODCONBbits.ODB4 = 1;
  2536  03AE  0025               	movlb	5	; select bank5
  2537  03AF  160D               	bsf	13,4	;volatile
  2538  03B0                     l1735:
  2539                           
  2540                           ;config.c: 55:     ODCONBbits.ODB6 = 1;
  2541  03B0  170D               	bsf	13,6	;volatile
  2542  03B1                     l1737:
  2543                           
  2544                           ;config.c: 56:     TRISC = 0b01111000;
  2545  03B1  3078               	movlw	120
  2546  03B2  0021               	movlb	1	; select bank1
  2547  03B3  008E               	movwf	14	;volatile
  2548  03B4                     l227:
  2549  03B4  0008               	return
  2550  03B5                     __end_of_pic_init:
  2551                           
  2552                           	psect	text6
  2553  03B5                     __ptext6:	
  2554 ;; *************** function _gyro_config *****************
  2555 ;; Defined at:
  2556 ;;		line 58 in file "config.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0, pclath, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;Total ram usage:        2 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    4
  2577 ;; This function calls:
  2578 ;;		_i2c_write
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _gyro_config
  2586  03B5                     _gyro_config:
  2587  03B5                     l1739:	
  2588                           ;incstack = 0
  2589                           ; Regs used in _gyro_config: [wreg+status,2+status,0+pclath+cstack]
  2590                           
  2591                           
  2592                           ;config.c: 59:     i2c_write(0xD2, 0x20, 0x0F);
  2593  03B5  3020               	movlw	32
  2594  03B6  0020               	movlb	0	; select bank0
  2595  03B7  00CF               	movwf	??_gyro_config
  2596  03B8  084F               	movf	??_gyro_config,w
  2597  03B9  00CC               	movwf	i2c_write@subaddress
  2598  03BA  300F               	movlw	15
  2599  03BB  00D0               	movwf	??_gyro_config+1
  2600  03BC  0850               	movf	??_gyro_config+1,w
  2601  03BD  00CD               	movwf	i2c_write@data
  2602  03BE  30D2               	movlw	210
  2603  03BF  3184  2409  3183   	fcall	_i2c_write
  2604                           
  2605                           ;config.c: 60:     i2c_write(0xD2, 0x23, 0x90);
  2606  03C2  3023               	movlw	35
  2607  03C3  0020               	movlb	0	; select bank0
  2608  03C4  00CF               	movwf	??_gyro_config
  2609  03C5  084F               	movf	??_gyro_config,w
  2610  03C6  00CC               	movwf	i2c_write@subaddress
  2611  03C7  3090               	movlw	144
  2612  03C8  00D0               	movwf	??_gyro_config+1
  2613  03C9  0850               	movf	??_gyro_config+1,w
  2614  03CA  00CD               	movwf	i2c_write@data
  2615  03CB  30D2               	movlw	210
  2616  03CC  3184  2409  3183   	fcall	_i2c_write
  2617                           
  2618                           ;config.c: 61:     i2c_write(0x32, 0x20, 0x57);
  2619  03CF  3020               	movlw	32
  2620  03D0  0020               	movlb	0	; select bank0
  2621  03D1  00CF               	movwf	??_gyro_config
  2622  03D2  084F               	movf	??_gyro_config,w
  2623  03D3  00CC               	movwf	i2c_write@subaddress
  2624  03D4  3057               	movlw	87
  2625  03D5  00D0               	movwf	??_gyro_config+1
  2626  03D6  0850               	movf	??_gyro_config+1,w
  2627  03D7  00CD               	movwf	i2c_write@data
  2628  03D8  3032               	movlw	50
  2629  03D9  3184  2409  3183   	fcall	_i2c_write
  2630                           
  2631                           ;config.c: 62:     i2c_write(0x32, 0x23, 0x90);
  2632  03DC  3023               	movlw	35
  2633  03DD  0020               	movlb	0	; select bank0
  2634  03DE  00CF               	movwf	??_gyro_config
  2635  03DF  084F               	movf	??_gyro_config,w
  2636  03E0  00CC               	movwf	i2c_write@subaddress
  2637  03E1  3090               	movlw	144
  2638  03E2  00D0               	movwf	??_gyro_config+1
  2639  03E3  0850               	movf	??_gyro_config+1,w
  2640  03E4  00CD               	movwf	i2c_write@data
  2641  03E5  3032               	movlw	50
  2642  03E6  3184  2409  3183   	fcall	_i2c_write
  2643                           
  2644                           ;config.c: 63:     i2c_write(0x3C, 0, 0x18);
  2645  03E9  0020               	movlb	0	; select bank0
  2646  03EA  01CC               	clrf	i2c_write@subaddress
  2647  03EB  3018               	movlw	24
  2648  03EC  00CF               	movwf	??_gyro_config
  2649  03ED  084F               	movf	??_gyro_config,w
  2650  03EE  00CD               	movwf	i2c_write@data
  2651  03EF  303C               	movlw	60
  2652  03F0  3184  2409  3183   	fcall	_i2c_write
  2653                           
  2654                           ;config.c: 64:     i2c_write(0x3C, 1, 0x80);
  2655  03F3  0020               	movlb	0	; select bank0
  2656  03F4  01CC               	clrf	i2c_write@subaddress
  2657  03F5  0ACC               	incf	i2c_write@subaddress,f
  2658  03F6  3080               	movlw	128
  2659  03F7  00CF               	movwf	??_gyro_config
  2660  03F8  084F               	movf	??_gyro_config,w
  2661  03F9  00CD               	movwf	i2c_write@data
  2662  03FA  303C               	movlw	60
  2663  03FB  3184  2409  3183   	fcall	_i2c_write
  2664                           
  2665                           ;config.c: 65:     i2c_write(0x3C, 2, 0);
  2666  03FE  3002               	movlw	2
  2667  03FF  0020               	movlb	0	; select bank0
  2668  0400  00CF               	movwf	??_gyro_config
  2669  0401  084F               	movf	??_gyro_config,w
  2670  0402  00CC               	movwf	i2c_write@subaddress
  2671  0403  01CD               	clrf	i2c_write@data
  2672  0404  303C               	movlw	60
  2673  0405  3184  2409  3183   	fcall	_i2c_write
  2674  0408                     l230:
  2675  0408  0008               	return
  2676  0409                     __end_of_gyro_config:
  2677                           
  2678                           	psect	text7
  2679  0409                     __ptext7:	
  2680 ;; *************** function _i2c_write *****************
  2681 ;; Defined at:
  2682 ;;		line 80 in file "config.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  address         1    wreg     unsigned char 
  2685 ;;  subaddress      1    2[BANK0 ] unsigned char 
  2686 ;;  data            1    3[BANK0 ] unsigned char 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  address         1    4[BANK0 ] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;Total ram usage:        3 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    3
  2705 ;; This function calls:
  2706 ;;		_i2c_start
  2707 ;;		_i2c_stop
  2708 ;;		_i2c_write_byte
  2709 ;;		_nack
  2710 ;; This function is called by:
  2711 ;;		_gyro_config
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _i2c_write
  2717  0409                     _i2c_write:
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2721                           ;i2c_write@address stored from wreg
  2722  0409  0020               	movlb	0	; select bank0
  2723  040A  00CE               	movwf	i2c_write@address
  2724  040B                     l1617:
  2725                           
  2726                           ;config.c: 81:     i2c_start();
  2727  040B  3184  249C  3184   	fcall	_i2c_start
  2728  040E                     l1619:
  2729                           
  2730                           ;config.c: 82:     i2c_write_byte(address);
  2731  040E  0020               	movlb	0	; select bank0
  2732  040F  084E               	movf	i2c_write@address,w
  2733  0410  3184  2463  3184   	fcall	_i2c_write_byte
  2734  0413                     l1621:
  2735                           
  2736                           ;config.c: 83:     if(nack())
  2737  0413  3184  2478  3184   	fcall	_nack
  2738  0416  0020               	movlb	0	; select bank0
  2739  0417  084A               	movf	?_nack,w
  2740  0418  044B               	iorwf	?_nack+1,w
  2741  0419  1903               	btfsc	3,2
  2742  041A  2C1C               	goto	u1111
  2743  041B  2C1D               	goto	u1110
  2744  041C                     u1111:
  2745  041C  2C1E               	goto	l1625
  2746  041D                     u1110:
  2747  041D  2C3F               	goto	l237
  2748  041E                     l1625:
  2749                           
  2750                           ;config.c: 85:     i2c_write_byte(subaddress);
  2751  041E  084C               	movf	i2c_write@subaddress,w
  2752  041F  3184  2463  3184   	fcall	_i2c_write_byte
  2753                           
  2754                           ;config.c: 86:     if(nack())
  2755  0422  3184  2478  3184   	fcall	_nack
  2756  0425  0020               	movlb	0	; select bank0
  2757  0426  084A               	movf	?_nack,w
  2758  0427  044B               	iorwf	?_nack+1,w
  2759  0428  1903               	btfsc	3,2
  2760  0429  2C2B               	goto	u1121
  2761  042A  2C2C               	goto	u1120
  2762  042B                     u1121:
  2763  042B  2C2D               	goto	l1629
  2764  042C                     u1120:
  2765  042C  2C3F               	goto	l237
  2766  042D                     l1629:
  2767                           
  2768                           ;config.c: 88:     i2c_write_byte(data);
  2769  042D  084D               	movf	i2c_write@data,w
  2770  042E  3184  2463  3184   	fcall	_i2c_write_byte
  2771                           
  2772                           ;config.c: 89:     if(nack())
  2773  0431  3184  2478  3184   	fcall	_nack
  2774  0434  0020               	movlb	0	; select bank0
  2775  0435  084A               	movf	?_nack,w
  2776  0436  044B               	iorwf	?_nack+1,w
  2777  0437  1903               	btfsc	3,2
  2778  0438  2C3A               	goto	u1131
  2779  0439  2C3B               	goto	u1130
  2780  043A                     u1131:
  2781  043A  2C3C               	goto	l1633
  2782  043B                     u1130:
  2783  043B  2C3F               	goto	l237
  2784  043C                     l1633:
  2785                           
  2786                           ;config.c: 91:     i2c_stop();
  2787  043C  3184  2493  3184   	fcall	_i2c_stop
  2788  043F                     l237:
  2789  043F  0008               	return
  2790  0440                     __end_of_i2c_write:
  2791                           
  2792                           	psect	text8
  2793  0478                     __ptext8:	
  2794 ;; *************** function _nack *****************
  2795 ;; Defined at:
  2796 ;;		line 131 in file "config.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  2    0[BANK0 ] int 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    2
  2817 ;; This function calls:
  2818 ;;		_i2c_stop
  2819 ;; This function is called by:
  2820 ;;		_i2c_write
  2821 ;;		_i2c_read
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _nack
  2827  0478                     _nack:
  2828  0478                     l1589:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _nack: [wreg+status,2+status,0+pclath+cstack]
  2831                           
  2832                           
  2833                           ;config.c: 132:     if(SSP1CON2bits.ACKSTAT){
  2834  0478  0024               	movlb	4	; select bank4
  2835  0479  1F16               	btfss	22,6	;volatile
  2836  047A  2C7C               	goto	u1071
  2837  047B  2C7D               	goto	u1070
  2838  047C                     u1071:
  2839  047C  2C86               	goto	l1597
  2840  047D                     u1070:
  2841  047D                     l1591:
  2842                           
  2843                           ;config.c: 133:         i2c_stop();
  2844  047D  3184  2493  3184   	fcall	_i2c_stop
  2845  0480                     l1593:
  2846                           
  2847                           ;config.c: 134:         return 1;
  2848  0480  3001               	movlw	1
  2849  0481  0020               	movlb	0	; select bank0
  2850  0482  00CA               	movwf	?_nack
  2851  0483  3000               	movlw	0
  2852  0484  00CB               	movwf	?_nack+1
  2853  0485  2C89               	goto	l260
  2854  0486                     l1597:
  2855                           
  2856                           ;config.c: 136:     return 0;
  2857  0486  0020               	movlb	0	; select bank0
  2858  0487  01CA               	clrf	?_nack
  2859  0488  01CB               	clrf	?_nack+1
  2860  0489                     l260:
  2861  0489  0008               	return
  2862  048A                     __end_of_nack:
  2863                           
  2864                           	psect	text9
  2865  0493                     __ptext9:	
  2866 ;; *************** function _i2c_stop *****************
  2867 ;; Defined at:
  2868 ;;		line 160 in file "config.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		None
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_i2c_write
  2893 ;;		_i2c_read
  2894 ;;		_nack
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _i2c_stop
  2900  0493                     _i2c_stop:
  2901  0493                     l1579:	
  2902                           ;incstack = 0
  2903                           ; Regs used in _i2c_stop: []
  2904                           
  2905                           
  2906                           ;config.c: 161:     SSP1CON2bits.PEN = 1;
  2907  0493  0024               	movlb	4	; select bank4
  2908  0494  1516               	bsf	22,2	;volatile
  2909  0495                     l282:	
  2910                           ;config.c: 162:     while(SSP1CON2bits.PEN);
  2911                           
  2912  0495  1916               	btfsc	22,2	;volatile
  2913  0496  2C98               	goto	u1031
  2914  0497  2C99               	goto	u1030
  2915  0498                     u1031:
  2916  0498  2C95               	goto	l282
  2917  0499                     u1030:
  2918  0499                     l284:
  2919                           
  2920                           ;config.c: 163:     PIR1bits.SSP1IF = 0;
  2921  0499  0020               	movlb	0	; select bank0
  2922  049A  1190               	bcf	16,3	;volatile
  2923  049B                     l285:
  2924  049B  0008               	return
  2925  049C                     __end_of_i2c_stop:
  2926                           
  2927                           	psect	text10
  2928  0463                     __ptext10:	
  2929 ;; *************** function _i2c_write_byte *****************
  2930 ;; Defined at:
  2931 ;;		line 151 in file "config.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  address         1    wreg     unsigned char 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  address         1    0[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;Total ram usage:        1 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_i2c_write
  2956 ;;		_i2c_read
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _i2c_write_byte
  2962  0463                     _i2c_write_byte:
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _i2c_write_byte: [wreg]
  2966                           ;i2c_write_byte@address stored from wreg
  2967  0463  0020               	movlb	0	; select bank0
  2968  0464  00CA               	movwf	i2c_write_byte@address
  2969  0465                     l1583:
  2970                           
  2971                           ;config.c: 152:     SSP1CON2bits.RCEN = 0;
  2972  0465  0024               	movlb	4	; select bank4
  2973  0466  1196               	bcf	22,3	;volatile
  2974  0467                     l1585:
  2975                           
  2976                           ;config.c: 153:     SSP1BUF = address;
  2977  0467  0020               	movlb	0	; select bank0
  2978  0468  084A               	movf	i2c_write_byte@address,w
  2979  0469  0024               	movlb	4	; select bank4
  2980  046A  0091               	movwf	17	;volatile
  2981  046B                     l275:	
  2982                           ;config.c: 154:     while(SSP1STATbits.BF);
  2983                           
  2984  046B  1814               	btfsc	20,0	;volatile
  2985  046C  2C6E               	goto	u1051
  2986  046D  2C6F               	goto	u1050
  2987  046E                     u1051:
  2988  046E  2C6B               	goto	l275
  2989  046F                     u1050:
  2990  046F                     l277:
  2991                           
  2992                           ;config.c: 155:     PIR1bits.SSP1IF = 0;
  2993  046F  0020               	movlb	0	; select bank0
  2994  0470  1190               	bcf	16,3	;volatile
  2995                           
  2996                           ;config.c: 156:     if(SSP1CON1bits.WCOL)
  2997  0471  0024               	movlb	4	; select bank4
  2998  0472  1F95               	btfss	21,7	;volatile
  2999  0473  2C75               	goto	u1061
  3000  0474  2C76               	goto	u1060
  3001  0475                     u1061:
  3002  0475  2C77               	goto	l279
  3003  0476                     u1060:
  3004  0476                     l1587:
  3005                           
  3006                           ;config.c: 157:         SSP1CON1bits.WCOL = 0;
  3007  0476  1395               	bcf	21,7	;volatile
  3008  0477                     l279:
  3009  0477  0008               	return
  3010  0478                     __end_of_i2c_write_byte:
  3011                           
  3012                           	psect	text11
  3013  049C                     __ptext11:	
  3014 ;; *************** function _i2c_start *****************
  3015 ;; Defined at:
  3016 ;;		line 139 in file "config.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		None
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;Total ram usage:        0 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_i2c_write
  3041 ;;		_i2c_read
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _i2c_start
  3047  049C                     _i2c_start:
  3048  049C                     l1581:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _i2c_start: []
  3051                           
  3052                           
  3053                           ;config.c: 140:     SSP1CON2bits.SEN = 1;
  3054  049C  0024               	movlb	4	; select bank4
  3055  049D  1416               	bsf	22,0	;volatile
  3056  049E                     l263:	
  3057                           ;config.c: 141:     while((SSP1CON2bits.SEN));
  3058                           
  3059  049E  1816               	btfsc	22,0	;volatile
  3060  049F  2CA1               	goto	u1041
  3061  04A0  2CA2               	goto	u1040
  3062  04A1                     u1041:
  3063  04A1  2C9E               	goto	l263
  3064  04A2                     u1040:
  3065  04A2                     l265:
  3066                           
  3067                           ;config.c: 142:     PIR1bits.SSP1IF = 0;
  3068  04A2  0020               	movlb	0	; select bank0
  3069  04A3  1190               	bcf	16,3	;volatile
  3070  04A4                     l266:
  3071  04A4  0008               	return
  3072  04A5                     __end_of_i2c_start:
  3073                           
  3074                           	psect	intentry
  3075  0004                     __pintentry:	
  3076 ;; *************** function _remote *****************
  3077 ;; Defined at:
  3078 ;;		line 166 in file "config.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;Total ram usage:        6 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		Interrupt level 1
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105  0004                     _remote:
  3106                           
  3107                           ;incstack = 0
  3108  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3109                           
  3110                           ; Regs used in _remote: [wreg+status,2+status,0]
  3111  0005  3180               	pagesel	$
  3112  0006                     i1l1457:
  3113                           
  3114                           ;config.c: 168:     if(INTCONbits.T0IF)
  3115  0006  1D0B               	btfss	11,2	;volatile
  3116  0007  2809               	goto	u88_21
  3117  0008  280A               	goto	u88_20
  3118  0009                     u88_21:
  3119  0009  2810               	goto	i1l1463
  3120  000A                     u88_20:
  3121  000A                     i1l1459:
  3122                           
  3123                           ;config.c: 169:     {;config.c: 170:         TMR0H++;
  3124  000A  3001               	movlw	1
  3125  000B  0020               	movlb	0	; select bank0
  3126  000C  07AC               	addwf	_TMR0H,f
  3127  000D  3000               	movlw	0
  3128  000E  3DAD               	addwfc	_TMR0H+1,f
  3129  000F                     i1l1461:
  3130                           
  3131                           ;config.c: 171:         INTCONbits.T0IF = 0;
  3132  000F  110B               	bcf	11,2	;volatile
  3133  0010                     i1l1463:
  3134                           
  3135                           ;config.c: 174:     if(PIR1bits.TMR2IF){
  3136  0010  0020               	movlb	0	; select bank0
  3137  0011  1C90               	btfss	16,1	;volatile
  3138  0012  2814               	goto	u89_21
  3139  0013  2815               	goto	u89_20
  3140  0014                     u89_21:
  3141  0014  281A               	goto	i1l1469
  3142  0015                     u89_20:
  3143  0015                     i1l1465:
  3144                           
  3145                           ;config.c: 175:         TMR2H++;
  3146  0015  3001               	movlw	1
  3147  0016  07F2               	addwf	_TMR2H,f
  3148  0017  3000               	movlw	0
  3149  0018  3DF3               	addwfc	_TMR2H+1,f
  3150  0019                     i1l1467:
  3151                           
  3152                           ;config.c: 176:         PIR1bits.TMR2IF = 0;
  3153  0019  1090               	bcf	16,1	;volatile
  3154  001A                     i1l1469:
  3155                           
  3156                           ;config.c: 179:     if(INTCONbits.IOCIF){
  3157  001A  1C0B               	btfss	11,0	;volatile
  3158  001B  281D               	goto	u90_21
  3159  001C  281E               	goto	u90_20
  3160  001D                     u90_21:
  3161  001D  28E6               	goto	i1l309
  3162  001E                     u90_20:
  3163  001E                     i1l1471:
  3164                           
  3165                           ;config.c: 180:         if(IOCCFbits.IOCCF3)
  3166  001E  0027               	movlb	7	; select bank7
  3167  001F  1D99               	btfss	25,3	;volatile
  3168  0020  2822               	goto	u91_21
  3169  0021  2823               	goto	u91_20
  3170  0022                     u91_21:
  3171  0022  284A               	goto	i1l1495
  3172  0023                     u91_20:
  3173  0023                     i1l1473:
  3174                           
  3175                           ;config.c: 181:         {;config.c: 182:             if(p.p1)
  3176  0023  0020               	movlb	0	; select bank0
  3177  0024  1C49               	btfss	_p,0
  3178  0025  2827               	goto	u92_21
  3179  0026  2828               	goto	u92_20
  3180  0027                     u92_21:
  3181  0027  283F               	goto	i1l294
  3182  0028                     u92_20:
  3183  0028                     i1l1475:
  3184                           
  3185                           ;config.c: 183:             {;config.c: 184:                 T1CONbits.TMR1ON = 0;
  3186  0028  1018               	bcf	24,0	;volatile
  3187  0029                     i1l1477:
  3188                           
  3189                           ;config.c: 185:                 if(TMR1 < 2100)
  3190  0029  3008               	movlw	8
  3191  002A  0217               	subwf	23,w	;volatile
  3192  002B  3034               	movlw	52
  3193  002C  1903               	skipnz
  3194  002D  0216               	subwf	22,w	;volatile
  3195  002E  1803               	skipnc
  3196  002F  2831               	goto	u93_21
  3197  0030  2832               	goto	u93_20
  3198  0031                     u93_21:
  3199  0031  2836               	goto	i1l1481
  3200  0032                     u93_20:
  3201  0032                     i1l1479:
  3202                           
  3203                           ;config.c: 186:                     ch1 = TMR1;
  3204  0032  0817               	movf	23,w	;volatile
  3205  0033  00F1               	movwf	_ch1+1
  3206  0034  0816               	movf	22,w	;volatile
  3207  0035  00F0               	movwf	_ch1
  3208  0036                     i1l1481:
  3209                           
  3210                           ;config.c: 187:                 IOCCN &= 0b11110111;
  3211  0036  30F7               	movlw	247
  3212  0037  00F6               	movwf	??_remote
  3213  0038  0876               	movf	??_remote,w
  3214  0039  0027               	movlb	7	; select bank7
  3215  003A  0598               	andwf	24,f	;volatile
  3216  003B                     i1l1483:
  3217                           
  3218                           ;config.c: 188:                 IOCCP |= 0b00001000;
  3219  003B  1597               	bsf	23,3	;volatile
  3220  003C                     i1l1485:
  3221                           
  3222                           ;config.c: 189:                 p.p1 = 0;
  3223  003C  0020               	movlb	0	; select bank0
  3224  003D  1049               	bcf	_p,0
  3225                           
  3226                           ;config.c: 190:             }
  3227  003E  284A               	goto	i1l1495
  3228  003F                     i1l294:	
  3229                           ;config.c: 191:             else
  3230                           
  3231                           
  3232                           ;config.c: 192:             {;config.c: 193:                 T1CONbits.TMR1ON = 1;
  3233  003F  1418               	bsf	24,0	;volatile
  3234  0040                     i1l1487:
  3235                           
  3236                           ;config.c: 194:                 TMR1 = 0;
  3237  0040  0196               	clrf	22	;volatile
  3238  0041  0197               	clrf	23	;volatile
  3239  0042                     i1l1489:
  3240                           
  3241                           ;config.c: 195:                 IOCCP &= 0b11110111;
  3242  0042  30F7               	movlw	247
  3243  0043  00F6               	movwf	??_remote
  3244  0044  0876               	movf	??_remote,w
  3245  0045  0027               	movlb	7	; select bank7
  3246  0046  0597               	andwf	23,f	;volatile
  3247  0047                     i1l1491:
  3248                           
  3249                           ;config.c: 196:                 IOCCN |= 0b00001000;
  3250  0047  1598               	bsf	24,3	;volatile
  3251  0048                     i1l1493:
  3252                           
  3253                           ;config.c: 197:                 p.p1 = 1;
  3254  0048  0020               	movlb	0	; select bank0
  3255  0049  1449               	bsf	_p,0
  3256  004A                     i1l1495:
  3257                           
  3258                           ;config.c: 201:         if(IOCCFbits.IOCCF4)
  3259  004A  0027               	movlb	7	; select bank7
  3260  004B  1E19               	btfss	25,4	;volatile
  3261  004C  284E               	goto	u94_21
  3262  004D  284F               	goto	u94_20
  3263  004E                     u94_21:
  3264  004E  287A               	goto	i1l1523
  3265  004F                     u94_20:
  3266  004F                     i1l1497:
  3267                           
  3268                           ;config.c: 202:         {;config.c: 203:             if(p.p2)
  3269  004F  0020               	movlb	0	; select bank0
  3270  0050  1CC9               	btfss	_p,1
  3271  0051  2853               	goto	u95_21
  3272  0052  2854               	goto	u95_20
  3273  0053                     u95_21:
  3274  0053  286D               	goto	i1l298
  3275  0054                     u95_20:
  3276  0054                     i1l1499:
  3277                           
  3278                           ;config.c: 204:             {;config.c: 205:                 T3CONbits.TMR3ON = 0;
  3279  0054  0029               	movlb	9	; select bank9
  3280  0055  1015               	bcf	21,0	;volatile
  3281  0056                     i1l1501:
  3282                           
  3283                           ;config.c: 206:                 IOCCN &= 0b11101111;
  3284  0056  30EF               	movlw	239
  3285  0057  00F6               	movwf	??_remote
  3286  0058  0876               	movf	??_remote,w
  3287  0059  0027               	movlb	7	; select bank7
  3288  005A  0598               	andwf	24,f	;volatile
  3289  005B                     i1l1503:
  3290                           
  3291                           ;config.c: 207:                 IOCCP |= 0b00010000;
  3292  005B  1617               	bsf	23,4	;volatile
  3293  005C                     i1l1505:
  3294                           
  3295                           ;config.c: 208:                 if(TMR3H < 9)
  3296  005C  3009               	movlw	9
  3297  005D  0029               	movlb	9	; select bank9
  3298  005E  0214               	subwf	20,w	;volatile
  3299  005F  1803               	skipnc
  3300  0060  2862               	goto	u96_21
  3301  0061  2863               	goto	u96_20
  3302  0062                     u96_21:
  3303  0062  286A               	goto	i1l1509
  3304  0063                     u96_20:
  3305  0063                     i1l1507:
  3306                           
  3307                           ;config.c: 209:                     ch2 = ((unsigned)TMR3H<<8) | (unsigned)TMR3L;
  3308  0063  0814               	movf	20,w	;volatile
  3309  0064  0020               	movlb	0	; select bank0
  3310  0065  00A9               	movwf	_ch2+1
  3311  0066  0029               	movlb	9	; select bank9
  3312  0067  0813               	movf	19,w	;volatile
  3313  0068  0020               	movlb	0	; select bank0
  3314  0069  00A8               	movwf	_ch2
  3315  006A                     i1l1509:
  3316                           
  3317                           ;config.c: 210:                 p.p2 = 0;
  3318  006A  0020               	movlb	0	; select bank0
  3319  006B  10C9               	bcf	_p,1
  3320                           
  3321                           ;config.c: 211:             }
  3322  006C  287A               	goto	i1l1523
  3323  006D                     i1l298:	
  3324                           ;config.c: 212:             else
  3325                           
  3326                           
  3327                           ;config.c: 213:             {;config.c: 214:                 IOCCN |= 0b00010000;
  3328  006D  0027               	movlb	7	; select bank7
  3329  006E  1618               	bsf	24,4	;volatile
  3330  006F                     i1l1511:
  3331                           
  3332                           ;config.c: 215:                 IOCCP &= 0b11101111;
  3333  006F  30EF               	movlw	239
  3334  0070  00F6               	movwf	??_remote
  3335  0071  0876               	movf	??_remote,w
  3336  0072  0597               	andwf	23,f	;volatile
  3337  0073                     i1l1513:
  3338                           
  3339                           ;config.c: 216:                 TMR3L = 0;
  3340  0073  0029               	movlb	9	; select bank9
  3341  0074  0193               	clrf	19	;volatile
  3342  0075                     i1l1515:
  3343                           
  3344                           ;config.c: 217:                 TMR3H = 0;
  3345  0075  0194               	clrf	20	;volatile
  3346  0076                     i1l1517:
  3347                           
  3348                           ;config.c: 218:                 TMR3L = 0;
  3349  0076  0193               	clrf	19	;volatile
  3350  0077                     i1l1519:
  3351                           
  3352                           ;config.c: 219:                 T3CONbits.TMR3ON = 1;
  3353  0077  1415               	bsf	21,0	;volatile
  3354  0078                     i1l1521:
  3355                           
  3356                           ;config.c: 220:                 p.p2 = 1;
  3357  0078  0020               	movlb	0	; select bank0
  3358  0079  14C9               	bsf	_p,1
  3359  007A                     i1l1523:
  3360                           
  3361                           ;config.c: 224:         if(IOCCFbits.IOCCF5)
  3362  007A  0027               	movlb	7	; select bank7
  3363  007B  1E99               	btfss	25,5	;volatile
  3364  007C  287E               	goto	u97_21
  3365  007D  287F               	goto	u97_20
  3366  007E                     u97_21:
  3367  007E  28A9               	goto	i1l1549
  3368  007F                     u97_20:
  3369  007F                     i1l1525:
  3370                           
  3371                           ;config.c: 225:         {;config.c: 226:             if(p.p3)
  3372  007F  0020               	movlb	0	; select bank0
  3373  0080  1D49               	btfss	_p,2
  3374  0081  2883               	goto	u98_21
  3375  0082  2884               	goto	u98_20
  3376  0083                     u98_21:
  3377  0083  289D               	goto	i1l302
  3378  0084                     u98_20:
  3379  0084                     i1l1527:
  3380                           
  3381                           ;config.c: 227:             {;config.c: 228:                 T5CONbits.TMR5ON = 0;
  3382  0084  0029               	movlb	9	; select bank9
  3383  0085  101C               	bcf	28,0	;volatile
  3384  0086                     i1l1529:
  3385                           
  3386                           ;config.c: 229:                 IOCCN &= 0b11011111;
  3387  0086  30DF               	movlw	223
  3388  0087  00F6               	movwf	??_remote
  3389  0088  0876               	movf	??_remote,w
  3390  0089  0027               	movlb	7	; select bank7
  3391  008A  0598               	andwf	24,f	;volatile
  3392  008B                     i1l1531:
  3393                           
  3394                           ;config.c: 230:                 IOCCP |= 0b00100000;
  3395  008B  1697               	bsf	23,5	;volatile
  3396  008C                     i1l1533:
  3397                           
  3398                           ;config.c: 231:                 if(TMR5H < 9)
  3399  008C  3009               	movlw	9
  3400  008D  0029               	movlb	9	; select bank9
  3401  008E  021B               	subwf	27,w	;volatile
  3402  008F  1803               	skipnc
  3403  0090  2892               	goto	u99_21
  3404  0091  2893               	goto	u99_20
  3405  0092                     u99_21:
  3406  0092  289A               	goto	i1l1537
  3407  0093                     u99_20:
  3408  0093                     i1l1535:
  3409                           
  3410                           ;config.c: 232:                     ch3 = ((unsigned)TMR5H << 8) | (unsigned)TMR5L;
  3411  0093  081B               	movf	27,w	;volatile
  3412  0094  0020               	movlb	0	; select bank0
  3413  0095  00A7               	movwf	_ch3+1
  3414  0096  0029               	movlb	9	; select bank9
  3415  0097  081A               	movf	26,w	;volatile
  3416  0098  0020               	movlb	0	; select bank0
  3417  0099  00A6               	movwf	_ch3
  3418  009A                     i1l1537:
  3419                           
  3420                           ;config.c: 233:                 p.p3 = 0;
  3421  009A  0020               	movlb	0	; select bank0
  3422  009B  1149               	bcf	_p,2
  3423                           
  3424                           ;config.c: 234:             }
  3425  009C  28A9               	goto	i1l1549
  3426  009D                     i1l302:	
  3427                           ;config.c: 235:             else
  3428                           
  3429                           
  3430                           ;config.c: 236:             {;config.c: 237:                 IOCCN |= 0b00100000;
  3431  009D  0027               	movlb	7	; select bank7
  3432  009E  1698               	bsf	24,5	;volatile
  3433  009F                     i1l1539:
  3434                           
  3435                           ;config.c: 238:                 IOCCP &= 0b11011111;
  3436  009F  30DF               	movlw	223
  3437  00A0  00F6               	movwf	??_remote
  3438  00A1  0876               	movf	??_remote,w
  3439  00A2  0597               	andwf	23,f	;volatile
  3440  00A3                     i1l1541:
  3441                           
  3442                           ;config.c: 239:                 TMR5L = 0;
  3443  00A3  0029               	movlb	9	; select bank9
  3444  00A4  019A               	clrf	26	;volatile
  3445  00A5                     i1l1543:
  3446                           
  3447                           ;config.c: 240:                 TMR5H = 0;
  3448  00A5  019B               	clrf	27	;volatile
  3449  00A6                     i1l1545:
  3450                           
  3451                           ;config.c: 241:                 T5CONbits.TMR5ON = 1;
  3452  00A6  141C               	bsf	28,0	;volatile
  3453  00A7                     i1l1547:
  3454                           
  3455                           ;config.c: 242:                 p.p3 = 1;
  3456  00A7  0020               	movlb	0	; select bank0
  3457  00A8  1549               	bsf	_p,2
  3458  00A9                     i1l1549:
  3459                           
  3460                           ;config.c: 246:         if(IOCCFbits.IOCCF6)
  3461  00A9  0027               	movlb	7	; select bank7
  3462  00AA  1F19               	btfss	25,6	;volatile
  3463  00AB  28AD               	goto	u100_21
  3464  00AC  28AE               	goto	u100_20
  3465  00AD                     u100_21:
  3466  00AD  28E3               	goto	i1l1575
  3467  00AE                     u100_20:
  3468  00AE                     i1l1551:
  3469                           
  3470                           ;config.c: 247:         {;config.c: 248:             if(p.p4)
  3471  00AE  0020               	movlb	0	; select bank0
  3472  00AF  1DC9               	btfss	_p,3
  3473  00B0  28B2               	goto	u101_21
  3474  00B1  28B3               	goto	u101_20
  3475  00B2                     u101_21:
  3476  00B2  28D7               	goto	i1l306
  3477  00B3                     u101_20:
  3478  00B3                     i1l1553:
  3479                           
  3480                           ;config.c: 249:             {;config.c: 250:                 T2CONbits.ON = 0;
  3481  00B3  139C               	bcf	28,7	;volatile
  3482  00B4                     i1l1555:
  3483                           
  3484                           ;config.c: 251:                 IOCCN &= 0b10111111;
  3485  00B4  30BF               	movlw	191
  3486  00B5  00F6               	movwf	??_remote
  3487  00B6  0876               	movf	??_remote,w
  3488  00B7  0027               	movlb	7	; select bank7
  3489  00B8  0598               	andwf	24,f	;volatile
  3490  00B9                     i1l1557:
  3491                           
  3492                           ;config.c: 252:                 IOCCP |= 0b01000000;
  3493  00B9  1717               	bsf	23,6	;volatile
  3494  00BA                     i1l1559:
  3495                           
  3496                           ;config.c: 253:                 if(TMR2H < 9)
  3497  00BA  3000               	movlw	0
  3498  00BB  0273               	subwf	_TMR2H+1,w
  3499  00BC  3009               	movlw	9
  3500  00BD  1903               	skipnz
  3501  00BE  0272               	subwf	_TMR2H,w
  3502  00BF  1803               	skipnc
  3503  00C0  28C2               	goto	u102_21
  3504  00C1  28C3               	goto	u102_20
  3505  00C2                     u102_21:
  3506  00C2  28D4               	goto	i1l1563
  3507  00C3                     u102_20:
  3508  00C3                     i1l1561:
  3509                           
  3510                           ;config.c: 254:                     ch4 = (TMR2H<<8) | TMR2;
  3511  00C3  0020               	movlb	0	; select bank0
  3512  00C4  081A               	movf	26,w	;volatile
  3513  00C5  00F6               	movwf	??_remote
  3514  00C6  01F7               	clrf	??_remote+1
  3515  00C7  0872               	movf	_TMR2H,w
  3516  00C8  00F9               	movwf	??_remote+3
  3517  00C9  01F8               	clrf	??_remote+2
  3518  00CA  0876               	movf	??_remote,w
  3519  00CB  0478               	iorwf	??_remote+2,w
  3520  00CC  00FA               	movwf	??_remote+4
  3521  00CD  0877               	movf	??_remote+1,w
  3522  00CE  0479               	iorwf	??_remote+3,w
  3523  00CF  00FB               	movwf	??_remote+5
  3524  00D0  087A               	movf	??_remote+4,w
  3525  00D1  00A4               	movwf	_ch4
  3526  00D2  087B               	movf	??_remote+5,w
  3527  00D3  00A5               	movwf	_ch4+1
  3528  00D4                     i1l1563:
  3529                           
  3530                           ;config.c: 255:                 p.p4 = 0;
  3531  00D4  0020               	movlb	0	; select bank0
  3532  00D5  11C9               	bcf	_p,3
  3533                           
  3534                           ;config.c: 256:             }
  3535  00D6  28E3               	goto	i1l1575
  3536  00D7                     i1l306:	
  3537                           ;config.c: 257:             else
  3538                           
  3539                           
  3540                           ;config.c: 258:             {;config.c: 259:                 IOCCN |= 0b01000000;
  3541  00D7  0027               	movlb	7	; select bank7
  3542  00D8  1718               	bsf	24,6	;volatile
  3543  00D9                     i1l1565:
  3544                           
  3545                           ;config.c: 260:                 IOCCP &= 0b10111111;
  3546  00D9  30BF               	movlw	191
  3547  00DA  00F6               	movwf	??_remote
  3548  00DB  0876               	movf	??_remote,w
  3549  00DC  0597               	andwf	23,f	;volatile
  3550  00DD                     i1l1567:
  3551                           
  3552                           ;config.c: 261:                 TMR2 = 0;
  3553  00DD  0020               	movlb	0	; select bank0
  3554  00DE  019A               	clrf	26	;volatile
  3555  00DF                     i1l1569:
  3556                           
  3557                           ;config.c: 262:                 TMR2H = 0;
  3558  00DF  01F2               	clrf	_TMR2H
  3559  00E0  01F3               	clrf	_TMR2H+1
  3560  00E1                     i1l1571:
  3561                           
  3562                           ;config.c: 263:                 T2CONbits.ON = 1;
  3563  00E1  179C               	bsf	28,7	;volatile
  3564  00E2                     i1l1573:
  3565                           
  3566                           ;config.c: 264:                 p.p4 = 1;
  3567  00E2  15C9               	bsf	_p,3
  3568  00E3                     i1l1575:
  3569                           
  3570                           ;config.c: 267:         IOCCF = 0;
  3571  00E3  0027               	movlb	7	; select bank7
  3572  00E4  0199               	clrf	25	;volatile
  3573  00E5                     i1l1577:
  3574                           
  3575                           ;config.c: 268:         INTCONbits.IOCIF = 0;
  3576  00E5  100B               	bcf	11,0	;volatile
  3577  00E6                     i1l309:
  3578  00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3579  00E7  0009               	retfie
  3580  00E8                     __end_of_remote:
  3581  007E                     btemp	set	126	;btemp
  3582  007E                     int$flags	set	126
  3583  007E                     wtemp0	set	126
  3584                           
  3585                           	psect	config
  3586                           
  3587                           ;Config register CONFIG1 @ 0x8007
  3588                           ;	Oscillator Selection Bits
  3589                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3590                           ;	Power-up Timer Enable
  3591                           ;	PWRTE = OFF, PWRT disabled
  3592                           ;	MCLR Pin Function Select
  3593                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3594                           ;	Flash Program Memory Code Protection
  3595                           ;	CP = OFF, Program memory code protection is disabled
  3596                           ;	Brown-out Reset Enable
  3597                           ;	BOREN = OFF, Brown-out Reset disabled
  3598                           ;	Clock Out Enable
  3599                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3600                           ;	Internal/External Switch Over
  3601                           ;	IESO = ON, Internal External Switch Over mode is enabled
  3602                           ;	Fail-Safe Clock Monitor Enable
  3603                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3604  8007                     	org	32775
  3605  8007  39BC               	dw	14780
  3606                           
  3607                           ;Config register CONFIG2 @ 0x8008
  3608                           ;	Flash Memory Self-Write Protection
  3609                           ;	WRT = OFF, Write protection off
  3610                           ;	Peripheral Pin Select one-way control
  3611                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3612                           ;	Zero Cross Detect Disable Bit
  3613                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3614                           ;	PLL Enable Bit
  3615                           ;	PLLEN = ON, 4x PLL is always enabled
  3616                           ;	Stack Overflow/Underflow Reset Enable
  3617                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3618                           ;	Brown-out Reset Voltage Selection
  3619                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3620                           ;	Low-Power Brown Out Reset
  3621                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3622                           ;	Low-Voltage Programming Enable
  3623                           ;	LVP = ON, Low-voltage programming enabled
  3624  8008                     	org	32776
  3625  8008  3FFF               	dw	16383
  3626                           
  3627                           ;Config register CONFIG3 @ 0x8009
  3628                           ;	WDT Period Select
  3629                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3630                           ;	Watchdog Timer Enable
  3631                           ;	WDTE = OFF, WDT disabled
  3632                           ;	WDT Window Select
  3633                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3634                           ;	WDT Input Clock Selector
  3635                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3636  8009                     	org	32777
  3637  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _remote in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_sensor
    _read_sensor->_i2c_read
    _i2c_read->_i2c_read_byte
    _gyro_config->_i2c_write
    _i2c_write->_nack

Critical Paths under _remote in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _remote in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _remote in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _remote in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _remote in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _remote in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _remote in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _remote in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _remote in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _remote in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _remote in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _remote in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _remote in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2544
                                             18 BANK0      8     8      0
                        _gyro_config
                           _pic_init
                        _read_sensor
 ---------------------------------------------------------------------------------
 (1) _read_sensor                                          1     1      0    1160
                                             17 BANK0      1     1      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                            10     8      2    1160
                                              7 BANK0     10     8      2
                      _i2c_read_byte
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_byte                                        7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gyro_config                                          2     2      0    1384
                                              5 BANK0      2     2      0
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    1384
                                              2 BANK0      3     1      2
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _nack                                                 2     0      2       0
                                              0 BANK0      2     0      2
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_write_byte                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _remote                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gyro_config
     _i2c_write
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _pic_init
   _read_sensor
     _i2c_read
       _i2c_read_byte
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop

 _remote (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Apr 19 21:22:40 2022

                      _p 0049                       l80 0220                       l81 0240  
                     l79 0200                      l230 0408                      l224 0368  
                    l233 02EE                      l226 036C                      l250 0444  
                    l227 03B4                      l243 0360                      l260 0489  
                    l237 043F                      l253 0458                      l263 049E  
                    l255 045C                      l271 0490                      l256 0462  
                    l272 0492                      l265 04A2                      l266 04A4  
                    l282 0495                      l275 046B                      l284 0499  
                    l277 046F                      l285 049B                      l269 048C  
                    l279 0477                      _ch1 0070                      _ch2 0028  
                    _ch3 0026                      _ch4 0024                      wreg 0009  
__size_of_i2c_write_byte 0015                     l1601 048A                     l1611 0457  
                   l1603 0442                     l1621 0413                     l1701 038B  
                   l1613 045E                     l1605 0448                     l1711 0396  
                   l1703 038F                     l1607 0450                     l1633 043C  
                   l1625 041E                     l1617 040B                     l1721 03A4  
                   l1713 039A                     l1705 0391                     l1609 0451  
                   l1641 0303                     l1801 01AB                     l1619 040E  
                   l1731 03AC                     l1723 03A6                     l1715 039C  
                   l1707 0392                     l1651 0315                     l1635 02F1  
                   l1803 01B1                     l1811 01DB                     l1581 049C  
                   l1629 042D                     l1733 03AE                     l1725 03A8  
                   l1717 039F                     l1709 0394                     l1661 0329  
                   l1653 0318                     l1645 0306                     l1637 02F4  
                   l1741 0278                     l1821 025C                     l1813 01E0  
                   l1805 01B5                     l1583 0465                     l1591 047D  
                   l1735 03B0                     l1727 03A9                     l1719 03A1  
                   l1663 033B                     l1655 031E                     l1639 02F9  
                   l1815 01FC                     l1823 0260                     l1807 01D0  
                   l1751 010E                     l1743 00FC                     l1585 0467  
                   l1593 0480                     l1737 03B1                     l1729 03AA  
                   l1681 0374                     l1673 0353                     l1665 033E  
                   l1817 021C                     l1825 0266                     l1809 01D6  
                   l1761 011C                     l1753 0112                     l1745 0102  
                   l1587 0476                     l1579 0493                     l1739 03B5  
                   l1691 0380                     l1683 0376                     l1667 0345  
                   l1827 026F                     l1819 023C                     l1771 0140  
                   l1763 012C                     l1755 0114                     l1747 0107  
                   l1597 0486                     l1589 0478                     l1693 0383  
                   l1685 0377                     l1677 0361                     l1781 0165  
                   l1773 0149                     l1765 0130                     l1757 0115  
                   l1749 0109                     l1695 0385                     l1687 037B  
                   l1679 0371                     l1791 0184                     l1783 0169  
                   l1775 014D                     l1767 0132                     l1759 0117  
                   l1697 0387                     l1689 037E                     l1793 0185  
                   l1777 0153                     l1785 016B                     l1769 0137  
                   l1699 0389                     l1787 0172                     l1795 0187  
                   l1779 015C                     l1797 018A                     l1789 017B  
                   l1799 019B                     u1100 045C                     u1101 045B  
                   u1030 0499                     u1110 041D                     u1031 0498  
                   u1111 041C                     u1040 04A2                     u1120 042C  
                   u1200 0137                     u1041 04A1                     u1121 042B  
                   u1201 0136                     u1050 046F                     u1130 043B  
                   u1210 0140                     u1051 046E                     u1131 043A  
                   u1211 013F                     u1060 0476                     u1140 0303  
                   u1300 01D0                     u1220 0149                     u1061 0475  
                   u1141 0302                     u1301 01CF                     u1221 0148  
                   u1070 047D                     u1150 0314                     u1310 01D6  
                   u1230 0153                     u1071 047C                     u1151 0313  
                   u1311 01D5                     u1231 0152                     u1080 0490  
                   u1160 0328                     u1320 01FC                     u1240 015C  
                   u1081 048F                     u1161 0327                     u1321 01FB  
                   u1241 015B                     u1090 0448                     u1170 0345  
                   u1330 021C                     u1250 0165                     u1091 0447  
                   u1171 0344                     u1331 021B                     u1251 0164  
                   u1180 036C                     u1340 023C                     u1260 0172  
                   u1181 036B                     u1341 023B                     u1325 01F8  
                   u1261 0171                     u1350 025C                     u1270 017B  
                   u1190 011C                     u1351 025B                     u1335 0218  
                   u1271 017A                     u1191 011B                     u1360 0266  
                   u1280 0184                     u1361 0265                     u1345 0238  
                   u1281 0183                     u1370 026F                     u1290 01B1  
                   u1371 026E                     u1355 0258                     u1291 01B0  
                   u1380 0275                     u1381 0274                     _RCEN 10B3  
                   _TMR0 0015                     _TMR1 0016                     _TMR2 001A  
                   _accx 0046                     _accy 0044                     _accz 0042  
                   _esc1 0034                     _esc2 0032                     _esc3 0030  
                   _esc4 002E            _i2c_read_byte 0440                     _nack 0478  
                   _main 00FC                     _magx 003A                     _magy 0038  
                   _magz 0036                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 00E8  
          ??_i2c_restart 004A                    ?_nack 004A                    ?_main 0076  
                  _IOCCF 0399                    _IOCCN 0398                    _IOCCP 0397  
            i2c_read@low 0056                    i1l302 009D                    i1l306 00D7  
                  _T2RST 001F                    i1l309 00E6                    i1l294 003F  
                  i1l298 006D                    _TMR0H 002C                    _TMR2H 0072  
                  _TMR3H 0494                    _TMR3L 0493                    _TMR5H 049B  
                  _TMR5L 049A                    _PORTA 000C                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    u90_20 001E  
                  u90_21 001D                    u91_20 0023                    u91_21 0022  
                  u92_20 0028                    u92_21 0027                    u93_20 0032  
                  u93_21 0031                    u94_20 004F                    u94_21 004E  
                  u95_20 0054                    u95_21 0053                    u96_20 0063  
                  u88_20 000A                    u96_21 0062                    u88_21 0009  
                  u97_20 007F                    u89_20 0015                    u97_21 007E  
                  u89_21 0014                    u98_20 0084                    u98_21 0083  
                  u99_20 0093                    u99_21 0092                    _count 0074  
           ?_read_sensor 0076                    _gyrox 0040                    _gyroy 003E  
                  _gyroz 003C                    _start 0048           ?_i2c_read_byte 004A  
                  status 0003                    wtemp0 007E          __initialization 00EA  
           __end_of_nack 048A             __end_of_main 0278         __end_of_i2c_read 0361  
       __end_of_i2c_stop 049C      __end_of_i2c_restart 0493                   ??_nack 004C  
                 ??_main 005C                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E             ?_gyro_config 0076             i2c_read@high 0058  
                 u100_20 00AE                   u100_21 00AD                   _RB4PPS 0E9C  
                 u101_20 00B3                   u101_21 00B2                   u102_20 00C3  
                 u102_21 00C2                   _RB6PPS 0E9E                   i1l1501 0056  
                 i1l1511 006F                   i1l1503 005B                   i1l1521 0078  
                 i1l1513 0073                   i1l1505 005C                   i1l1531 008B  
                 i1l1515 0075                   i1l1507 0063                   i1l1523 007A  
                 i1l1541 00A3                   i1l1533 008C                   i1l1525 007F  
                 i1l1517 0076                   i1l1509 006A                   i1l1461 000F  
                 i1l1551 00AE                   i1l1543 00A5                   i1l1535 0093  
                 i1l1527 0084                   i1l1519 0077                   i1l1471 001E  
                 i1l1463 0010                   i1l1561 00C3                   i1l1553 00B3  
                 i1l1545 00A6                   i1l1537 009A                   i1l1529 0086  
                 i1l1481 0036                   i1l1473 0023                   i1l1465 0015  
                 i1l1457 0006                   i1l1571 00E1                   i1l1563 00D4  
                 i1l1555 00B4                   i1l1547 00A7                   i1l1539 009F  
                 i1l1491 0047                   i1l1483 003B                   i1l1475 0028  
                 i1l1467 0019                   i1l1459 000A                   i1l1573 00E2  
                 i1l1565 00D9                   i1l1557 00B9                   i1l1549 00A9  
                 i1l1493 0048                   i1l1485 003C                   i1l1477 0029  
                 i1l1469 001A                   i1l1567 00DD                   i1l1559 00BA  
                 i1l1575 00E3                   i1l1487 0040                   i1l1479 0032  
                 i1l1495 004A                   i1l1577 00E5                   i1l1569 00DF  
                 i1l1497 004F                   i1l1489 0042                   i1l1499 0054  
     __size_of_i2c_start 0009       __size_of_i2c_write 0037         __end_of_pic_init 03B5  
                 _remote 0004           _i2c_write_byte 0463          ??_i2c_read_byte 004C  
__end_of__initialization 00F8           __pcstackCOMMON 0076              _i2c_restart 048A  
      __end_of_i2c_start 04A5        __end_of_i2c_write 0440           _OPTION_REGbits 0095  
 __end_of_i2c_write_byte 0478               __pbssBANK0 0020     __size_of_read_sensor 0077  
              ?_i2c_read 0051                ?_i2c_stop 0076               __pmaintext 00FC  
             __pintentry 0004                  ?_remote 0076          ?_i2c_write_byte 0076  
                _SSP1ADD 0212                  _SSP1BUF 0211    i2c_write_byte@address 004A  
             ??_i2c_read 0053               ??_i2c_stop 004A     __size_of_gyro_config 0054  
              ?_pic_init 0076          i2c_read@address 005A          __size_of_remote 00E4  
                __ptext1 0278                  __ptext2 02EF                  __ptext3 048A  
                __ptext4 0440                  __ptext5 0361                  __ptext6 03B5  
                __ptext7 0409                  __ptext8 0478                  __ptext9 0493  
              _T1CONbits 0018                _T2CONbits 001C                _T3CONbits 0495  
              _T2HLTbits 001D                _T5CONbits 049C                _IOCCFbits 0399  
                _tmrLoop 002A                  clrloop0 04A6                  _voltaje 0020  
   end_of_initialization 00F8               ??_pic_init 004A                _SSPDATPPS 0E21  
              _SSPCLKPPS 0E20            i2c_write@data 004D             ?_i2c_restart 0076  
     i2c_read@subaddress 0051           __end_of_remote 00E8      start_initialization 00EA  
              _i2c_start 049C                _i2c_write 0409    __end_of_i2c_read_byte 0463  
      __size_of_i2c_read 0072        __size_of_i2c_stop 0009         ??_i2c_write_byte 004A  
               ??_remote 0076              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 004A               ?_i2c_start 0076               ?_i2c_write 004C  
          ??_read_sensor 005B        __size_of_pic_init 0054                 _T2CLKCON 001E  
          ??_gyro_config 004F                 _LATCbits 010E      __end_of_read_sensor 02EF  
              clear_ram0 04A5                 _PIE1bits 0090                 _PIR1bits 0010  
   __size_of_i2c_restart 0009              ??_i2c_start 004A              ??_i2c_write 004E  
               _i2c_read 02EF                 _i2c_stop 0493      __end_of_gyro_config 0409  
               __ptext10 0463                 __ptext11 049C             _SSP1CON1bits 0215  
           _SSP1CON2bits 0216              _read_sensor 0278            __size_of_nack 0012  
          __size_of_main 017C                 _pic_init 0361                 int$flags 007E  
             _ODCONBbits 028D             _SSP1STATbits 0214              _OSCSTATbits 009A  
             _INTCONbits 000B              _gyro_config 03B5                 intlevel1 0000  
    i2c_write@subaddress 004C              _SSP1CONbits 0215               _OSCCONbits 0099  
 __size_of_i2c_read_byte 0023         i2c_write@address 004E              _SSPCON2bits 0216  
      i2c_read_byte@temp 004F         i2c_read_byte@ack 004E  
