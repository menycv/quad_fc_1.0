

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Apr 19 21:03:18 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1619 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011C                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0199                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  020E                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  028C                     	;# 
   183  028D                     	;# 
   184  028E                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029E                     	;# 
   196  030C                     	;# 
   197  030D                     	;# 
   198  030E                     	;# 
   199  038C                     	;# 
   200  038D                     	;# 
   201  038E                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0397                     	;# 
   209  0398                     	;# 
   210  0399                     	;# 
   211  040E                     	;# 
   212  0413                     	;# 
   213  0413                     	;# 
   214  0414                     	;# 
   215  0414                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  0418                     	;# 
   220  041A                     	;# 
   221  041A                     	;# 
   222  041B                     	;# 
   223  041B                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  041F                     	;# 
   228  0493                     	;# 
   229  0494                     	;# 
   230  0495                     	;# 
   231  0496                     	;# 
   232  049A                     	;# 
   233  049B                     	;# 
   234  049C                     	;# 
   235  049D                     	;# 
   236  058C                     	;# 
   237  058C                     	;# 
   238  058D                     	;# 
   239  058E                     	;# 
   240  058E                     	;# 
   241  058F                     	;# 
   242  0590                     	;# 
   243  0590                     	;# 
   244  0591                     	;# 
   245  0592                     	;# 
   246  0592                     	;# 
   247  0593                     	;# 
   248  0594                     	;# 
   249  0594                     	;# 
   250  0595                     	;# 
   251  0596                     	;# 
   252  0596                     	;# 
   253  0597                     	;# 
   254  0598                     	;# 
   255  0599                     	;# 
   256  059A                     	;# 
   257  059B                     	;# 
   258  059B                     	;# 
   259  059C                     	;# 
   260  059D                     	;# 
   261  060C                     	;# 
   262  060C                     	;# 
   263  060D                     	;# 
   264  060E                     	;# 
   265  060F                     	;# 
   266  060F                     	;# 
   267  0610                     	;# 
   268  0611                     	;# 
   269  0612                     	;# 
   270  0613                     	;# 
   271  0614                     	;# 
   272  0617                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  061A                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  0691                     	;# 
   281  0692                     	;# 
   282  0693                     	;# 
   283  0694                     	;# 
   284  0695                     	;# 
   285  0696                     	;# 
   286  0697                     	;# 
   287  0699                     	;# 
   288  069A                     	;# 
   289  0711                     	;# 
   290  0712                     	;# 
   291  0713                     	;# 
   292  0714                     	;# 
   293  0715                     	;# 
   294  0718                     	;# 
   295  0718                     	;# 
   296  0719                     	;# 
   297  071A                     	;# 
   298  071A                     	;# 
   299  071B                     	;# 
   300  071C                     	;# 
   301  071D                     	;# 
   302  0791                     	;# 
   303  0791                     	;# 
   304  0792                     	;# 
   305  0793                     	;# 
   306  0793                     	;# 
   307  0794                     	;# 
   308  0795                     	;# 
   309  0795                     	;# 
   310  0796                     	;# 
   311  0797                     	;# 
   312  0797                     	;# 
   313  0798                     	;# 
   314  0799                     	;# 
   315  079A                     	;# 
   316  080C                     	;# 
   317  080C                     	;# 
   318  080D                     	;# 
   319  080E                     	;# 
   320  080E                     	;# 
   321  080F                     	;# 
   322  0810                     	;# 
   323  0810                     	;# 
   324  0811                     	;# 
   325  0812                     	;# 
   326  0812                     	;# 
   327  0813                     	;# 
   328  0814                     	;# 
   329  0815                     	;# 
   330  0816                     	;# 
   331  0817                     	;# 
   332  0818                     	;# 
   333  0819                     	;# 
   334  081A                     	;# 
   335  081A                     	;# 
   336  081B                     	;# 
   337  081C                     	;# 
   338  081C                     	;# 
   339  081D                     	;# 
   340  088C                     	;# 
   341  088D                     	;# 
   342  088E                     	;# 
   343  088F                     	;# 
   344  088F                     	;# 
   345  0890                     	;# 
   346  0891                     	;# 
   347  0892                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0894                     	;# 
   351  0895                     	;# 
   352  0896                     	;# 
   353  0897                     	;# 
   354  0897                     	;# 
   355  0898                     	;# 
   356  0899                     	;# 
   357  0D8C                     	;# 
   358  0D8C                     	;# 
   359  0D8D                     	;# 
   360  0D8E                     	;# 
   361  0D8F                     	;# 
   362  0D8F                     	;# 
   363  0D90                     	;# 
   364  0D91                     	;# 
   365  0D92                     	;# 
   366  0D92                     	;# 
   367  0D93                     	;# 
   368  0D94                     	;# 
   369  0D95                     	;# 
   370  0D95                     	;# 
   371  0D96                     	;# 
   372  0D97                     	;# 
   373  0D98                     	;# 
   374  0D99                     	;# 
   375  0D9A                     	;# 
   376  0D9B                     	;# 
   377  0D9C                     	;# 
   378  0D9D                     	;# 
   379  0D9E                     	;# 
   380  0D9E                     	;# 
   381  0D9F                     	;# 
   382  0DA0                     	;# 
   383  0DA1                     	;# 
   384  0DA1                     	;# 
   385  0DA2                     	;# 
   386  0DA3                     	;# 
   387  0DA4                     	;# 
   388  0DA4                     	;# 
   389  0DA5                     	;# 
   390  0DA6                     	;# 
   391  0DA7                     	;# 
   392  0DA7                     	;# 
   393  0DA8                     	;# 
   394  0DA9                     	;# 
   395  0DAA                     	;# 
   396  0DAB                     	;# 
   397  0DAC                     	;# 
   398  0DAD                     	;# 
   399  0DAE                     	;# 
   400  0DAF                     	;# 
   401  0E0F                     	;# 
   402  0E10                     	;# 
   403  0E11                     	;# 
   404  0E12                     	;# 
   405  0E13                     	;# 
   406  0E14                     	;# 
   407  0E15                     	;# 
   408  0E16                     	;# 
   409  0E17                     	;# 
   410  0E18                     	;# 
   411  0E19                     	;# 
   412  0E1A                     	;# 
   413  0E1B                     	;# 
   414  0E1C                     	;# 
   415  0E1D                     	;# 
   416  0E1E                     	;# 
   417  0E1F                     	;# 
   418  0E20                     	;# 
   419  0E21                     	;# 
   420  0E22                     	;# 
   421  0E23                     	;# 
   422  0E24                     	;# 
   423  0E25                     	;# 
   424  0E26                     	;# 
   425  0E27                     	;# 
   426  0E28                     	;# 
   427  0E29                     	;# 
   428  0E2A                     	;# 
   429  0E2B                     	;# 
   430  0E2C                     	;# 
   431  0E2D                     	;# 
   432  0E2E                     	;# 
   433  0E90                     	;# 
   434  0E91                     	;# 
   435  0E92                     	;# 
   436  0E94                     	;# 
   437  0E95                     	;# 
   438  0E9C                     	;# 
   439  0E9D                     	;# 
   440  0E9E                     	;# 
   441  0E9F                     	;# 
   442  0EA0                     	;# 
   443  0EA1                     	;# 
   444  0EA2                     	;# 
   445  0EA3                     	;# 
   446  0EA4                     	;# 
   447  0EA5                     	;# 
   448  0EA6                     	;# 
   449  0EA7                     	;# 
   450  0F0F                     	;# 
   451  0F10                     	;# 
   452  0F11                     	;# 
   453  0F12                     	;# 
   454  0F13                     	;# 
   455  0F14                     	;# 
   456  0F15                     	;# 
   457  0F16                     	;# 
   458  0F17                     	;# 
   459  0F18                     	;# 
   460  0F19                     	;# 
   461  0F1A                     	;# 
   462  0F1B                     	;# 
   463  0F1C                     	;# 
   464  0F1D                     	;# 
   465  0F1E                     	;# 
   466  0F1F                     	;# 
   467  0F20                     	;# 
   468  0F21                     	;# 
   469  0F22                     	;# 
   470  0F23                     	;# 
   471  0F24                     	;# 
   472  0F25                     	;# 
   473  0F26                     	;# 
   474  0F27                     	;# 
   475  0F28                     	;# 
   476  0F29                     	;# 
   477  0F2A                     	;# 
   478  0F2B                     	;# 
   479  0F2C                     	;# 
   480  0F2D                     	;# 
   481  0F2E                     	;# 
   482  0F2F                     	;# 
   483  0F30                     	;# 
   484  0F31                     	;# 
   485  0F32                     	;# 
   486  0F33                     	;# 
   487  0F34                     	;# 
   488  0F35                     	;# 
   489  0F36                     	;# 
   490  0F37                     	;# 
   491  0FE4                     	;# 
   492  0FE5                     	;# 
   493  0FE6                     	;# 
   494  0FE7                     	;# 
   495  0FE8                     	;# 
   496  0FE9                     	;# 
   497  0FEA                     	;# 
   498  0FEB                     	;# 
   499  0FED                     	;# 
   500  0FEE                     	;# 
   501  0FEF                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  0010                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0013                     	;# 
   521  0014                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  001D                     	;# 
   534  001E                     	;# 
   535  001F                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  0090                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011C                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  0211                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0212                     	;# 
   612  0213                     	;# 
   613  0213                     	;# 
   614  0214                     	;# 
   615  0214                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  028C                     	;# 
   625  028D                     	;# 
   626  028E                     	;# 
   627  0291                     	;# 
   628  0291                     	;# 
   629  0292                     	;# 
   630  0293                     	;# 
   631  0294                     	;# 
   632  0298                     	;# 
   633  0298                     	;# 
   634  0299                     	;# 
   635  029A                     	;# 
   636  029B                     	;# 
   637  029E                     	;# 
   638  030C                     	;# 
   639  030D                     	;# 
   640  030E                     	;# 
   641  038C                     	;# 
   642  038D                     	;# 
   643  038E                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  040E                     	;# 
   654  0413                     	;# 
   655  0413                     	;# 
   656  0414                     	;# 
   657  0414                     	;# 
   658  0415                     	;# 
   659  0416                     	;# 
   660  0417                     	;# 
   661  0418                     	;# 
   662  041A                     	;# 
   663  041A                     	;# 
   664  041B                     	;# 
   665  041B                     	;# 
   666  041C                     	;# 
   667  041D                     	;# 
   668  041E                     	;# 
   669  041F                     	;# 
   670  0493                     	;# 
   671  0494                     	;# 
   672  0495                     	;# 
   673  0496                     	;# 
   674  049A                     	;# 
   675  049B                     	;# 
   676  049C                     	;# 
   677  049D                     	;# 
   678  058C                     	;# 
   679  058C                     	;# 
   680  058D                     	;# 
   681  058E                     	;# 
   682  058E                     	;# 
   683  058F                     	;# 
   684  0590                     	;# 
   685  0590                     	;# 
   686  0591                     	;# 
   687  0592                     	;# 
   688  0592                     	;# 
   689  0593                     	;# 
   690  0594                     	;# 
   691  0594                     	;# 
   692  0595                     	;# 
   693  0596                     	;# 
   694  0596                     	;# 
   695  0597                     	;# 
   696  0598                     	;# 
   697  0599                     	;# 
   698  059A                     	;# 
   699  059B                     	;# 
   700  059B                     	;# 
   701  059C                     	;# 
   702  059D                     	;# 
   703  060C                     	;# 
   704  060C                     	;# 
   705  060D                     	;# 
   706  060E                     	;# 
   707  060F                     	;# 
   708  060F                     	;# 
   709  0610                     	;# 
   710  0611                     	;# 
   711  0612                     	;# 
   712  0613                     	;# 
   713  0614                     	;# 
   714  0617                     	;# 
   715  0617                     	;# 
   716  0618                     	;# 
   717  0619                     	;# 
   718  061A                     	;# 
   719  061A                     	;# 
   720  061B                     	;# 
   721  061C                     	;# 
   722  0691                     	;# 
   723  0692                     	;# 
   724  0693                     	;# 
   725  0694                     	;# 
   726  0695                     	;# 
   727  0696                     	;# 
   728  0697                     	;# 
   729  0699                     	;# 
   730  069A                     	;# 
   731  0711                     	;# 
   732  0712                     	;# 
   733  0713                     	;# 
   734  0714                     	;# 
   735  0715                     	;# 
   736  0718                     	;# 
   737  0718                     	;# 
   738  0719                     	;# 
   739  071A                     	;# 
   740  071A                     	;# 
   741  071B                     	;# 
   742  071C                     	;# 
   743  071D                     	;# 
   744  0791                     	;# 
   745  0791                     	;# 
   746  0792                     	;# 
   747  0793                     	;# 
   748  0793                     	;# 
   749  0794                     	;# 
   750  0795                     	;# 
   751  0795                     	;# 
   752  0796                     	;# 
   753  0797                     	;# 
   754  0797                     	;# 
   755  0798                     	;# 
   756  0799                     	;# 
   757  079A                     	;# 
   758  080C                     	;# 
   759  080C                     	;# 
   760  080D                     	;# 
   761  080E                     	;# 
   762  080E                     	;# 
   763  080F                     	;# 
   764  0810                     	;# 
   765  0810                     	;# 
   766  0811                     	;# 
   767  0812                     	;# 
   768  0812                     	;# 
   769  0813                     	;# 
   770  0814                     	;# 
   771  0815                     	;# 
   772  0816                     	;# 
   773  0817                     	;# 
   774  0818                     	;# 
   775  0819                     	;# 
   776  081A                     	;# 
   777  081A                     	;# 
   778  081B                     	;# 
   779  081C                     	;# 
   780  081C                     	;# 
   781  081D                     	;# 
   782  088C                     	;# 
   783  088D                     	;# 
   784  088E                     	;# 
   785  088F                     	;# 
   786  088F                     	;# 
   787  0890                     	;# 
   788  0891                     	;# 
   789  0892                     	;# 
   790  0893                     	;# 
   791  0893                     	;# 
   792  0894                     	;# 
   793  0895                     	;# 
   794  0896                     	;# 
   795  0897                     	;# 
   796  0897                     	;# 
   797  0898                     	;# 
   798  0899                     	;# 
   799  0D8C                     	;# 
   800  0D8C                     	;# 
   801  0D8D                     	;# 
   802  0D8E                     	;# 
   803  0D8F                     	;# 
   804  0D8F                     	;# 
   805  0D90                     	;# 
   806  0D91                     	;# 
   807  0D92                     	;# 
   808  0D92                     	;# 
   809  0D93                     	;# 
   810  0D94                     	;# 
   811  0D95                     	;# 
   812  0D95                     	;# 
   813  0D96                     	;# 
   814  0D97                     	;# 
   815  0D98                     	;# 
   816  0D99                     	;# 
   817  0D9A                     	;# 
   818  0D9B                     	;# 
   819  0D9C                     	;# 
   820  0D9D                     	;# 
   821  0D9E                     	;# 
   822  0D9E                     	;# 
   823  0D9F                     	;# 
   824  0DA0                     	;# 
   825  0DA1                     	;# 
   826  0DA1                     	;# 
   827  0DA2                     	;# 
   828  0DA3                     	;# 
   829  0DA4                     	;# 
   830  0DA4                     	;# 
   831  0DA5                     	;# 
   832  0DA6                     	;# 
   833  0DA7                     	;# 
   834  0DA7                     	;# 
   835  0DA8                     	;# 
   836  0DA9                     	;# 
   837  0DAA                     	;# 
   838  0DAB                     	;# 
   839  0DAC                     	;# 
   840  0DAD                     	;# 
   841  0DAE                     	;# 
   842  0DAF                     	;# 
   843  0E0F                     	;# 
   844  0E10                     	;# 
   845  0E11                     	;# 
   846  0E12                     	;# 
   847  0E13                     	;# 
   848  0E14                     	;# 
   849  0E15                     	;# 
   850  0E16                     	;# 
   851  0E17                     	;# 
   852  0E18                     	;# 
   853  0E19                     	;# 
   854  0E1A                     	;# 
   855  0E1B                     	;# 
   856  0E1C                     	;# 
   857  0E1D                     	;# 
   858  0E1E                     	;# 
   859  0E1F                     	;# 
   860  0E20                     	;# 
   861  0E21                     	;# 
   862  0E22                     	;# 
   863  0E23                     	;# 
   864  0E24                     	;# 
   865  0E25                     	;# 
   866  0E26                     	;# 
   867  0E27                     	;# 
   868  0E28                     	;# 
   869  0E29                     	;# 
   870  0E2A                     	;# 
   871  0E2B                     	;# 
   872  0E2C                     	;# 
   873  0E2D                     	;# 
   874  0E2E                     	;# 
   875  0E90                     	;# 
   876  0E91                     	;# 
   877  0E92                     	;# 
   878  0E94                     	;# 
   879  0E95                     	;# 
   880  0E9C                     	;# 
   881  0E9D                     	;# 
   882  0E9E                     	;# 
   883  0E9F                     	;# 
   884  0EA0                     	;# 
   885  0EA1                     	;# 
   886  0EA2                     	;# 
   887  0EA3                     	;# 
   888  0EA4                     	;# 
   889  0EA5                     	;# 
   890  0EA6                     	;# 
   891  0EA7                     	;# 
   892  0F0F                     	;# 
   893  0F10                     	;# 
   894  0F11                     	;# 
   895  0F12                     	;# 
   896  0F13                     	;# 
   897  0F14                     	;# 
   898  0F15                     	;# 
   899  0F16                     	;# 
   900  0F17                     	;# 
   901  0F18                     	;# 
   902  0F19                     	;# 
   903  0F1A                     	;# 
   904  0F1B                     	;# 
   905  0F1C                     	;# 
   906  0F1D                     	;# 
   907  0F1E                     	;# 
   908  0F1F                     	;# 
   909  0F20                     	;# 
   910  0F21                     	;# 
   911  0F22                     	;# 
   912  0F23                     	;# 
   913  0F24                     	;# 
   914  0F25                     	;# 
   915  0F26                     	;# 
   916  0F27                     	;# 
   917  0F28                     	;# 
   918  0F29                     	;# 
   919  0F2A                     	;# 
   920  0F2B                     	;# 
   921  0F2C                     	;# 
   922  0F2D                     	;# 
   923  0F2E                     	;# 
   924  0F2F                     	;# 
   925  0F30                     	;# 
   926  0F31                     	;# 
   927  0F32                     	;# 
   928  0F33                     	;# 
   929  0F34                     	;# 
   930  0F35                     	;# 
   931  0F36                     	;# 
   932  0F37                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944  0016                     _TMR1	set	22
   945  001A                     _TMR2	set	26
   946  0010                     _PIR1bits	set	16
   947  001F                     _T2RST	set	31
   948  001D                     _T2HLTbits	set	29
   949  001C                     _T2CONbits	set	28
   950  001E                     _T2CLKCON	set	30
   951  0018                     _T1CONbits	set	24
   952  000B                     _INTCONbits	set	11
   953  000C                     _PORTA	set	12
   954  0015                     _TMR0	set	21
   955  008E                     _TRISC	set	142
   956  008D                     _TRISB	set	141
   957  008C                     _TRISA	set	140
   958  0095                     _OPTION_REGbits	set	149
   959  0090                     _PIE1bits	set	144
   960  009A                     _OSCSTATbits	set	154
   961  0099                     _OSCCONbits	set	153
   962  010E                     _LATCbits	set	270
   963  018E                     _ANSELC	set	398
   964  018D                     _ANSELB	set	397
   965  018C                     _ANSELA	set	396
   966  0215                     _SSP1CON1bits	set	533
   967  0214                     _SSP1STATbits	set	532
   968  0216                     _SSPCON2bits	set	534
   969  0211                     _SSP1BUF	set	529
   970  0216                     _SSP1CON2bits	set	534
   971  0212                     _SSP1ADD	set	530
   972  0215                     _SSP1CONbits	set	533
   973  10B3                     _RCEN	set	4275
   974  028D                     _ODCONBbits	set	653
   975  0399                     _IOCCF	set	921
   976  0398                     _IOCCN	set	920
   977  0399                     _IOCCFbits	set	921
   978  0397                     _IOCCP	set	919
   979  049A                     _TMR5L	set	1178
   980  049B                     _TMR5H	set	1179
   981  0493                     _TMR3L	set	1171
   982  0494                     _TMR3H	set	1172
   983  049C                     _T5CONbits	set	1180
   984  0495                     _T3CONbits	set	1173
   985  0E20                     _SSPCLKPPS	set	3616
   986  0E21                     _SSPDATPPS	set	3617
   987  0E9E                     _RB6PPS	set	3742
   988  0E9C                     _RB4PPS	set	3740
   989                           
   990                           	psect	cinit
   991  00EA                     start_initialization:	
   992                           ; #config settings
   993                           
   994  00EA                     __initialization:
   995                           
   996                           ; Clear objects allocated to COMMON
   997  00EA  01F0               	clrf	__pbssCOMMON& (0+127)
   998  00EB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   999  00EC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1000  00ED  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1001  00EE  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1002  00EF  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1003                           
  1004                           ; Clear objects allocated to BANK0
  1005  00F0  3020               	movlw	low __pbssBANK0
  1006  00F1  0084               	movwf	4
  1007  00F2  3000               	movlw	high __pbssBANK0
  1008  00F3  0085               	movwf	5
  1009  00F4  302A               	movlw	42
  1010  00F5  3184  24A1  3180   	fcall	clear_ram0
  1011  00F8                     end_of_initialization:	
  1012                           ;End of C runtime variable initialization code
  1013                           
  1014  00F8                     __end_of__initialization:
  1015  00F8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1016  00F9  0020               	movlb	0
  1017  00FA  3180  28FC         	ljmp	_main	;jump to C main() function
  1018                           
  1019                           	psect	bssCOMMON
  1020  0070                     __pbssCOMMON:
  1021  0070                     _ch1:
  1022  0070                     	ds	2
  1023  0072                     _TMR2H:
  1024  0072                     	ds	2
  1025  0074                     _count:
  1026  0074                     	ds	2
  1027                           
  1028                           	psect	bssBANK0
  1029  0020                     __pbssBANK0:
  1030  0020                     _voltaje:
  1031  0020                     	ds	4
  1032  0024                     _ch4:
  1033  0024                     	ds	2
  1034  0026                     _ch3:
  1035  0026                     	ds	2
  1036  0028                     _ch2:
  1037  0028                     	ds	2
  1038  002A                     _tmrLoop:
  1039  002A                     	ds	2
  1040  002C                     _TMR0H:
  1041  002C                     	ds	2
  1042  002E                     _esc4:
  1043  002E                     	ds	2
  1044  0030                     _esc3:
  1045  0030                     	ds	2
  1046  0032                     _esc2:
  1047  0032                     	ds	2
  1048  0034                     _esc1:
  1049  0034                     	ds	2
  1050  0036                     _magz:
  1051  0036                     	ds	2
  1052  0038                     _magy:
  1053  0038                     	ds	2
  1054  003A                     _magx:
  1055  003A                     	ds	2
  1056  003C                     _gyroz:
  1057  003C                     	ds	2
  1058  003E                     _gyroy:
  1059  003E                     	ds	2
  1060  0040                     _gyrox:
  1061  0040                     	ds	2
  1062  0042                     _accz:
  1063  0042                     	ds	2
  1064  0044                     _accy:
  1065  0044                     	ds	2
  1066  0046                     _accx:
  1067  0046                     	ds	2
  1068  0048                     _start:
  1069  0048                     	ds	1
  1070  0049                     _p:
  1071  0049                     	ds	1
  1072                           
  1073                           	psect	clrtext
  1074  04A1                     clear_ram0:	
  1075                           ;	Called with FSR0 containing the base address, and
  1076                           ;	WREG with the size to clear
  1077                           
  1078  04A1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1079  04A2                     clrloop0:
  1080  04A2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1081  04A3  3101               	addfsr 0,1
  1082  04A4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1083  04A5  2CA2               	goto	clrloop0	;have we reached the end yet?
  1084  04A6  3400               	retlw	0	;all done for this memory range, return
  1085                           
  1086                           	psect	cstackCOMMON
  1087  0076                     __pcstackCOMMON:
  1088  0076                     ?_pic_init:
  1089  0076                     ?_gyro_config:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0076                     ?_read_sensor:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0076                     ?_i2c_start:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0076                     ?_i2c_write_byte:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0076                     ?_i2c_stop:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0076                     ?_i2c_restart:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0076                     ?_main:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0076                     ?_remote:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0076                     ??_remote:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0x0
  1118  0076                     	ds	6
  1119                           
  1120                           	psect	cstackBANK0
  1121  004A                     __pcstackBANK0:
  1122  004A                     ??_pic_init:
  1123  004A                     ??_i2c_start:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  004A                     ??_i2c_write_byte:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  004A                     ??_i2c_stop:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  004A                     ??_i2c_restart:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  004A                     ?_nack:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  004A                     ?_i2c_read_byte:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141  004A                     i2c_write_byte@address:	
  1142                           ; 2 bytes @ 0x0
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0x0
  1146  004A                     	ds	2
  1147  004C                     ?_i2c_write:
  1148  004C                     ??_nack:	
  1149                           ; 1 bytes @ 0x2
  1150                           
  1151  004C                     ??_i2c_read_byte:	
  1152                           ; 1 bytes @ 0x2
  1153                           
  1154  004C                     i2c_write@subaddress:	
  1155                           ; 1 bytes @ 0x2
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x2
  1159  004C                     	ds	1
  1160  004D                     i2c_write@data:
  1161                           
  1162                           ; 1 bytes @ 0x3
  1163  004D                     	ds	1
  1164  004E                     ??_i2c_write:
  1165  004E                     i2c_write@address:	
  1166                           ; 1 bytes @ 0x4
  1167                           
  1168  004E                     i2c_read_byte@ack:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0x4
  1173  004E                     	ds	1
  1174  004F                     ??_gyro_config:
  1175  004F                     i2c_read_byte@temp:	
  1176                           ; 1 bytes @ 0x5
  1177                           
  1178                           
  1179                           ; 2 bytes @ 0x5
  1180  004F                     	ds	2
  1181  0051                     ?_i2c_read:
  1182  0051                     i2c_read@subaddress:	
  1183                           ; 2 bytes @ 0x7
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x7
  1187  0051                     	ds	2
  1188  0053                     ??_i2c_read:
  1189                           
  1190                           ; 1 bytes @ 0x9
  1191  0053                     	ds	3
  1192  0056                     i2c_read@low:
  1193                           
  1194                           ; 2 bytes @ 0xC
  1195  0056                     	ds	2
  1196  0058                     i2c_read@high:
  1197                           
  1198                           ; 2 bytes @ 0xE
  1199  0058                     	ds	2
  1200  005A                     i2c_read@address:
  1201                           
  1202                           ; 1 bytes @ 0x10
  1203  005A                     	ds	1
  1204  005B                     ??_read_sensor:
  1205                           
  1206                           ; 1 bytes @ 0x11
  1207  005B                     	ds	1
  1208  005C                     ??_main:
  1209                           
  1210                           ; 1 bytes @ 0x12
  1211  005C                     	ds	8
  1212                           
  1213                           	psect	maintext
  1214  00FC                     __pmaintext:	
  1215 ;;
  1216 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1217 ;;
  1218 ;; *************** function _main *****************
  1219 ;; Defined at:
  1220 ;;		line 35 in file "main.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : B1F/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1236 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1237 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;Total ram usage:        8 bytes
  1239 ;; Hardware stack levels required when called:    5
  1240 ;; This function calls:
  1241 ;;		_gyro_config
  1242 ;;		_pic_init
  1243 ;;		_read_sensor
  1244 ;; This function is called by:
  1245 ;;		Startup code after reset
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _main
  1251  00FC                     _main:
  1252  00FC                     l1739:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;main.c: 37:     pic_init();
  1258  00FC  3183  235D  3180   	fcall	_pic_init
  1259                           
  1260                           ;main.c: 38:     gyro_config();
  1261  00FF  3183  23B1  3180   	fcall	_gyro_config
  1262  0102                     l1741:
  1263                           
  1264                           ;main.c: 40:     start = 3;
  1265  0102  3003               	movlw	3
  1266  0103  0020               	movlb	0	; select bank0
  1267  0104  00DC               	movwf	??_main
  1268  0105  085C               	movf	??_main,w
  1269  0106  00C8               	movwf	_start
  1270  0107                     l1743:
  1271                           
  1272                           ;main.c: 41:     LATCbits.LATC7 = 0;
  1273  0107  0022               	movlb	2	; select bank2
  1274  0108  138E               	bcf	14,7	;volatile
  1275  0109                     l1745:
  1276                           
  1277                           ;main.c: 42:     ch3 = 2000;
  1278  0109  30D0               	movlw	208
  1279  010A  0020               	movlb	0	; select bank0
  1280  010B  00A6               	movwf	_ch3
  1281  010C  3007               	movlw	7
  1282  010D  00A7               	movwf	_ch3+1
  1283  010E                     l1747:
  1284                           
  1285                           ;main.c: 45:         TMR0H = 0;
  1286  010E  01AC               	clrf	_TMR0H
  1287  010F  01AD               	clrf	_TMR0H+1
  1288  0110                     l1749:
  1289                           
  1290                           ;main.c: 46:         TMR0 = 0;
  1291  0110  0195               	clrf	21	;volatile
  1292  0111                     l1751:
  1293                           
  1294                           ;main.c: 47:         TMR0H = 0;
  1295  0111  01AC               	clrf	_TMR0H
  1296  0112  01AD               	clrf	_TMR0H+1
  1297  0113                     l1753:
  1298                           
  1299                           ;main.c: 49:         if(!start){
  1300  0113  0848               	movf	_start,w
  1301  0114  1D03               	btfss	3,2
  1302  0115  2917               	goto	u1191
  1303  0116  2918               	goto	u1190
  1304  0117                     u1191:
  1305  0117  292E               	goto	l1761
  1306  0118                     u1190:
  1307  0118                     l1755:
  1308                           
  1309                           ;main.c: 51:             esc1 = esc2 = esc3 = esc4 = 1000;
  1310  0118  30E8               	movlw	232
  1311  0119  00AE               	movwf	_esc4
  1312  011A  3003               	movlw	3
  1313  011B  00AF               	movwf	_esc4+1
  1314  011C  082F               	movf	_esc4+1,w
  1315  011D  00B1               	movwf	_esc3+1
  1316  011E  082E               	movf	_esc4,w
  1317  011F  00B0               	movwf	_esc3
  1318  0120  0831               	movf	_esc3+1,w
  1319  0121  00B3               	movwf	_esc2+1
  1320  0122  0830               	movf	_esc3,w
  1321  0123  00B2               	movwf	_esc2
  1322  0124  0833               	movf	_esc2+1,w
  1323  0125  00B5               	movwf	_esc1+1
  1324  0126  0832               	movf	_esc2,w
  1325  0127  00B4               	movwf	_esc1
  1326  0128                     l1757:
  1327                           
  1328                           ;main.c: 52:             p.p1 = p.p2 = p.p3 = p.p4 = 0;
  1329  0128  11C9               	bcf	_p,3
  1330  0129  1149               	bcf	_p,2
  1331  012A  10C9               	bcf	_p,1
  1332  012B  1049               	bcf	_p,0
  1333  012C                     l1759:
  1334                           
  1335                           ;main.c: 53:             start = 1;
  1336  012C  01C8               	clrf	_start
  1337  012D  0AC8               	incf	_start,f
  1338  012E                     l1761:
  1339                           
  1340                           ;main.c: 55:         if(start == 1 && ch4 > 1900 && ch3 < 1050){
  1341  012E  0348               	decf	_start,w
  1342  012F  1D03               	btfss	3,2
  1343  0130  2932               	goto	u1201
  1344  0131  2933               	goto	u1200
  1345  0132                     u1201:
  1346  0132  2949               	goto	l1769
  1347  0133                     u1200:
  1348  0133                     l1763:
  1349  0133  3007               	movlw	7
  1350  0134  0225               	subwf	_ch4+1,w
  1351  0135  306D               	movlw	109
  1352  0136  1903               	skipnz
  1353  0137  0224               	subwf	_ch4,w
  1354  0138  1C03               	skipc
  1355  0139  293B               	goto	u1211
  1356  013A  293C               	goto	u1210
  1357  013B                     u1211:
  1358  013B  2949               	goto	l1769
  1359  013C                     u1210:
  1360  013C                     l1765:
  1361  013C  3004               	movlw	4
  1362  013D  0227               	subwf	_ch3+1,w
  1363  013E  301A               	movlw	26
  1364  013F  1903               	skipnz
  1365  0140  0226               	subwf	_ch3,w
  1366  0141  1803               	skipnc
  1367  0142  2944               	goto	u1221
  1368  0143  2945               	goto	u1220
  1369  0144                     u1221:
  1370  0144  2949               	goto	l1769
  1371  0145                     u1220:
  1372  0145                     l1767:
  1373                           
  1374                           ;main.c: 56:             start = 2;
  1375  0145  3002               	movlw	2
  1376  0146  00DC               	movwf	??_main
  1377  0147  085C               	movf	??_main,w
  1378  0148  00C8               	movwf	_start
  1379  0149                     l1769:
  1380                           
  1381                           ;main.c: 59:         if(start == 2 && ch4 < 1600 && ch3 < 1050){
  1382  0149  3002               	movlw	2
  1383  014A  0648               	xorwf	_start,w
  1384  014B  1D03               	btfss	3,2
  1385  014C  294E               	goto	u1231
  1386  014D  294F               	goto	u1230
  1387  014E                     u1231:
  1388  014E  2967               	goto	l1779
  1389  014F                     u1230:
  1390  014F                     l1771:
  1391  014F  3006               	movlw	6
  1392  0150  0225               	subwf	_ch4+1,w
  1393  0151  3040               	movlw	64
  1394  0152  1903               	skipnz
  1395  0153  0224               	subwf	_ch4,w
  1396  0154  1803               	skipnc
  1397  0155  2957               	goto	u1241
  1398  0156  2958               	goto	u1240
  1399  0157                     u1241:
  1400  0157  2967               	goto	l1779
  1401  0158                     u1240:
  1402  0158                     l1773:
  1403  0158  3004               	movlw	4
  1404  0159  0227               	subwf	_ch3+1,w
  1405  015A  301A               	movlw	26
  1406  015B  1903               	skipnz
  1407  015C  0226               	subwf	_ch3,w
  1408  015D  1803               	skipnc
  1409  015E  2960               	goto	u1251
  1410  015F  2961               	goto	u1250
  1411  0160                     u1251:
  1412  0160  2967               	goto	l1779
  1413  0161                     u1250:
  1414  0161                     l1775:
  1415                           
  1416                           ;main.c: 60:             start = 3;
  1417  0161  3003               	movlw	3
  1418  0162  00DC               	movwf	??_main
  1419  0163  085C               	movf	??_main,w
  1420  0164  00C8               	movwf	_start
  1421  0165                     l1777:
  1422                           
  1423                           ;main.c: 61:             LATCbits.LATC7 = 1;
  1424  0165  0022               	movlb	2	; select bank2
  1425  0166  178E               	bsf	14,7	;volatile
  1426  0167                     l1779:
  1427                           
  1428                           ;main.c: 65:         if(start == 3 && ch4 < 1050 && ch3 < 1050){
  1429  0167  3003               	movlw	3
  1430  0168  0020               	movlb	0	; select bank0
  1431  0169  0648               	xorwf	_start,w
  1432  016A  1D03               	btfss	3,2
  1433  016B  296D               	goto	u1261
  1434  016C  296E               	goto	u1260
  1435  016D                     u1261:
  1436  016D  2983               	goto	l1789
  1437  016E                     u1260:
  1438  016E                     l1781:
  1439  016E  3004               	movlw	4
  1440  016F  0225               	subwf	_ch4+1,w
  1441  0170  301A               	movlw	26
  1442  0171  1903               	skipnz
  1443  0172  0224               	subwf	_ch4,w
  1444  0173  1803               	skipnc
  1445  0174  2976               	goto	u1271
  1446  0175  2977               	goto	u1270
  1447  0176                     u1271:
  1448  0176  2983               	goto	l1789
  1449  0177                     u1270:
  1450  0177                     l1783:
  1451  0177  3004               	movlw	4
  1452  0178  0227               	subwf	_ch3+1,w
  1453  0179  301A               	movlw	26
  1454  017A  1903               	skipnz
  1455  017B  0226               	subwf	_ch3,w
  1456  017C  1803               	skipnc
  1457  017D  297F               	goto	u1281
  1458  017E  2980               	goto	u1280
  1459  017F                     u1281:
  1460  017F  2983               	goto	l1789
  1461  0180                     u1280:
  1462  0180                     l1785:
  1463                           
  1464                           ;main.c: 66:             start = 0;
  1465  0180  01C8               	clrf	_start
  1466  0181                     l1787:
  1467                           
  1468                           ;main.c: 67:             LATCbits.LATC7 = 0;
  1469  0181  0022               	movlb	2	; select bank2
  1470  0182  138E               	bcf	14,7	;volatile
  1471  0183                     l1789:
  1472                           
  1473                           ;main.c: 70:         read_sensor();
  1474  0183  3182  2274  3180   	fcall	_read_sensor
  1475  0186                     l1791:
  1476                           
  1477                           ;main.c: 72:         esc1 = esc2 = esc3 = esc4 = ch3;
  1478  0186  0020               	movlb	0	; select bank0
  1479  0187  0827               	movf	_ch3+1,w
  1480  0188  00AF               	movwf	_esc4+1
  1481  0189  0826               	movf	_ch3,w
  1482  018A  00AE               	movwf	_esc4
  1483  018B  082F               	movf	_esc4+1,w
  1484  018C  00B1               	movwf	_esc3+1
  1485  018D  082E               	movf	_esc4,w
  1486  018E  00B0               	movwf	_esc3
  1487  018F  0831               	movf	_esc3+1,w
  1488  0190  00B3               	movwf	_esc2+1
  1489  0191  0830               	movf	_esc3,w
  1490  0192  00B2               	movwf	_esc2
  1491  0193  0833               	movf	_esc2+1,w
  1492  0194  00B5               	movwf	_esc1+1
  1493  0195  0832               	movf	_esc2,w
  1494  0196  00B4               	movwf	_esc1
  1495  0197                     l1793:
  1496                           
  1497                           ;main.c: 73:         tmrLoop = (TMR0H << 8) | TMR0;
  1498  0197  0815               	movf	21,w	;volatile
  1499  0198  00DC               	movwf	??_main
  1500  0199  01DD               	clrf	??_main+1
  1501  019A  082C               	movf	_TMR0H,w
  1502  019B  00DF               	movwf	??_main+3
  1503  019C  01DE               	clrf	??_main+2
  1504  019D  085C               	movf	??_main,w
  1505  019E  045E               	iorwf	??_main+2,w
  1506  019F  00E0               	movwf	??_main+4
  1507  01A0  085D               	movf	??_main+1,w
  1508  01A1  045F               	iorwf	??_main+3,w
  1509  01A2  00E1               	movwf	??_main+5
  1510  01A3  0860               	movf	??_main+4,w
  1511  01A4  00AA               	movwf	_tmrLoop
  1512  01A5  0861               	movf	??_main+5,w
  1513  01A6  00AB               	movwf	_tmrLoop+1
  1514  01A7                     l1795:
  1515                           
  1516                           ;main.c: 75:         if(start < 3){
  1517  01A7  3003               	movlw	3
  1518  01A8  0248               	subwf	_start,w
  1519  01A9  1803               	skipnc
  1520  01AA  29AC               	goto	u1291
  1521  01AB  29AD               	goto	u1290
  1522  01AC                     u1291:
  1523  01AC  29D7               	goto	l1805
  1524  01AD                     u1290:
  1525  01AD                     l1797:
  1526                           
  1527                           ;main.c: 76:             PORTA |= 0b00010111;
  1528  01AD  3017               	movlw	23
  1529  01AE  00DC               	movwf	??_main
  1530  01AF  085C               	movf	??_main,w
  1531  01B0  048C               	iorwf	12,f	;volatile
  1532  01B1                     l1799:	
  1533                           ;main.c: 77:             while((((TMR0H << 8) | TMR0) - tmrLoop) < 1000 || TMR0 < 0xE8);
  1534                           
  1535  01B1  0815               	movf	21,w	;volatile
  1536  01B2  00DC               	movwf	??_main
  1537  01B3  01DD               	clrf	??_main+1
  1538  01B4  082C               	movf	_TMR0H,w
  1539  01B5  00DF               	movwf	??_main+3
  1540  01B6  01DE               	clrf	??_main+2
  1541  01B7  085C               	movf	??_main,w
  1542  01B8  045E               	iorwf	??_main+2,w
  1543  01B9  00E0               	movwf	??_main+4
  1544  01BA  085D               	movf	??_main+1,w
  1545  01BB  045F               	iorwf	??_main+3,w
  1546  01BC  00E1               	movwf	??_main+5
  1547  01BD  082A               	movf	_tmrLoop,w
  1548  01BE  0260               	subwf	??_main+4,w
  1549  01BF  00E2               	movwf	??_main+6
  1550  01C0  082B               	movf	_tmrLoop+1,w
  1551  01C1  3B61               	subwfb	??_main+5,w
  1552  01C2  00E3               	movwf	??_main+7
  1553  01C3  3003               	movlw	3
  1554  01C4  0263               	subwf	??_main+7,w
  1555  01C5  30E8               	movlw	232
  1556  01C6  1903               	skipnz
  1557  01C7  0262               	subwf	??_main+6,w
  1558  01C8  1C03               	skipc
  1559  01C9  29CB               	goto	u1301
  1560  01CA  29CC               	goto	u1300
  1561  01CB                     u1301:
  1562  01CB  29B1               	goto	l1799
  1563  01CC                     u1300:
  1564  01CC                     l1801:
  1565  01CC  30E8               	movlw	232
  1566  01CD  0215               	subwf	21,w	;volatile
  1567  01CE  1C03               	skipc
  1568  01CF  29D1               	goto	u1311
  1569  01D0  29D2               	goto	u1310
  1570  01D1                     u1311:
  1571  01D1  29B1               	goto	l1799
  1572  01D2                     u1310:
  1573  01D2                     l1803:
  1574                           
  1575                           ;main.c: 78:             PORTA &= 0b11101000;
  1576  01D2  30E8               	movlw	232
  1577  01D3  00DC               	movwf	??_main
  1578  01D4  085C               	movf	??_main,w
  1579  01D5  058C               	andwf	12,f	;volatile
  1580                           
  1581                           ;main.c: 79:         }
  1582  01D6  2A62               	goto	l1819
  1583  01D7                     l1805:
  1584                           
  1585                           ;main.c: 86:             PORTA |= 0b00010111;
  1586  01D7  3017               	movlw	23
  1587  01D8  00DC               	movwf	??_main
  1588  01D9  085C               	movf	??_main,w
  1589  01DA  048C               	iorwf	12,f	;volatile
  1590                           
  1591                           ;main.c: 87:             while((PORTA & 0b00010111) > 0){
  1592  01DB  2A5C               	goto	l1817
  1593  01DC                     l1807:
  1594                           
  1595                           ;main.c: 88:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc1)PORTA &= 0b1111
      +                          1110;
  1596  01DC  0815               	movf	21,w	;volatile
  1597  01DD  00DC               	movwf	??_main
  1598  01DE  01DD               	clrf	??_main+1
  1599  01DF  082C               	movf	_TMR0H,w
  1600  01E0  00DF               	movwf	??_main+3
  1601  01E1  01DE               	clrf	??_main+2
  1602  01E2  085C               	movf	??_main,w
  1603  01E3  045E               	iorwf	??_main+2,w
  1604  01E4  00E0               	movwf	??_main+4
  1605  01E5  085D               	movf	??_main+1,w
  1606  01E6  045F               	iorwf	??_main+3,w
  1607  01E7  00E1               	movwf	??_main+5
  1608  01E8  082A               	movf	_tmrLoop,w
  1609  01E9  0260               	subwf	??_main+4,w
  1610  01EA  00E2               	movwf	??_main+6
  1611  01EB  082B               	movf	_tmrLoop+1,w
  1612  01EC  3B61               	subwfb	??_main+5,w
  1613  01ED  00E3               	movwf	??_main+7
  1614  01EE  0863               	movf	??_main+7,w
  1615  01EF  0235               	subwf	_esc1+1,w
  1616  01F0  1D03               	skipz
  1617  01F1  29F4               	goto	u1325
  1618  01F2  0862               	movf	??_main+6,w
  1619  01F3  0234               	subwf	_esc1,w
  1620  01F4                     u1325:
  1621  01F4  1803               	skipnc
  1622  01F5  29F7               	goto	u1321
  1623  01F6  29F8               	goto	u1320
  1624  01F7                     u1321:
  1625  01F7  29FC               	goto	l79
  1626  01F8                     u1320:
  1627  01F8                     l1809:
  1628  01F8  30FE               	movlw	254
  1629  01F9  00DC               	movwf	??_main
  1630  01FA  085C               	movf	??_main,w
  1631  01FB  058C               	andwf	12,f	;volatile
  1632  01FC                     l79:
  1633                           
  1634                           ;main.c: 89:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc2)PORTA &= 0b1111
      +                          1101;
  1635  01FC  0815               	movf	21,w	;volatile
  1636  01FD  00DC               	movwf	??_main
  1637  01FE  01DD               	clrf	??_main+1
  1638  01FF  082C               	movf	_TMR0H,w
  1639  0200  00DF               	movwf	??_main+3
  1640  0201  01DE               	clrf	??_main+2
  1641  0202  085C               	movf	??_main,w
  1642  0203  045E               	iorwf	??_main+2,w
  1643  0204  00E0               	movwf	??_main+4
  1644  0205  085D               	movf	??_main+1,w
  1645  0206  045F               	iorwf	??_main+3,w
  1646  0207  00E1               	movwf	??_main+5
  1647  0208  082A               	movf	_tmrLoop,w
  1648  0209  0260               	subwf	??_main+4,w
  1649  020A  00E2               	movwf	??_main+6
  1650  020B  082B               	movf	_tmrLoop+1,w
  1651  020C  3B61               	subwfb	??_main+5,w
  1652  020D  00E3               	movwf	??_main+7
  1653  020E  0863               	movf	??_main+7,w
  1654  020F  0233               	subwf	_esc2+1,w
  1655  0210  1D03               	skipz
  1656  0211  2A14               	goto	u1335
  1657  0212  0862               	movf	??_main+6,w
  1658  0213  0232               	subwf	_esc2,w
  1659  0214                     u1335:
  1660  0214  1803               	skipnc
  1661  0215  2A17               	goto	u1331
  1662  0216  2A18               	goto	u1330
  1663  0217                     u1331:
  1664  0217  2A1C               	goto	l80
  1665  0218                     u1330:
  1666  0218                     l1811:
  1667  0218  30FD               	movlw	253
  1668  0219  00DC               	movwf	??_main
  1669  021A  085C               	movf	??_main,w
  1670  021B  058C               	andwf	12,f	;volatile
  1671  021C                     l80:
  1672                           
  1673                           ;main.c: 90:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc3)PORTA &= 0b1111
      +                          1011;
  1674  021C  0815               	movf	21,w	;volatile
  1675  021D  00DC               	movwf	??_main
  1676  021E  01DD               	clrf	??_main+1
  1677  021F  082C               	movf	_TMR0H,w
  1678  0220  00DF               	movwf	??_main+3
  1679  0221  01DE               	clrf	??_main+2
  1680  0222  085C               	movf	??_main,w
  1681  0223  045E               	iorwf	??_main+2,w
  1682  0224  00E0               	movwf	??_main+4
  1683  0225  085D               	movf	??_main+1,w
  1684  0226  045F               	iorwf	??_main+3,w
  1685  0227  00E1               	movwf	??_main+5
  1686  0228  082A               	movf	_tmrLoop,w
  1687  0229  0260               	subwf	??_main+4,w
  1688  022A  00E2               	movwf	??_main+6
  1689  022B  082B               	movf	_tmrLoop+1,w
  1690  022C  3B61               	subwfb	??_main+5,w
  1691  022D  00E3               	movwf	??_main+7
  1692  022E  0863               	movf	??_main+7,w
  1693  022F  0231               	subwf	_esc3+1,w
  1694  0230  1D03               	skipz
  1695  0231  2A34               	goto	u1345
  1696  0232  0862               	movf	??_main+6,w
  1697  0233  0230               	subwf	_esc3,w
  1698  0234                     u1345:
  1699  0234  1803               	skipnc
  1700  0235  2A37               	goto	u1341
  1701  0236  2A38               	goto	u1340
  1702  0237                     u1341:
  1703  0237  2A3C               	goto	l81
  1704  0238                     u1340:
  1705  0238                     l1813:
  1706  0238  30FB               	movlw	251
  1707  0239  00DC               	movwf	??_main
  1708  023A  085C               	movf	??_main,w
  1709  023B  058C               	andwf	12,f	;volatile
  1710  023C                     l81:
  1711                           
  1712                           ;main.c: 91:                 if((((TMR0H << 8) | TMR0) - tmrLoop) > esc4)PORTA &= 0b1110
      +                          1111;
  1713  023C  0815               	movf	21,w	;volatile
  1714  023D  00DC               	movwf	??_main
  1715  023E  01DD               	clrf	??_main+1
  1716  023F  082C               	movf	_TMR0H,w
  1717  0240  00DF               	movwf	??_main+3
  1718  0241  01DE               	clrf	??_main+2
  1719  0242  085C               	movf	??_main,w
  1720  0243  045E               	iorwf	??_main+2,w
  1721  0244  00E0               	movwf	??_main+4
  1722  0245  085D               	movf	??_main+1,w
  1723  0246  045F               	iorwf	??_main+3,w
  1724  0247  00E1               	movwf	??_main+5
  1725  0248  082A               	movf	_tmrLoop,w
  1726  0249  0260               	subwf	??_main+4,w
  1727  024A  00E2               	movwf	??_main+6
  1728  024B  082B               	movf	_tmrLoop+1,w
  1729  024C  3B61               	subwfb	??_main+5,w
  1730  024D  00E3               	movwf	??_main+7
  1731  024E  0863               	movf	??_main+7,w
  1732  024F  022F               	subwf	_esc4+1,w
  1733  0250  1D03               	skipz
  1734  0251  2A54               	goto	u1355
  1735  0252  0862               	movf	??_main+6,w
  1736  0253  022E               	subwf	_esc4,w
  1737  0254                     u1355:
  1738  0254  1803               	skipnc
  1739  0255  2A57               	goto	u1351
  1740  0256  2A58               	goto	u1350
  1741  0257                     u1351:
  1742  0257  2A5C               	goto	l1817
  1743  0258                     u1350:
  1744  0258                     l1815:
  1745  0258  30EF               	movlw	239
  1746  0259  00DC               	movwf	??_main
  1747  025A  085C               	movf	??_main,w
  1748  025B  058C               	andwf	12,f	;volatile
  1749  025C                     l1817:
  1750                           
  1751                           ;main.c: 87:             while((PORTA & 0b00010111) > 0){
  1752  025C  080C               	movf	12,w	;volatile
  1753  025D  3917               	andlw	23
  1754  025E  1D03               	btfss	3,2
  1755  025F  2A61               	goto	u1361
  1756  0260  2A62               	goto	u1360
  1757  0261                     u1361:
  1758  0261  29DC               	goto	l1807
  1759  0262                     u1360:
  1760  0262                     l1819:
  1761  0262  3000               	movlw	0
  1762  0263  022D               	subwf	_TMR0H+1,w
  1763  0264  304E               	movlw	78
  1764  0265  1903               	skipnz
  1765  0266  022C               	subwf	_TMR0H,w
  1766  0267  1C03               	skipc
  1767  0268  2A6A               	goto	u1371
  1768  0269  2A6B               	goto	u1370
  1769  026A                     u1371:
  1770  026A  2A62               	goto	l1819
  1771  026B                     u1370:
  1772  026B                     l1821:
  1773  026B  3014               	movlw	20
  1774  026C  0215               	subwf	21,w	;volatile
  1775  026D  1C03               	skipc
  1776  026E  2A70               	goto	u1381
  1777  026F  2A71               	goto	u1380
  1778  0270                     u1381:
  1779  0270  2A62               	goto	l1819
  1780  0271                     u1380:
  1781  0271  290E               	goto	l1747
  1782  0272  3180  28E8         	ljmp	start
  1783  0274                     __end_of_main:
  1784                           
  1785                           	psect	text1
  1786  0274                     __ptext1:	
  1787 ;; *************** function _read_sensor *****************
  1788 ;; Defined at:
  1789 ;;		line 68 in file "config.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;Total ram usage:        1 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    4
  1810 ;; This function calls:
  1811 ;;		_i2c_read
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _read_sensor
  1819  0274                     _read_sensor:
  1820  0274                     l1737:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _read_sensor: [wreg+status,2+status,0+pclath+cstack]
  1823                           
  1824                           
  1825                           ;config.c: 69:     gyrox = i2c_read(0xD2, 0xA8);
  1826  0274  30A8               	movlw	168
  1827  0275  0020               	movlb	0	; select bank0
  1828  0276  00DB               	movwf	??_read_sensor
  1829  0277  085B               	movf	??_read_sensor,w
  1830  0278  00D1               	movwf	i2c_read@subaddress
  1831  0279  30D2               	movlw	210
  1832  027A  3182  22EB  3182   	fcall	_i2c_read
  1833  027D  0020               	movlb	0	; select bank0
  1834  027E  0852               	movf	?_i2c_read+1,w
  1835  027F  00C1               	movwf	_gyrox+1
  1836  0280  0851               	movf	?_i2c_read,w
  1837  0281  00C0               	movwf	_gyrox
  1838                           
  1839                           ;config.c: 70:     gyroy = i2c_read(0xD2, 0xAA);
  1840  0282  30AA               	movlw	170
  1841  0283  00DB               	movwf	??_read_sensor
  1842  0284  085B               	movf	??_read_sensor,w
  1843  0285  00D1               	movwf	i2c_read@subaddress
  1844  0286  30D2               	movlw	210
  1845  0287  3182  22EB  3182   	fcall	_i2c_read
  1846  028A  0020               	movlb	0	; select bank0
  1847  028B  0852               	movf	?_i2c_read+1,w
  1848  028C  00BF               	movwf	_gyroy+1
  1849  028D  0851               	movf	?_i2c_read,w
  1850  028E  00BE               	movwf	_gyroy
  1851                           
  1852                           ;config.c: 71:     gyroz = i2c_read(0xD2, 0xAC);
  1853  028F  30AC               	movlw	172
  1854  0290  00DB               	movwf	??_read_sensor
  1855  0291  085B               	movf	??_read_sensor,w
  1856  0292  00D1               	movwf	i2c_read@subaddress
  1857  0293  30D2               	movlw	210
  1858  0294  3182  22EB  3182   	fcall	_i2c_read
  1859  0297  0020               	movlb	0	; select bank0
  1860  0298  0852               	movf	?_i2c_read+1,w
  1861  0299  00BD               	movwf	_gyroz+1
  1862  029A  0851               	movf	?_i2c_read,w
  1863  029B  00BC               	movwf	_gyroz
  1864                           
  1865                           ;config.c: 72:     accx = i2c_read(0x32, 0xA8);
  1866  029C  30A8               	movlw	168
  1867  029D  00DB               	movwf	??_read_sensor
  1868  029E  085B               	movf	??_read_sensor,w
  1869  029F  00D1               	movwf	i2c_read@subaddress
  1870  02A0  3032               	movlw	50
  1871  02A1  3182  22EB  3182   	fcall	_i2c_read
  1872  02A4  0020               	movlb	0	; select bank0
  1873  02A5  0852               	movf	?_i2c_read+1,w
  1874  02A6  00C7               	movwf	_accx+1
  1875  02A7  0851               	movf	?_i2c_read,w
  1876  02A8  00C6               	movwf	_accx
  1877                           
  1878                           ;config.c: 73:     accy = i2c_read(0x32, 0xAA);
  1879  02A9  30AA               	movlw	170
  1880  02AA  00DB               	movwf	??_read_sensor
  1881  02AB  085B               	movf	??_read_sensor,w
  1882  02AC  00D1               	movwf	i2c_read@subaddress
  1883  02AD  3032               	movlw	50
  1884  02AE  3182  22EB  3182   	fcall	_i2c_read
  1885  02B1  0020               	movlb	0	; select bank0
  1886  02B2  0852               	movf	?_i2c_read+1,w
  1887  02B3  00C5               	movwf	_accy+1
  1888  02B4  0851               	movf	?_i2c_read,w
  1889  02B5  00C4               	movwf	_accy
  1890                           
  1891                           ;config.c: 74:     accz = i2c_read(0x32, 0xAC);
  1892  02B6  30AC               	movlw	172
  1893  02B7  00DB               	movwf	??_read_sensor
  1894  02B8  085B               	movf	??_read_sensor,w
  1895  02B9  00D1               	movwf	i2c_read@subaddress
  1896  02BA  3032               	movlw	50
  1897  02BB  3182  22EB  3182   	fcall	_i2c_read
  1898  02BE  0020               	movlb	0	; select bank0
  1899  02BF  0852               	movf	?_i2c_read+1,w
  1900  02C0  00C3               	movwf	_accz+1
  1901  02C1  0851               	movf	?_i2c_read,w
  1902  02C2  00C2               	movwf	_accz
  1903                           
  1904                           ;config.c: 75:     magx = i2c_read(0x3C, 0x83);
  1905  02C3  3083               	movlw	131
  1906  02C4  00DB               	movwf	??_read_sensor
  1907  02C5  085B               	movf	??_read_sensor,w
  1908  02C6  00D1               	movwf	i2c_read@subaddress
  1909  02C7  303C               	movlw	60
  1910  02C8  3182  22EB  3182   	fcall	_i2c_read
  1911  02CB  0020               	movlb	0	; select bank0
  1912  02CC  0852               	movf	?_i2c_read+1,w
  1913  02CD  00BB               	movwf	_magx+1
  1914  02CE  0851               	movf	?_i2c_read,w
  1915  02CF  00BA               	movwf	_magx
  1916                           
  1917                           ;config.c: 76:     magy = i2c_read(0x3C, 0x85);
  1918  02D0  3085               	movlw	133
  1919  02D1  00DB               	movwf	??_read_sensor
  1920  02D2  085B               	movf	??_read_sensor,w
  1921  02D3  00D1               	movwf	i2c_read@subaddress
  1922  02D4  303C               	movlw	60
  1923  02D5  3182  22EB  3182   	fcall	_i2c_read
  1924  02D8  0020               	movlb	0	; select bank0
  1925  02D9  0852               	movf	?_i2c_read+1,w
  1926  02DA  00B9               	movwf	_magy+1
  1927  02DB  0851               	movf	?_i2c_read,w
  1928  02DC  00B8               	movwf	_magy
  1929                           
  1930                           ;config.c: 77:     magz = i2c_read(0x3C, 0x87);
  1931  02DD  3087               	movlw	135
  1932  02DE  00DB               	movwf	??_read_sensor
  1933  02DF  085B               	movf	??_read_sensor,w
  1934  02E0  00D1               	movwf	i2c_read@subaddress
  1935  02E1  303C               	movlw	60
  1936  02E2  3182  22EB  3182   	fcall	_i2c_read
  1937  02E5  0020               	movlb	0	; select bank0
  1938  02E6  0852               	movf	?_i2c_read+1,w
  1939  02E7  00B7               	movwf	_magz+1
  1940  02E8  0851               	movf	?_i2c_read,w
  1941  02E9  00B6               	movwf	_magz
  1942  02EA                     l233:
  1943  02EA  0008               	return
  1944  02EB                     __end_of_read_sensor:
  1945                           
  1946                           	psect	text2
  1947  02EB                     __ptext2:	
  1948 ;; *************** function _i2c_read *****************
  1949 ;; Defined at:
  1950 ;;		line 94 in file "config.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  address         1    wreg     unsigned char 
  1953 ;;  subaddress      1    7[BANK0 ] unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  address         1   16[BANK0 ] unsigned char 
  1956 ;;  high            2   14[BANK0 ] int 
  1957 ;;  low             2   12[BANK0 ] int 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    7[BANK0 ] int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0, pclath, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1968 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1969 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1970 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1971 ;;Total ram usage:       10 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    3
  1974 ;; This function calls:
  1975 ;;		_i2c_read_byte
  1976 ;;		_i2c_restart
  1977 ;;		_i2c_start
  1978 ;;		_i2c_stop
  1979 ;;		_i2c_write_byte
  1980 ;;		_nack
  1981 ;; This function is called by:
  1982 ;;		_read_sensor
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _i2c_read
  1988  02EB                     _i2c_read:
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1992                           ;i2c_read@address stored from wreg
  1993  02EB  0020               	movlb	0	; select bank0
  1994  02EC  00DA               	movwf	i2c_read@address
  1995  02ED                     l1631:
  1996                           
  1997                           ;config.c: 95:     int low, high;;config.c: 96:     i2c_start();
  1998  02ED  3184  2498  3182   	fcall	_i2c_start
  1999  02F0                     l1633:
  2000                           
  2001                           ;config.c: 97:     i2c_write_byte(address);
  2002  02F0  0020               	movlb	0	; select bank0
  2003  02F1  085A               	movf	i2c_read@address,w
  2004  02F2  3184  245F  3182   	fcall	_i2c_write_byte
  2005  02F5                     l1635:
  2006                           
  2007                           ;config.c: 98:     if(nack())
  2008  02F5  3184  2474  3182   	fcall	_nack
  2009  02F8  0020               	movlb	0	; select bank0
  2010  02F9  084A               	movf	?_nack,w
  2011  02FA  044B               	iorwf	?_nack+1,w
  2012  02FB  1903               	btfsc	3,2
  2013  02FC  2AFE               	goto	u1141
  2014  02FD  2AFF               	goto	u1140
  2015  02FE                     u1141:
  2016  02FE  2B02               	goto	l1641
  2017  02FF                     u1140:
  2018  02FF                     l1637:
  2019                           
  2020                           ;config.c: 99:         return 0;
  2021  02FF  01D1               	clrf	?_i2c_read
  2022  0300  01D2               	clrf	?_i2c_read+1
  2023  0301  2B5C               	goto	l243
  2024  0302                     l1641:
  2025                           
  2026                           ;config.c: 101:     i2c_write_byte(subaddress);
  2027  0302  0851               	movf	i2c_read@subaddress,w
  2028  0303  3184  245F  3182   	fcall	_i2c_write_byte
  2029                           
  2030                           ;config.c: 102:     if(nack())
  2031  0306  3184  2474  3182   	fcall	_nack
  2032  0309  0020               	movlb	0	; select bank0
  2033  030A  084A               	movf	?_nack,w
  2034  030B  044B               	iorwf	?_nack+1,w
  2035  030C  1903               	btfsc	3,2
  2036  030D  2B0F               	goto	u1151
  2037  030E  2B10               	goto	u1150
  2038  030F                     u1151:
  2039  030F  2B11               	goto	l1647
  2040  0310                     u1150:
  2041  0310  2AFF               	goto	l1637
  2042  0311                     l1647:
  2043                           
  2044                           ;config.c: 104:     i2c_restart();
  2045  0311  3184  2486  3182   	fcall	_i2c_restart
  2046  0314                     l1649:
  2047                           
  2048                           ;config.c: 105:     i2c_write_byte(address | 1);
  2049  0314  0020               	movlb	0	; select bank0
  2050  0315  085A               	movf	i2c_read@address,w
  2051  0316  3801               	iorlw	1
  2052  0317  3184  245F  3182   	fcall	_i2c_write_byte
  2053  031A                     l1651:
  2054                           
  2055                           ;config.c: 106:     if(nack())
  2056  031A  3184  2474  3182   	fcall	_nack
  2057  031D  0020               	movlb	0	; select bank0
  2058  031E  084A               	movf	?_nack,w
  2059  031F  044B               	iorwf	?_nack+1,w
  2060  0320  1903               	btfsc	3,2
  2061  0321  2B23               	goto	u1161
  2062  0322  2B24               	goto	u1160
  2063  0323                     u1161:
  2064  0323  2B25               	goto	l1657
  2065  0324                     u1160:
  2066  0324  2AFF               	goto	l1637
  2067  0325                     l1657:
  2068                           
  2069                           ;config.c: 108:     low = i2c_read_byte(0);
  2070  0325  3000               	movlw	0
  2071  0326  3184  243C  3182   	fcall	_i2c_read_byte
  2072  0329  0020               	movlb	0	; select bank0
  2073  032A  084B               	movf	?_i2c_read_byte+1,w
  2074  032B  00D7               	movwf	i2c_read@low+1
  2075  032C  084A               	movf	?_i2c_read_byte,w
  2076  032D  00D6               	movwf	i2c_read@low
  2077                           
  2078                           ;config.c: 109:     high = i2c_read_byte(1);
  2079  032E  3001               	movlw	1
  2080  032F  3184  243C  3182   	fcall	_i2c_read_byte
  2081  0332  0020               	movlb	0	; select bank0
  2082  0333  084B               	movf	?_i2c_read_byte+1,w
  2083  0334  00D9               	movwf	i2c_read@high+1
  2084  0335  084A               	movf	?_i2c_read_byte,w
  2085  0336  00D8               	movwf	i2c_read@high
  2086  0337                     l1659:
  2087                           
  2088                           ;config.c: 110:     i2c_stop();
  2089  0337  3184  248F  3182   	fcall	_i2c_stop
  2090  033A                     l1661:
  2091                           
  2092                           ;config.c: 111:     if(address != 0x3C)
  2093  033A  303C               	movlw	60
  2094  033B  0020               	movlb	0	; select bank0
  2095  033C  065A               	xorwf	i2c_read@address,w
  2096  033D  1903               	btfsc	3,2
  2097  033E  2B40               	goto	u1171
  2098  033F  2B41               	goto	u1170
  2099  0340                     u1171:
  2100  0340  2B4F               	goto	l1669
  2101  0341                     u1170:
  2102  0341                     l1663:
  2103                           
  2104                           ;config.c: 112:         return((high << 8) | low);
  2105  0341  0859               	movf	i2c_read@high+1,w
  2106  0342  00D4               	movwf	??_i2c_read+1
  2107  0343  0858               	movf	i2c_read@high,w
  2108  0344  00D3               	movwf	??_i2c_read
  2109  0345  0853               	movf	??_i2c_read,w
  2110  0346  00D4               	movwf	??_i2c_read+1
  2111  0347  01D3               	clrf	??_i2c_read
  2112  0348  0856               	movf	i2c_read@low,w
  2113  0349  0453               	iorwf	??_i2c_read,w
  2114  034A  00D1               	movwf	?_i2c_read
  2115  034B  0857               	movf	i2c_read@low+1,w
  2116  034C  0454               	iorwf	??_i2c_read+1,w
  2117  034D  00D2               	movwf	?_i2c_read+1
  2118  034E  2B5C               	goto	l243
  2119  034F                     l1669:
  2120                           
  2121                           ;config.c: 114:         return((low << 8) | high);
  2122  034F  0857               	movf	i2c_read@low+1,w
  2123  0350  00D4               	movwf	??_i2c_read+1
  2124  0351  0856               	movf	i2c_read@low,w
  2125  0352  00D3               	movwf	??_i2c_read
  2126  0353  0853               	movf	??_i2c_read,w
  2127  0354  00D4               	movwf	??_i2c_read+1
  2128  0355  01D3               	clrf	??_i2c_read
  2129  0356  0858               	movf	i2c_read@high,w
  2130  0357  0453               	iorwf	??_i2c_read,w
  2131  0358  00D1               	movwf	?_i2c_read
  2132  0359  0859               	movf	i2c_read@high+1,w
  2133  035A  0454               	iorwf	??_i2c_read+1,w
  2134  035B  00D2               	movwf	?_i2c_read+1
  2135  035C                     l243:
  2136  035C  0008               	return
  2137  035D                     __end_of_i2c_read:
  2138                           
  2139                           	psect	text3
  2140  0486                     __ptext3:	
  2141 ;; *************** function _i2c_restart *****************
  2142 ;; Defined at:
  2143 ;;		line 145 in file "config.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		None
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_i2c_read
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _i2c_restart
  2173  0486                     _i2c_restart:
  2174  0486                     l1597:	
  2175                           ;incstack = 0
  2176                           ; Regs used in _i2c_restart: []
  2177                           
  2178                           
  2179                           ;config.c: 146:     SSPCON2bits.RSEN = 1;
  2180  0486  0024               	movlb	4	; select bank4
  2181  0487  1496               	bsf	22,1	;volatile
  2182  0488                     l269:	
  2183                           ;config.c: 147:     while(SSPCON2bits.RSEN);
  2184                           
  2185  0488  1896               	btfsc	22,1	;volatile
  2186  0489  2C8B               	goto	u1081
  2187  048A  2C8C               	goto	u1080
  2188  048B                     u1081:
  2189  048B  2C88               	goto	l269
  2190  048C                     u1080:
  2191  048C                     l271:
  2192                           
  2193                           ;config.c: 148:     PIR1bits.SSP1IF = 0;
  2194  048C  0020               	movlb	0	; select bank0
  2195  048D  1190               	bcf	16,3	;volatile
  2196  048E                     l272:
  2197  048E  0008               	return
  2198  048F                     __end_of_i2c_restart:
  2199                           
  2200                           	psect	text4
  2201  043C                     __ptext4:	
  2202 ;; *************** function _i2c_read_byte *****************
  2203 ;; Defined at:
  2204 ;;		line 117 in file "config.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  ack             1    wreg     unsigned char 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  ack             1    4[BANK0 ] unsigned char 
  2209 ;;  temp            2    5[BANK0 ] int 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2    0[BANK0 ] int 
  2212 ;; Registers used:
  2213 ;;		wreg, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2219 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2220 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2222 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2223 ;;Total ram usage:        7 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_i2c_read
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _i2c_read_byte
  2235  043C                     _i2c_read_byte:
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _i2c_read_byte: [wreg+status,0]
  2239                           ;i2c_read_byte@ack stored from wreg
  2240  043C  0020               	movlb	0	; select bank0
  2241  043D  00CE               	movwf	i2c_read_byte@ack
  2242  043E                     l1599:
  2243                           
  2244                           ;config.c: 118:     int temp;;config.c: 119:     SSP1CON2bits.RCEN = 1;
  2245  043E  0024               	movlb	4	; select bank4
  2246  043F  1596               	bsf	22,3	;volatile
  2247  0440                     l250:	
  2248                           ;config.c: 120:     while(RCEN);
  2249                           
  2250  0440  1996               	btfsc	22,3	;volatile
  2251  0441  2C43               	goto	u1091
  2252  0442  2C44               	goto	u1090
  2253  0443                     u1091:
  2254  0443  2C40               	goto	l250
  2255  0444                     u1090:
  2256  0444                     l1601:
  2257                           
  2258                           ;config.c: 121:     temp = SSP1BUF;
  2259  0444  0811               	movf	17,w	;volatile
  2260  0445  0020               	movlb	0	; select bank0
  2261  0446  00CC               	movwf	??_i2c_read_byte
  2262  0447  01CD               	clrf	??_i2c_read_byte+1
  2263  0448  084C               	movf	??_i2c_read_byte,w
  2264  0449  00CF               	movwf	i2c_read_byte@temp
  2265  044A  084D               	movf	??_i2c_read_byte+1,w
  2266  044B  00D0               	movwf	i2c_read_byte@temp+1
  2267  044C                     l1603:
  2268                           
  2269                           ;config.c: 122:     PIR1bits.SSP1IF = 0;
  2270  044C  1190               	bcf	16,3	;volatile
  2271  044D                     l1605:
  2272                           
  2273                           ;config.c: 124:     SSP1CON2bits.ACKDT = ack;
  2274  044D  0C4E               	rrf	i2c_read_byte@ack,w
  2275  044E  0024               	movlb	4	; select bank4
  2276  044F  1C03               	skipc
  2277  0450  1296               	bcf	22,5	;volatile
  2278  0451  1803               	skipnc
  2279  0452  1696               	bsf	22,5	;volatile
  2280  0453                     l1607:
  2281                           
  2282                           ;config.c: 125:     SSP1CON2bits.ACKEN = 1;
  2283  0453  1616               	bsf	22,4	;volatile
  2284  0454                     l253:	
  2285                           ;config.c: 126:     while(SSP1CON2bits.ACKEN);
  2286                           
  2287  0454  1A16               	btfsc	22,4	;volatile
  2288  0455  2C57               	goto	u1101
  2289  0456  2C58               	goto	u1100
  2290  0457                     u1101:
  2291  0457  2C54               	goto	l253
  2292  0458                     u1100:
  2293  0458                     l255:
  2294                           
  2295                           ;config.c: 127:     PIR1bits.SSP1IF = 0;
  2296  0458  0020               	movlb	0	; select bank0
  2297  0459  1190               	bcf	16,3	;volatile
  2298  045A                     l1609:
  2299                           
  2300                           ;config.c: 128:     return temp;
  2301  045A  0850               	movf	i2c_read_byte@temp+1,w
  2302  045B  00CB               	movwf	?_i2c_read_byte+1
  2303  045C  084F               	movf	i2c_read_byte@temp,w
  2304  045D  00CA               	movwf	?_i2c_read_byte
  2305  045E                     l256:
  2306  045E  0008               	return
  2307  045F                     __end_of_i2c_read_byte:
  2308                           
  2309                           	psect	text5
  2310  035D                     __ptext5:	
  2311 ;; *************** function _pic_init *****************
  2312 ;; Defined at:
  2313 ;;		line 6 in file "config.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    1
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _pic_init
  2343  035D                     _pic_init:
  2344  035D                     l1673:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _pic_init: [wreg+status,2+status,0]
  2347                           
  2348                           
  2349                           ;config.c: 9:     OSCCONbits.IRCF = 0b1110;
  2350  035D  0021               	movlb	1	; select bank1
  2351  035E  0819               	movf	25,w	;volatile
  2352  035F  3987               	andlw	-121
  2353  0360  3870               	iorlw	112
  2354  0361  0099               	movwf	25	;volatile
  2355                           
  2356                           ;config.c: 10:     OSCCONbits.SCS = 0;
  2357  0362  30FC               	movlw	-4
  2358  0363  0599               	andwf	25,f	;volatile
  2359  0364                     l224:	
  2360                           ;config.c: 11:     while(!OSCSTATbits.PLLR);
  2361                           
  2362  0364  1F1A               	btfss	26,6	;volatile
  2363  0365  2B67               	goto	u1181
  2364  0366  2B68               	goto	u1180
  2365  0367                     u1181:
  2366  0367  2B64               	goto	l224
  2367  0368                     u1180:
  2368  0368                     l226:
  2369                           
  2370                           ;config.c: 13:     INTCONbits.GIE = 1;
  2371  0368  178B               	bsf	11,7	;volatile
  2372                           
  2373                           ;config.c: 14:     INTCONbits.IOCIE = 1;
  2374  0369  158B               	bsf	11,3	;volatile
  2375                           
  2376                           ;config.c: 15:     INTCONbits.PEIE = 1;
  2377  036A  170B               	bsf	11,6	;volatile
  2378                           
  2379                           ;config.c: 16:     PIE1bits.TMR2IE = 1;
  2380  036B  1490               	bsf	16,1	;volatile
  2381                           
  2382                           ;config.c: 17:     INTCONbits.TMR0IE = 1;
  2383  036C  168B               	bsf	11,5	;volatile
  2384  036D                     l1675:
  2385                           
  2386                           ;config.c: 18:     IOCCP = 0b01111000;
  2387  036D  3078               	movlw	120
  2388  036E  0027               	movlb	7	; select bank7
  2389  036F  0097               	movwf	23	;volatile
  2390  0370                     l1677:
  2391                           
  2392                           ;config.c: 22:     OPTION_REGbits.TMR0CS = 0;
  2393  0370  0021               	movlb	1	; select bank1
  2394  0371  1295               	bcf	21,5	;volatile
  2395  0372                     l1679:
  2396                           
  2397                           ;config.c: 23:     OPTION_REGbits.PSA = 0;
  2398  0372  1195               	bcf	21,3	;volatile
  2399  0373                     l1681:
  2400                           
  2401                           ;config.c: 24:     OPTION_REGbits.PS = 2;
  2402  0373  0815               	movf	21,w	;volatile
  2403  0374  39F8               	andlw	-8
  2404  0375  3802               	iorlw	2
  2405  0376  0095               	movwf	21	;volatile
  2406  0377                     l1683:
  2407                           
  2408                           ;config.c: 26:     T1CONbits.TMR1CS = 0;
  2409  0377  303F               	movlw	-193
  2410  0378  0020               	movlb	0	; select bank0
  2411  0379  0598               	andwf	24,f	;volatile
  2412  037A                     l1685:
  2413                           
  2414                           ;config.c: 27:     T1CONbits.T1CKPS = 3;
  2415  037A  3030               	movlw	48
  2416  037B  0498               	iorwf	24,f	;volatile
  2417  037C                     l1687:
  2418                           
  2419                           ;config.c: 29:     T3CONbits.TMR3CS = 0;
  2420  037C  303F               	movlw	-193
  2421  037D  0029               	movlb	9	; select bank9
  2422  037E  0595               	andwf	21,f	;volatile
  2423  037F                     l1689:
  2424                           
  2425                           ;config.c: 30:     T3CONbits.T3CKPS = 3;
  2426  037F  3030               	movlw	48
  2427  0380  0495               	iorwf	21,f	;volatile
  2428  0381                     l1691:
  2429                           
  2430                           ;config.c: 32:     T5CONbits.TMR5CS = 0;
  2431  0381  303F               	movlw	-193
  2432  0382  059C               	andwf	28,f	;volatile
  2433  0383                     l1693:
  2434                           
  2435                           ;config.c: 33:     T5CONbits.T5CKPS = 3;
  2436  0383  3030               	movlw	48
  2437  0384  049C               	iorwf	28,f	;volatile
  2438  0385                     l1695:
  2439                           
  2440                           ;config.c: 35:     T2CLKCON = 0;
  2441  0385  0020               	movlb	0	; select bank0
  2442  0386  019E               	clrf	30	;volatile
  2443  0387                     l1697:
  2444                           
  2445                           ;config.c: 36:     T2CONbits.CKPS = 3;
  2446  0387  081C               	movf	28,w	;volatile
  2447  0388  398F               	andlw	-113
  2448  0389  3830               	iorlw	48
  2449  038A  009C               	movwf	28	;volatile
  2450  038B                     l1699:
  2451                           
  2452                           ;config.c: 37:     T2CONbits.OUTPS = 0;
  2453  038B  30F0               	movlw	-16
  2454  038C  059C               	andwf	28,f	;volatile
  2455  038D                     l1701:
  2456                           
  2457                           ;config.c: 38:     T2HLTbits.PSYNC = 1;
  2458  038D  179D               	bsf	29,7	;volatile
  2459  038E                     l1703:
  2460                           
  2461                           ;config.c: 39:     T2RST = 15;
  2462  038E  300F               	movlw	15
  2463  038F  009F               	movwf	31	;volatile
  2464  0390                     l1705:
  2465                           
  2466                           ;config.c: 41:     SSP1CONbits.SSPEN = 1;
  2467  0390  0024               	movlb	4	; select bank4
  2468  0391  1695               	bsf	21,5	;volatile
  2469  0392                     l1707:
  2470                           
  2471                           ;config.c: 42:     SSP1CONbits.SSPM = 8;
  2472  0392  0815               	movf	21,w	;volatile
  2473  0393  39F0               	andlw	-16
  2474  0394  3808               	iorlw	8
  2475  0395  0095               	movwf	21	;volatile
  2476  0396                     l1709:
  2477                           
  2478                           ;config.c: 43:     SSP1ADD = 19;
  2479  0396  3013               	movlw	19
  2480  0397  0092               	movwf	18	;volatile
  2481  0398                     l1711:
  2482                           
  2483                           ;config.c: 44:     RB4PPS = 17;
  2484  0398  3011               	movlw	17
  2485  0399  003D               	movlb	29	; select bank29
  2486  039A  009C               	movwf	28	;volatile
  2487  039B                     l1713:
  2488                           
  2489                           ;config.c: 45:     RB6PPS = 16;
  2490  039B  3010               	movlw	16
  2491  039C  009E               	movwf	30	;volatile
  2492  039D                     l1715:
  2493                           
  2494                           ;config.c: 46:     SSPDATPPS = 12;
  2495  039D  300C               	movlw	12
  2496  039E  003C               	movlb	28	; select bank28
  2497  039F  00A1               	movwf	33	;volatile
  2498  03A0                     l1717:
  2499                           
  2500                           ;config.c: 47:     SSPCLKPPS = 14;
  2501  03A0  300E               	movlw	14
  2502  03A1  00A0               	movwf	32	;volatile
  2503  03A2                     l1719:
  2504                           
  2505                           ;config.c: 49:     ANSELA = 0;
  2506  03A2  0023               	movlb	3	; select bank3
  2507  03A3  018C               	clrf	12	;volatile
  2508  03A4                     l1721:
  2509                           
  2510                           ;config.c: 50:     ANSELB = 0;
  2511  03A4  018D               	clrf	13	;volatile
  2512  03A5                     l1723:
  2513                           
  2514                           ;config.c: 51:     ANSELC = 0;
  2515  03A5  018E               	clrf	14	;volatile
  2516  03A6                     l1725:
  2517                           
  2518                           ;config.c: 52:     TRISA = 0;
  2519  03A6  0021               	movlb	1	; select bank1
  2520  03A7  018C               	clrf	12	;volatile
  2521  03A8                     l1727:
  2522                           
  2523                           ;config.c: 53:     TRISB = 0b01010000;
  2524  03A8  3050               	movlw	80
  2525  03A9  008D               	movwf	13	;volatile
  2526  03AA                     l1729:
  2527                           
  2528                           ;config.c: 54:     ODCONBbits.ODB4 = 1;
  2529  03AA  0025               	movlb	5	; select bank5
  2530  03AB  160D               	bsf	13,4	;volatile
  2531  03AC                     l1731:
  2532                           
  2533                           ;config.c: 55:     ODCONBbits.ODB6 = 1;
  2534  03AC  170D               	bsf	13,6	;volatile
  2535  03AD                     l1733:
  2536                           
  2537                           ;config.c: 56:     TRISC = 0b01111000;
  2538  03AD  3078               	movlw	120
  2539  03AE  0021               	movlb	1	; select bank1
  2540  03AF  008E               	movwf	14	;volatile
  2541  03B0                     l227:
  2542  03B0  0008               	return
  2543  03B1                     __end_of_pic_init:
  2544                           
  2545                           	psect	text6
  2546  03B1                     __ptext6:	
  2547 ;; *************** function _gyro_config *****************
  2548 ;; Defined at:
  2549 ;;		line 58 in file "config.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;Total ram usage:        2 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    4
  2570 ;; This function calls:
  2571 ;;		_i2c_write
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function _gyro_config
  2579  03B1                     _gyro_config:
  2580  03B1                     l1735:	
  2581                           ;incstack = 0
  2582                           ; Regs used in _gyro_config: [wreg+status,2+status,0+pclath+cstack]
  2583                           
  2584                           
  2585                           ;config.c: 59:     i2c_write(0xD2, 0x20, 0x0F);
  2586  03B1  3020               	movlw	32
  2587  03B2  0020               	movlb	0	; select bank0
  2588  03B3  00CF               	movwf	??_gyro_config
  2589  03B4  084F               	movf	??_gyro_config,w
  2590  03B5  00CC               	movwf	i2c_write@subaddress
  2591  03B6  300F               	movlw	15
  2592  03B7  00D0               	movwf	??_gyro_config+1
  2593  03B8  0850               	movf	??_gyro_config+1,w
  2594  03B9  00CD               	movwf	i2c_write@data
  2595  03BA  30D2               	movlw	210
  2596  03BB  3184  2405  3183   	fcall	_i2c_write
  2597                           
  2598                           ;config.c: 60:     i2c_write(0xD2, 0x23, 0x90);
  2599  03BE  3023               	movlw	35
  2600  03BF  0020               	movlb	0	; select bank0
  2601  03C0  00CF               	movwf	??_gyro_config
  2602  03C1  084F               	movf	??_gyro_config,w
  2603  03C2  00CC               	movwf	i2c_write@subaddress
  2604  03C3  3090               	movlw	144
  2605  03C4  00D0               	movwf	??_gyro_config+1
  2606  03C5  0850               	movf	??_gyro_config+1,w
  2607  03C6  00CD               	movwf	i2c_write@data
  2608  03C7  30D2               	movlw	210
  2609  03C8  3184  2405  3183   	fcall	_i2c_write
  2610                           
  2611                           ;config.c: 61:     i2c_write(0x32, 0x20, 0x57);
  2612  03CB  3020               	movlw	32
  2613  03CC  0020               	movlb	0	; select bank0
  2614  03CD  00CF               	movwf	??_gyro_config
  2615  03CE  084F               	movf	??_gyro_config,w
  2616  03CF  00CC               	movwf	i2c_write@subaddress
  2617  03D0  3057               	movlw	87
  2618  03D1  00D0               	movwf	??_gyro_config+1
  2619  03D2  0850               	movf	??_gyro_config+1,w
  2620  03D3  00CD               	movwf	i2c_write@data
  2621  03D4  3032               	movlw	50
  2622  03D5  3184  2405  3183   	fcall	_i2c_write
  2623                           
  2624                           ;config.c: 62:     i2c_write(0x32, 0x23, 0x90);
  2625  03D8  3023               	movlw	35
  2626  03D9  0020               	movlb	0	; select bank0
  2627  03DA  00CF               	movwf	??_gyro_config
  2628  03DB  084F               	movf	??_gyro_config,w
  2629  03DC  00CC               	movwf	i2c_write@subaddress
  2630  03DD  3090               	movlw	144
  2631  03DE  00D0               	movwf	??_gyro_config+1
  2632  03DF  0850               	movf	??_gyro_config+1,w
  2633  03E0  00CD               	movwf	i2c_write@data
  2634  03E1  3032               	movlw	50
  2635  03E2  3184  2405  3183   	fcall	_i2c_write
  2636                           
  2637                           ;config.c: 63:     i2c_write(0x3C, 0, 0x18);
  2638  03E5  0020               	movlb	0	; select bank0
  2639  03E6  01CC               	clrf	i2c_write@subaddress
  2640  03E7  3018               	movlw	24
  2641  03E8  00CF               	movwf	??_gyro_config
  2642  03E9  084F               	movf	??_gyro_config,w
  2643  03EA  00CD               	movwf	i2c_write@data
  2644  03EB  303C               	movlw	60
  2645  03EC  3184  2405  3183   	fcall	_i2c_write
  2646                           
  2647                           ;config.c: 64:     i2c_write(0x3C, 1, 0x80);
  2648  03EF  0020               	movlb	0	; select bank0
  2649  03F0  01CC               	clrf	i2c_write@subaddress
  2650  03F1  0ACC               	incf	i2c_write@subaddress,f
  2651  03F2  3080               	movlw	128
  2652  03F3  00CF               	movwf	??_gyro_config
  2653  03F4  084F               	movf	??_gyro_config,w
  2654  03F5  00CD               	movwf	i2c_write@data
  2655  03F6  303C               	movlw	60
  2656  03F7  3184  2405  3183   	fcall	_i2c_write
  2657                           
  2658                           ;config.c: 65:     i2c_write(0x3C, 2, 0);
  2659  03FA  3002               	movlw	2
  2660  03FB  0020               	movlb	0	; select bank0
  2661  03FC  00CF               	movwf	??_gyro_config
  2662  03FD  084F               	movf	??_gyro_config,w
  2663  03FE  00CC               	movwf	i2c_write@subaddress
  2664  03FF  01CD               	clrf	i2c_write@data
  2665  0400  303C               	movlw	60
  2666  0401  3184  2405  3183   	fcall	_i2c_write
  2667  0404                     l230:
  2668  0404  0008               	return
  2669  0405                     __end_of_gyro_config:
  2670                           
  2671                           	psect	text7
  2672  0405                     __ptext7:	
  2673 ;; *************** function _i2c_write *****************
  2674 ;; Defined at:
  2675 ;;		line 80 in file "config.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  address         1    wreg     unsigned char 
  2678 ;;  subaddress      1    2[BANK0 ] unsigned char 
  2679 ;;  data            1    3[BANK0 ] unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  address         1    4[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2691 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2694 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;Total ram usage:        3 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    3
  2698 ;; This function calls:
  2699 ;;		_i2c_start
  2700 ;;		_i2c_stop
  2701 ;;		_i2c_write_byte
  2702 ;;		_nack
  2703 ;; This function is called by:
  2704 ;;		_gyro_config
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _i2c_write
  2710  0405                     _i2c_write:
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2714                           ;i2c_write@address stored from wreg
  2715  0405  0020               	movlb	0	; select bank0
  2716  0406  00CE               	movwf	i2c_write@address
  2717  0407                     l1613:
  2718                           
  2719                           ;config.c: 81:     i2c_start();
  2720  0407  3184  2498  3184   	fcall	_i2c_start
  2721  040A                     l1615:
  2722                           
  2723                           ;config.c: 82:     i2c_write_byte(address);
  2724  040A  0020               	movlb	0	; select bank0
  2725  040B  084E               	movf	i2c_write@address,w
  2726  040C  3184  245F  3184   	fcall	_i2c_write_byte
  2727  040F                     l1617:
  2728                           
  2729                           ;config.c: 83:     if(nack())
  2730  040F  3184  2474  3184   	fcall	_nack
  2731  0412  0020               	movlb	0	; select bank0
  2732  0413  084A               	movf	?_nack,w
  2733  0414  044B               	iorwf	?_nack+1,w
  2734  0415  1903               	btfsc	3,2
  2735  0416  2C18               	goto	u1111
  2736  0417  2C19               	goto	u1110
  2737  0418                     u1111:
  2738  0418  2C1A               	goto	l1621
  2739  0419                     u1110:
  2740  0419  2C3B               	goto	l237
  2741  041A                     l1621:
  2742                           
  2743                           ;config.c: 85:     i2c_write_byte(subaddress);
  2744  041A  084C               	movf	i2c_write@subaddress,w
  2745  041B  3184  245F  3184   	fcall	_i2c_write_byte
  2746                           
  2747                           ;config.c: 86:     if(nack())
  2748  041E  3184  2474  3184   	fcall	_nack
  2749  0421  0020               	movlb	0	; select bank0
  2750  0422  084A               	movf	?_nack,w
  2751  0423  044B               	iorwf	?_nack+1,w
  2752  0424  1903               	btfsc	3,2
  2753  0425  2C27               	goto	u1121
  2754  0426  2C28               	goto	u1120
  2755  0427                     u1121:
  2756  0427  2C29               	goto	l1625
  2757  0428                     u1120:
  2758  0428  2C3B               	goto	l237
  2759  0429                     l1625:
  2760                           
  2761                           ;config.c: 88:     i2c_write_byte(data);
  2762  0429  084D               	movf	i2c_write@data,w
  2763  042A  3184  245F  3184   	fcall	_i2c_write_byte
  2764                           
  2765                           ;config.c: 89:     if(nack())
  2766  042D  3184  2474  3184   	fcall	_nack
  2767  0430  0020               	movlb	0	; select bank0
  2768  0431  084A               	movf	?_nack,w
  2769  0432  044B               	iorwf	?_nack+1,w
  2770  0433  1903               	btfsc	3,2
  2771  0434  2C36               	goto	u1131
  2772  0435  2C37               	goto	u1130
  2773  0436                     u1131:
  2774  0436  2C38               	goto	l1629
  2775  0437                     u1130:
  2776  0437  2C3B               	goto	l237
  2777  0438                     l1629:
  2778                           
  2779                           ;config.c: 91:     i2c_stop();
  2780  0438  3184  248F  3184   	fcall	_i2c_stop
  2781  043B                     l237:
  2782  043B  0008               	return
  2783  043C                     __end_of_i2c_write:
  2784                           
  2785                           	psect	text8
  2786  0474                     __ptext8:	
  2787 ;; *************** function _nack *****************
  2788 ;; Defined at:
  2789 ;;		line 131 in file "config.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  2    0[BANK0 ] int 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;Total ram usage:        2 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    2
  2810 ;; This function calls:
  2811 ;;		_i2c_stop
  2812 ;; This function is called by:
  2813 ;;		_i2c_write
  2814 ;;		_i2c_read
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _nack
  2820  0474                     _nack:
  2821  0474                     l1585:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _nack: [wreg+status,2+status,0+pclath+cstack]
  2824                           
  2825                           
  2826                           ;config.c: 132:     if(SSP1CON2bits.ACKSTAT){
  2827  0474  0024               	movlb	4	; select bank4
  2828  0475  1F16               	btfss	22,6	;volatile
  2829  0476  2C78               	goto	u1071
  2830  0477  2C79               	goto	u1070
  2831  0478                     u1071:
  2832  0478  2C82               	goto	l1593
  2833  0479                     u1070:
  2834  0479                     l1587:
  2835                           
  2836                           ;config.c: 133:         i2c_stop();
  2837  0479  3184  248F  3184   	fcall	_i2c_stop
  2838  047C                     l1589:
  2839                           
  2840                           ;config.c: 134:         return 1;
  2841  047C  3001               	movlw	1
  2842  047D  0020               	movlb	0	; select bank0
  2843  047E  00CA               	movwf	?_nack
  2844  047F  3000               	movlw	0
  2845  0480  00CB               	movwf	?_nack+1
  2846  0481  2C85               	goto	l260
  2847  0482                     l1593:
  2848                           
  2849                           ;config.c: 136:     return 0;
  2850  0482  0020               	movlb	0	; select bank0
  2851  0483  01CA               	clrf	?_nack
  2852  0484  01CB               	clrf	?_nack+1
  2853  0485                     l260:
  2854  0485  0008               	return
  2855  0486                     __end_of_nack:
  2856                           
  2857                           	psect	text9
  2858  048F                     __ptext9:	
  2859 ;; *************** function _i2c_stop *****************
  2860 ;; Defined at:
  2861 ;;		line 160 in file "config.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		None
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_i2c_write
  2886 ;;		_i2c_read
  2887 ;;		_nack
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _i2c_stop
  2893  048F                     _i2c_stop:
  2894  048F                     l1575:	
  2895                           ;incstack = 0
  2896                           ; Regs used in _i2c_stop: []
  2897                           
  2898                           
  2899                           ;config.c: 161:     SSP1CON2bits.PEN = 1;
  2900  048F  0024               	movlb	4	; select bank4
  2901  0490  1516               	bsf	22,2	;volatile
  2902  0491                     l282:	
  2903                           ;config.c: 162:     while(SSP1CON2bits.PEN);
  2904                           
  2905  0491  1916               	btfsc	22,2	;volatile
  2906  0492  2C94               	goto	u1031
  2907  0493  2C95               	goto	u1030
  2908  0494                     u1031:
  2909  0494  2C91               	goto	l282
  2910  0495                     u1030:
  2911  0495                     l284:
  2912                           
  2913                           ;config.c: 163:     PIR1bits.SSP1IF = 0;
  2914  0495  0020               	movlb	0	; select bank0
  2915  0496  1190               	bcf	16,3	;volatile
  2916  0497                     l285:
  2917  0497  0008               	return
  2918  0498                     __end_of_i2c_stop:
  2919                           
  2920                           	psect	text10
  2921  045F                     __ptext10:	
  2922 ;; *************** function _i2c_write_byte *****************
  2923 ;; Defined at:
  2924 ;;		line 151 in file "config.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  address         1    wreg     unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  address         1    0[BANK0 ] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_i2c_write
  2949 ;;		_i2c_read
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _i2c_write_byte
  2955  045F                     _i2c_write_byte:
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _i2c_write_byte: [wreg]
  2959                           ;i2c_write_byte@address stored from wreg
  2960  045F  0020               	movlb	0	; select bank0
  2961  0460  00CA               	movwf	i2c_write_byte@address
  2962  0461                     l1579:
  2963                           
  2964                           ;config.c: 152:     SSP1CON2bits.RCEN = 0;
  2965  0461  0024               	movlb	4	; select bank4
  2966  0462  1196               	bcf	22,3	;volatile
  2967  0463                     l1581:
  2968                           
  2969                           ;config.c: 153:     SSP1BUF = address;
  2970  0463  0020               	movlb	0	; select bank0
  2971  0464  084A               	movf	i2c_write_byte@address,w
  2972  0465  0024               	movlb	4	; select bank4
  2973  0466  0091               	movwf	17	;volatile
  2974  0467                     l275:	
  2975                           ;config.c: 154:     while(SSP1STATbits.BF);
  2976                           
  2977  0467  1814               	btfsc	20,0	;volatile
  2978  0468  2C6A               	goto	u1051
  2979  0469  2C6B               	goto	u1050
  2980  046A                     u1051:
  2981  046A  2C67               	goto	l275
  2982  046B                     u1050:
  2983  046B                     l277:
  2984                           
  2985                           ;config.c: 155:     PIR1bits.SSP1IF = 0;
  2986  046B  0020               	movlb	0	; select bank0
  2987  046C  1190               	bcf	16,3	;volatile
  2988                           
  2989                           ;config.c: 156:     if(SSP1CON1bits.WCOL)
  2990  046D  0024               	movlb	4	; select bank4
  2991  046E  1F95               	btfss	21,7	;volatile
  2992  046F  2C71               	goto	u1061
  2993  0470  2C72               	goto	u1060
  2994  0471                     u1061:
  2995  0471  2C73               	goto	l279
  2996  0472                     u1060:
  2997  0472                     l1583:
  2998                           
  2999                           ;config.c: 157:         SSP1CON1bits.WCOL = 0;
  3000  0472  1395               	bcf	21,7	;volatile
  3001  0473                     l279:
  3002  0473  0008               	return
  3003  0474                     __end_of_i2c_write_byte:
  3004                           
  3005                           	psect	text11
  3006  0498                     __ptext11:	
  3007 ;; *************** function _i2c_start *****************
  3008 ;; Defined at:
  3009 ;;		line 139 in file "config.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		None
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_i2c_write
  3034 ;;		_i2c_read
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _i2c_start
  3040  0498                     _i2c_start:
  3041  0498                     l1577:	
  3042                           ;incstack = 0
  3043                           ; Regs used in _i2c_start: []
  3044                           
  3045                           
  3046                           ;config.c: 140:     SSP1CON2bits.SEN = 1;
  3047  0498  0024               	movlb	4	; select bank4
  3048  0499  1416               	bsf	22,0	;volatile
  3049  049A                     l263:	
  3050                           ;config.c: 141:     while((SSP1CON2bits.SEN));
  3051                           
  3052  049A  1816               	btfsc	22,0	;volatile
  3053  049B  2C9D               	goto	u1041
  3054  049C  2C9E               	goto	u1040
  3055  049D                     u1041:
  3056  049D  2C9A               	goto	l263
  3057  049E                     u1040:
  3058  049E                     l265:
  3059                           
  3060                           ;config.c: 142:     PIR1bits.SSP1IF = 0;
  3061  049E  0020               	movlb	0	; select bank0
  3062  049F  1190               	bcf	16,3	;volatile
  3063  04A0                     l266:
  3064  04A0  0008               	return
  3065  04A1                     __end_of_i2c_start:
  3066                           
  3067                           	psect	intentry
  3068  0004                     __pintentry:	
  3069 ;; *************** function _remote *****************
  3070 ;; Defined at:
  3071 ;;		line 166 in file "config.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;Total ram usage:        6 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		Interrupt level 1
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098  0004                     _remote:
  3099                           
  3100                           ;incstack = 0
  3101  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3102                           
  3103                           ; Regs used in _remote: [wreg+status,2+status,0]
  3104  0005  3180               	pagesel	$
  3105  0006                     i1l1453:
  3106                           
  3107                           ;config.c: 168:     if(INTCONbits.T0IF)
  3108  0006  1D0B               	btfss	11,2	;volatile
  3109  0007  2809               	goto	u88_21
  3110  0008  280A               	goto	u88_20
  3111  0009                     u88_21:
  3112  0009  2810               	goto	i1l1459
  3113  000A                     u88_20:
  3114  000A                     i1l1455:
  3115                           
  3116                           ;config.c: 169:     {;config.c: 170:         TMR0H++;
  3117  000A  3001               	movlw	1
  3118  000B  0020               	movlb	0	; select bank0
  3119  000C  07AC               	addwf	_TMR0H,f
  3120  000D  3000               	movlw	0
  3121  000E  3DAD               	addwfc	_TMR0H+1,f
  3122  000F                     i1l1457:
  3123                           
  3124                           ;config.c: 171:         INTCONbits.T0IF = 0;
  3125  000F  110B               	bcf	11,2	;volatile
  3126  0010                     i1l1459:
  3127                           
  3128                           ;config.c: 174:     if(PIR1bits.TMR2IF){
  3129  0010  0020               	movlb	0	; select bank0
  3130  0011  1C90               	btfss	16,1	;volatile
  3131  0012  2814               	goto	u89_21
  3132  0013  2815               	goto	u89_20
  3133  0014                     u89_21:
  3134  0014  281A               	goto	i1l1465
  3135  0015                     u89_20:
  3136  0015                     i1l1461:
  3137                           
  3138                           ;config.c: 175:         TMR2H++;
  3139  0015  3001               	movlw	1
  3140  0016  07F2               	addwf	_TMR2H,f
  3141  0017  3000               	movlw	0
  3142  0018  3DF3               	addwfc	_TMR2H+1,f
  3143  0019                     i1l1463:
  3144                           
  3145                           ;config.c: 176:         PIR1bits.TMR2IF = 0;
  3146  0019  1090               	bcf	16,1	;volatile
  3147  001A                     i1l1465:
  3148                           
  3149                           ;config.c: 179:     if(INTCONbits.IOCIF){
  3150  001A  1C0B               	btfss	11,0	;volatile
  3151  001B  281D               	goto	u90_21
  3152  001C  281E               	goto	u90_20
  3153  001D                     u90_21:
  3154  001D  28E6               	goto	i1l309
  3155  001E                     u90_20:
  3156  001E                     i1l1467:
  3157                           
  3158                           ;config.c: 180:         if(IOCCFbits.IOCCF3)
  3159  001E  0027               	movlb	7	; select bank7
  3160  001F  1D99               	btfss	25,3	;volatile
  3161  0020  2822               	goto	u91_21
  3162  0021  2823               	goto	u91_20
  3163  0022                     u91_21:
  3164  0022  284A               	goto	i1l1491
  3165  0023                     u91_20:
  3166  0023                     i1l1469:
  3167                           
  3168                           ;config.c: 181:         {;config.c: 182:             if(p.p1)
  3169  0023  0020               	movlb	0	; select bank0
  3170  0024  1C49               	btfss	_p,0
  3171  0025  2827               	goto	u92_21
  3172  0026  2828               	goto	u92_20
  3173  0027                     u92_21:
  3174  0027  283F               	goto	i1l294
  3175  0028                     u92_20:
  3176  0028                     i1l1471:
  3177                           
  3178                           ;config.c: 183:             {;config.c: 184:                 T1CONbits.TMR1ON = 0;
  3179  0028  1018               	bcf	24,0	;volatile
  3180  0029                     i1l1473:
  3181                           
  3182                           ;config.c: 185:                 if(TMR1 < 2100)
  3183  0029  3008               	movlw	8
  3184  002A  0217               	subwf	23,w	;volatile
  3185  002B  3034               	movlw	52
  3186  002C  1903               	skipnz
  3187  002D  0216               	subwf	22,w	;volatile
  3188  002E  1803               	skipnc
  3189  002F  2831               	goto	u93_21
  3190  0030  2832               	goto	u93_20
  3191  0031                     u93_21:
  3192  0031  2836               	goto	i1l1477
  3193  0032                     u93_20:
  3194  0032                     i1l1475:
  3195                           
  3196                           ;config.c: 186:                     ch1 = TMR1;
  3197  0032  0817               	movf	23,w	;volatile
  3198  0033  00F1               	movwf	_ch1+1
  3199  0034  0816               	movf	22,w	;volatile
  3200  0035  00F0               	movwf	_ch1
  3201  0036                     i1l1477:
  3202                           
  3203                           ;config.c: 187:                 IOCCN &= 0b11110111;
  3204  0036  30F7               	movlw	247
  3205  0037  00F6               	movwf	??_remote
  3206  0038  0876               	movf	??_remote,w
  3207  0039  0027               	movlb	7	; select bank7
  3208  003A  0598               	andwf	24,f	;volatile
  3209  003B                     i1l1479:
  3210                           
  3211                           ;config.c: 188:                 IOCCP |= 0b00001000;
  3212  003B  1597               	bsf	23,3	;volatile
  3213  003C                     i1l1481:
  3214                           
  3215                           ;config.c: 189:                 p.p1 = 0;
  3216  003C  0020               	movlb	0	; select bank0
  3217  003D  1049               	bcf	_p,0
  3218                           
  3219                           ;config.c: 190:             }
  3220  003E  284A               	goto	i1l1491
  3221  003F                     i1l294:	
  3222                           ;config.c: 191:             else
  3223                           
  3224                           
  3225                           ;config.c: 192:             {;config.c: 193:                 T1CONbits.TMR1ON = 1;
  3226  003F  1418               	bsf	24,0	;volatile
  3227  0040                     i1l1483:
  3228                           
  3229                           ;config.c: 194:                 TMR1 = 0;
  3230  0040  0196               	clrf	22	;volatile
  3231  0041  0197               	clrf	23	;volatile
  3232  0042                     i1l1485:
  3233                           
  3234                           ;config.c: 195:                 IOCCP &= 0b11110111;
  3235  0042  30F7               	movlw	247
  3236  0043  00F6               	movwf	??_remote
  3237  0044  0876               	movf	??_remote,w
  3238  0045  0027               	movlb	7	; select bank7
  3239  0046  0597               	andwf	23,f	;volatile
  3240  0047                     i1l1487:
  3241                           
  3242                           ;config.c: 196:                 IOCCN |= 0b00001000;
  3243  0047  1598               	bsf	24,3	;volatile
  3244  0048                     i1l1489:
  3245                           
  3246                           ;config.c: 197:                 p.p1 = 1;
  3247  0048  0020               	movlb	0	; select bank0
  3248  0049  1449               	bsf	_p,0
  3249  004A                     i1l1491:
  3250                           
  3251                           ;config.c: 201:         if(IOCCFbits.IOCCF4)
  3252  004A  0027               	movlb	7	; select bank7
  3253  004B  1E19               	btfss	25,4	;volatile
  3254  004C  284E               	goto	u94_21
  3255  004D  284F               	goto	u94_20
  3256  004E                     u94_21:
  3257  004E  287A               	goto	i1l1519
  3258  004F                     u94_20:
  3259  004F                     i1l1493:
  3260                           
  3261                           ;config.c: 202:         {;config.c: 203:             if(p.p2)
  3262  004F  0020               	movlb	0	; select bank0
  3263  0050  1CC9               	btfss	_p,1
  3264  0051  2853               	goto	u95_21
  3265  0052  2854               	goto	u95_20
  3266  0053                     u95_21:
  3267  0053  286D               	goto	i1l298
  3268  0054                     u95_20:
  3269  0054                     i1l1495:
  3270                           
  3271                           ;config.c: 204:             {;config.c: 205:                 T3CONbits.TMR3ON = 0;
  3272  0054  0029               	movlb	9	; select bank9
  3273  0055  1015               	bcf	21,0	;volatile
  3274  0056                     i1l1497:
  3275                           
  3276                           ;config.c: 206:                 IOCCN &= 0b11101111;
  3277  0056  30EF               	movlw	239
  3278  0057  00F6               	movwf	??_remote
  3279  0058  0876               	movf	??_remote,w
  3280  0059  0027               	movlb	7	; select bank7
  3281  005A  0598               	andwf	24,f	;volatile
  3282  005B                     i1l1499:
  3283                           
  3284                           ;config.c: 207:                 IOCCP |= 0b00010000;
  3285  005B  1617               	bsf	23,4	;volatile
  3286  005C                     i1l1501:
  3287                           
  3288                           ;config.c: 208:                 if(TMR3H < 9)
  3289  005C  3009               	movlw	9
  3290  005D  0029               	movlb	9	; select bank9
  3291  005E  0214               	subwf	20,w	;volatile
  3292  005F  1803               	skipnc
  3293  0060  2862               	goto	u96_21
  3294  0061  2863               	goto	u96_20
  3295  0062                     u96_21:
  3296  0062  286A               	goto	i1l1505
  3297  0063                     u96_20:
  3298  0063                     i1l1503:
  3299                           
  3300                           ;config.c: 209:                     ch2 = ((unsigned)TMR3H<<8) | (unsigned)TMR3L;
  3301  0063  0814               	movf	20,w	;volatile
  3302  0064  0020               	movlb	0	; select bank0
  3303  0065  00A9               	movwf	_ch2+1
  3304  0066  0029               	movlb	9	; select bank9
  3305  0067  0813               	movf	19,w	;volatile
  3306  0068  0020               	movlb	0	; select bank0
  3307  0069  00A8               	movwf	_ch2
  3308  006A                     i1l1505:
  3309                           
  3310                           ;config.c: 210:                 p.p2 = 0;
  3311  006A  0020               	movlb	0	; select bank0
  3312  006B  10C9               	bcf	_p,1
  3313                           
  3314                           ;config.c: 211:             }
  3315  006C  287A               	goto	i1l1519
  3316  006D                     i1l298:	
  3317                           ;config.c: 212:             else
  3318                           
  3319                           
  3320                           ;config.c: 213:             {;config.c: 214:                 IOCCN |= 0b00010000;
  3321  006D  0027               	movlb	7	; select bank7
  3322  006E  1618               	bsf	24,4	;volatile
  3323  006F                     i1l1507:
  3324                           
  3325                           ;config.c: 215:                 IOCCP &= 0b11101111;
  3326  006F  30EF               	movlw	239
  3327  0070  00F6               	movwf	??_remote
  3328  0071  0876               	movf	??_remote,w
  3329  0072  0597               	andwf	23,f	;volatile
  3330  0073                     i1l1509:
  3331                           
  3332                           ;config.c: 216:                 TMR3L = 0;
  3333  0073  0029               	movlb	9	; select bank9
  3334  0074  0193               	clrf	19	;volatile
  3335  0075                     i1l1511:
  3336                           
  3337                           ;config.c: 217:                 TMR3H = 0;
  3338  0075  0194               	clrf	20	;volatile
  3339  0076                     i1l1513:
  3340                           
  3341                           ;config.c: 218:                 TMR3L = 0;
  3342  0076  0193               	clrf	19	;volatile
  3343  0077                     i1l1515:
  3344                           
  3345                           ;config.c: 219:                 T3CONbits.TMR3ON = 1;
  3346  0077  1415               	bsf	21,0	;volatile
  3347  0078                     i1l1517:
  3348                           
  3349                           ;config.c: 220:                 p.p2 = 1;
  3350  0078  0020               	movlb	0	; select bank0
  3351  0079  14C9               	bsf	_p,1
  3352  007A                     i1l1519:
  3353                           
  3354                           ;config.c: 224:         if(IOCCFbits.IOCCF5)
  3355  007A  0027               	movlb	7	; select bank7
  3356  007B  1E99               	btfss	25,5	;volatile
  3357  007C  287E               	goto	u97_21
  3358  007D  287F               	goto	u97_20
  3359  007E                     u97_21:
  3360  007E  28A9               	goto	i1l1545
  3361  007F                     u97_20:
  3362  007F                     i1l1521:
  3363                           
  3364                           ;config.c: 225:         {;config.c: 226:             if(p.p3)
  3365  007F  0020               	movlb	0	; select bank0
  3366  0080  1D49               	btfss	_p,2
  3367  0081  2883               	goto	u98_21
  3368  0082  2884               	goto	u98_20
  3369  0083                     u98_21:
  3370  0083  289D               	goto	i1l302
  3371  0084                     u98_20:
  3372  0084                     i1l1523:
  3373                           
  3374                           ;config.c: 227:             {;config.c: 228:                 T5CONbits.TMR5ON = 0;
  3375  0084  0029               	movlb	9	; select bank9
  3376  0085  101C               	bcf	28,0	;volatile
  3377  0086                     i1l1525:
  3378                           
  3379                           ;config.c: 229:                 IOCCN &= 0b11011111;
  3380  0086  30DF               	movlw	223
  3381  0087  00F6               	movwf	??_remote
  3382  0088  0876               	movf	??_remote,w
  3383  0089  0027               	movlb	7	; select bank7
  3384  008A  0598               	andwf	24,f	;volatile
  3385  008B                     i1l1527:
  3386                           
  3387                           ;config.c: 230:                 IOCCP |= 0b00100000;
  3388  008B  1697               	bsf	23,5	;volatile
  3389  008C                     i1l1529:
  3390                           
  3391                           ;config.c: 231:                 if(TMR5H < 9)
  3392  008C  3009               	movlw	9
  3393  008D  0029               	movlb	9	; select bank9
  3394  008E  021B               	subwf	27,w	;volatile
  3395  008F  1803               	skipnc
  3396  0090  2892               	goto	u99_21
  3397  0091  2893               	goto	u99_20
  3398  0092                     u99_21:
  3399  0092  289A               	goto	i1l1533
  3400  0093                     u99_20:
  3401  0093                     i1l1531:
  3402                           
  3403                           ;config.c: 232:                     ch3 = ((unsigned)TMR5H << 8) | (unsigned)TMR5L;
  3404  0093  081B               	movf	27,w	;volatile
  3405  0094  0020               	movlb	0	; select bank0
  3406  0095  00A7               	movwf	_ch3+1
  3407  0096  0029               	movlb	9	; select bank9
  3408  0097  081A               	movf	26,w	;volatile
  3409  0098  0020               	movlb	0	; select bank0
  3410  0099  00A6               	movwf	_ch3
  3411  009A                     i1l1533:
  3412                           
  3413                           ;config.c: 233:                 p.p3 = 0;
  3414  009A  0020               	movlb	0	; select bank0
  3415  009B  1149               	bcf	_p,2
  3416                           
  3417                           ;config.c: 234:             }
  3418  009C  28A9               	goto	i1l1545
  3419  009D                     i1l302:	
  3420                           ;config.c: 235:             else
  3421                           
  3422                           
  3423                           ;config.c: 236:             {;config.c: 237:                 IOCCN |= 0b00100000;
  3424  009D  0027               	movlb	7	; select bank7
  3425  009E  1698               	bsf	24,5	;volatile
  3426  009F                     i1l1535:
  3427                           
  3428                           ;config.c: 238:                 IOCCP &= 0b11011111;
  3429  009F  30DF               	movlw	223
  3430  00A0  00F6               	movwf	??_remote
  3431  00A1  0876               	movf	??_remote,w
  3432  00A2  0597               	andwf	23,f	;volatile
  3433  00A3                     i1l1537:
  3434                           
  3435                           ;config.c: 239:                 TMR5L = 0;
  3436  00A3  0029               	movlb	9	; select bank9
  3437  00A4  019A               	clrf	26	;volatile
  3438  00A5                     i1l1539:
  3439                           
  3440                           ;config.c: 240:                 TMR5H = 0;
  3441  00A5  019B               	clrf	27	;volatile
  3442  00A6                     i1l1541:
  3443                           
  3444                           ;config.c: 241:                 T5CONbits.TMR5ON = 1;
  3445  00A6  141C               	bsf	28,0	;volatile
  3446  00A7                     i1l1543:
  3447                           
  3448                           ;config.c: 242:                 p.p3 = 1;
  3449  00A7  0020               	movlb	0	; select bank0
  3450  00A8  1549               	bsf	_p,2
  3451  00A9                     i1l1545:
  3452                           
  3453                           ;config.c: 246:         if(IOCCFbits.IOCCF6)
  3454  00A9  0027               	movlb	7	; select bank7
  3455  00AA  1F19               	btfss	25,6	;volatile
  3456  00AB  28AD               	goto	u100_21
  3457  00AC  28AE               	goto	u100_20
  3458  00AD                     u100_21:
  3459  00AD  28E3               	goto	i1l1571
  3460  00AE                     u100_20:
  3461  00AE                     i1l1547:
  3462                           
  3463                           ;config.c: 247:         {;config.c: 248:             if(p.p4)
  3464  00AE  0020               	movlb	0	; select bank0
  3465  00AF  1DC9               	btfss	_p,3
  3466  00B0  28B2               	goto	u101_21
  3467  00B1  28B3               	goto	u101_20
  3468  00B2                     u101_21:
  3469  00B2  28D7               	goto	i1l306
  3470  00B3                     u101_20:
  3471  00B3                     i1l1549:
  3472                           
  3473                           ;config.c: 249:             {;config.c: 250:                 T2CONbits.ON = 0;
  3474  00B3  139C               	bcf	28,7	;volatile
  3475  00B4                     i1l1551:
  3476                           
  3477                           ;config.c: 251:                 IOCCN &= 0b10111111;
  3478  00B4  30BF               	movlw	191
  3479  00B5  00F6               	movwf	??_remote
  3480  00B6  0876               	movf	??_remote,w
  3481  00B7  0027               	movlb	7	; select bank7
  3482  00B8  0598               	andwf	24,f	;volatile
  3483  00B9                     i1l1553:
  3484                           
  3485                           ;config.c: 252:                 IOCCP |= 0b01000000;
  3486  00B9  1717               	bsf	23,6	;volatile
  3487  00BA                     i1l1555:
  3488                           
  3489                           ;config.c: 253:                 if(TMR2H < 9)
  3490  00BA  3000               	movlw	0
  3491  00BB  0273               	subwf	_TMR2H+1,w
  3492  00BC  3009               	movlw	9
  3493  00BD  1903               	skipnz
  3494  00BE  0272               	subwf	_TMR2H,w
  3495  00BF  1803               	skipnc
  3496  00C0  28C2               	goto	u102_21
  3497  00C1  28C3               	goto	u102_20
  3498  00C2                     u102_21:
  3499  00C2  28D4               	goto	i1l1559
  3500  00C3                     u102_20:
  3501  00C3                     i1l1557:
  3502                           
  3503                           ;config.c: 254:                     ch4 = (TMR2H<<8) | TMR2;
  3504  00C3  0020               	movlb	0	; select bank0
  3505  00C4  081A               	movf	26,w	;volatile
  3506  00C5  00F6               	movwf	??_remote
  3507  00C6  01F7               	clrf	??_remote+1
  3508  00C7  0872               	movf	_TMR2H,w
  3509  00C8  00F9               	movwf	??_remote+3
  3510  00C9  01F8               	clrf	??_remote+2
  3511  00CA  0876               	movf	??_remote,w
  3512  00CB  0478               	iorwf	??_remote+2,w
  3513  00CC  00FA               	movwf	??_remote+4
  3514  00CD  0877               	movf	??_remote+1,w
  3515  00CE  0479               	iorwf	??_remote+3,w
  3516  00CF  00FB               	movwf	??_remote+5
  3517  00D0  087A               	movf	??_remote+4,w
  3518  00D1  00A4               	movwf	_ch4
  3519  00D2  087B               	movf	??_remote+5,w
  3520  00D3  00A5               	movwf	_ch4+1
  3521  00D4                     i1l1559:
  3522                           
  3523                           ;config.c: 255:                 p.p4 = 0;
  3524  00D4  0020               	movlb	0	; select bank0
  3525  00D5  11C9               	bcf	_p,3
  3526                           
  3527                           ;config.c: 256:             }
  3528  00D6  28E3               	goto	i1l1571
  3529  00D7                     i1l306:	
  3530                           ;config.c: 257:             else
  3531                           
  3532                           
  3533                           ;config.c: 258:             {;config.c: 259:                 IOCCN |= 0b01000000;
  3534  00D7  0027               	movlb	7	; select bank7
  3535  00D8  1718               	bsf	24,6	;volatile
  3536  00D9                     i1l1561:
  3537                           
  3538                           ;config.c: 260:                 IOCCP &= 0b10111111;
  3539  00D9  30BF               	movlw	191
  3540  00DA  00F6               	movwf	??_remote
  3541  00DB  0876               	movf	??_remote,w
  3542  00DC  0597               	andwf	23,f	;volatile
  3543  00DD                     i1l1563:
  3544                           
  3545                           ;config.c: 261:                 TMR2 = 0;
  3546  00DD  0020               	movlb	0	; select bank0
  3547  00DE  019A               	clrf	26	;volatile
  3548  00DF                     i1l1565:
  3549                           
  3550                           ;config.c: 262:                 TMR2H = 0;
  3551  00DF  01F2               	clrf	_TMR2H
  3552  00E0  01F3               	clrf	_TMR2H+1
  3553  00E1                     i1l1567:
  3554                           
  3555                           ;config.c: 263:                 T2CONbits.ON = 1;
  3556  00E1  179C               	bsf	28,7	;volatile
  3557  00E2                     i1l1569:
  3558                           
  3559                           ;config.c: 264:                 p.p4 = 1;
  3560  00E2  15C9               	bsf	_p,3
  3561  00E3                     i1l1571:
  3562                           
  3563                           ;config.c: 267:         IOCCF = 0;
  3564  00E3  0027               	movlb	7	; select bank7
  3565  00E4  0199               	clrf	25	;volatile
  3566  00E5                     i1l1573:
  3567                           
  3568                           ;config.c: 268:         INTCONbits.IOCIF = 0;
  3569  00E5  100B               	bcf	11,0	;volatile
  3570  00E6                     i1l309:
  3571  00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3572  00E7  0009               	retfie
  3573  00E8                     __end_of_remote:
  3574  007E                     btemp	set	126	;btemp
  3575  007E                     int$flags	set	126
  3576  007E                     wtemp0	set	126
  3577                           
  3578                           	psect	config
  3579                           
  3580                           ;Config register CONFIG1 @ 0x8007
  3581                           ;	Oscillator Selection Bits
  3582                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3583                           ;	Power-up Timer Enable
  3584                           ;	PWRTE = OFF, PWRT disabled
  3585                           ;	MCLR Pin Function Select
  3586                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3587                           ;	Flash Program Memory Code Protection
  3588                           ;	CP = OFF, Program memory code protection is disabled
  3589                           ;	Brown-out Reset Enable
  3590                           ;	BOREN = OFF, Brown-out Reset disabled
  3591                           ;	Clock Out Enable
  3592                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3593                           ;	Internal/External Switch Over
  3594                           ;	IESO = ON, Internal External Switch Over mode is enabled
  3595                           ;	Fail-Safe Clock Monitor Enable
  3596                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3597  8007                     	org	32775
  3598  8007  39BC               	dw	14780
  3599                           
  3600                           ;Config register CONFIG2 @ 0x8008
  3601                           ;	Flash Memory Self-Write Protection
  3602                           ;	WRT = OFF, Write protection off
  3603                           ;	Peripheral Pin Select one-way control
  3604                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3605                           ;	Zero Cross Detect Disable Bit
  3606                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3607                           ;	PLL Enable Bit
  3608                           ;	PLLEN = ON, 4x PLL is always enabled
  3609                           ;	Stack Overflow/Underflow Reset Enable
  3610                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3611                           ;	Brown-out Reset Voltage Selection
  3612                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3613                           ;	Low-Power Brown Out Reset
  3614                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3615                           ;	Low-Voltage Programming Enable
  3616                           ;	LVP = ON, Low-voltage programming enabled
  3617  8008                     	org	32776
  3618  8008  3FFF               	dw	16383
  3619                           
  3620                           ;Config register CONFIG3 @ 0x8009
  3621                           ;	WDT Period Select
  3622                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3623                           ;	Watchdog Timer Enable
  3624                           ;	WDTE = OFF, WDT disabled
  3625                           ;	WDT Window Select
  3626                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3627                           ;	WDT Input Clock Selector
  3628                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3629  8009                     	org	32777
  3630  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         48
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     26      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _remote in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_sensor
    _read_sensor->_i2c_read
    _i2c_read->_i2c_read_byte
    _gyro_config->_i2c_write
    _i2c_write->_nack

Critical Paths under _remote in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _remote in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _remote in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _remote in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _remote in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _remote in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _remote in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _remote in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _remote in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _remote in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _remote in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _remote in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _remote in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2544
                                             18 BANK0      8     8      0
                        _gyro_config
                           _pic_init
                        _read_sensor
 ---------------------------------------------------------------------------------
 (1) _read_sensor                                          1     1      0    1160
                                             17 BANK0      1     1      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                            10     8      2    1160
                                              7 BANK0     10     8      2
                      _i2c_read_byte
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_byte                                        7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gyro_config                                          2     2      0    1384
                                              5 BANK0      2     2      0
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    1384
                                              2 BANK0      3     1      2
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
                               _nack
 ---------------------------------------------------------------------------------
 (3) _nack                                                 2     0      2       0
                                              0 BANK0      2     0      2
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_write_byte                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _remote                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gyro_config
     _i2c_write
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop
   _pic_init
   _read_sensor
     _i2c_read
       _i2c_read_byte
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write_byte
       _nack
         _i2c_stop

 _remote (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Apr 19 21:03:18 2022

                      _p 0049                       l80 021C                       l81 023C  
                     l79 01FC                      l230 0404                      l224 0364  
                    l233 02EA                      l226 0368                      l250 0440  
                    l227 03B0                      l243 035C                      l260 0485  
                    l237 043B                      l253 0454                      l263 049A  
                    l255 0458                      l271 048C                      l256 045E  
                    l272 048E                      l265 049E                      l266 04A0  
                    l282 0491                      l275 0467                      l284 0495  
                    l277 046B                      l285 0497                      l269 0488  
                    l279 0473                      _ch1 0070                      _ch2 0028  
                    _ch3 0026                      _ch4 0024                      wreg 0009  
__size_of_i2c_write_byte 0015                     l1601 0444                     l1603 044C  
                   l1621 041A                     l1613 0407                     l1701 038D  
                   l1605 044D                     l1615 040A                     l1711 0398  
                   l1703 038E                     l1607 0453                     l1631 02ED  
                   l1625 0429                     l1617 040F                     l1721 03A4  
                   l1713 039B                     l1705 0390                     l1609 045A  
                   l1641 0302                     l1633 02F0                     l1801 01CC  
                   l1731 03AC                     l1723 03A5                     l1715 039D  
                   l1707 0392                     l1651 031A                     l1635 02F5  
                   l1811 0218                     l1803 01D2                     l1581 0463  
                   l1629 0438                     l1733 03AD                     l1725 03A6  
                   l1717 03A0                     l1709 0396                     l1661 033A  
                   l1637 02FF                     l1821 026B                     l1813 0238  
                   l1805 01D7                     l1741 0102                     l1583 0472  
                   l1575 048F                     l1735 03B1                     l1727 03A8  
                   l1719 03A2                     l1663 0341                     l1647 0311  
                   l1815 0258                     l1807 01DC                     l1751 0111  
                   l1743 0107                     l1577 0498                     l1593 0482  
                   l1585 0474                     l1729 03AA                     l1681 0373  
                   l1673 035D                     l1657 0325                     l1649 0314  
                   l1737 0274                     l1809 01F8                     l1817 025C  
                   l1761 012E                     l1753 0113                     l1745 0109  
                   l1579 0461                     l1587 0479                     l1691 0381  
                   l1683 0377                     l1675 036D                     l1659 0337  
                   l1819 0262                     l1771 014F                     l1763 0133  
                   l1755 0118                     l1747 010E                     l1739 00FC  
                   l1589 047C                     l1693 0383                     l1685 037A  
                   l1677 0370                     l1597 0486                     l1669 034F  
                   l1781 016E                     l1773 0158                     l1765 013C  
                   l1757 0128                     l1749 0110                     l1695 0385  
                   l1687 037C                     l1679 0372                     l1599 043E  
                   l1791 0186                     l1783 0177                     l1775 0161  
                   l1767 0145                     l1759 012C                     l1697 0387  
                   l1689 037F                     l1793 0197                     l1785 0180  
                   l1777 0165                     l1769 0149                     l1699 038B  
                   l1795 01A7                     l1787 0181                     l1779 0167  
                   l1797 01AD                     l1789 0183                     l1799 01B1  
                   u1100 0458                     u1101 0457                     u1030 0495  
                   u1110 0419                     u1031 0494                     u1111 0418  
                   u1040 049E                     u1120 0428                     u1200 0133  
                   u1041 049D                     u1121 0427                     u1201 0132  
                   u1050 046B                     u1130 0437                     u1210 013C  
                   u1051 046A                     u1131 0436                     u1211 013B  
                   u1060 0472                     u1140 02FF                     u1300 01CC  
                   u1220 0145                     u1061 0471                     u1141 02FE  
                   u1301 01CB                     u1221 0144                     u1070 0479  
                   u1150 0310                     u1310 01D2                     u1230 014F  
                   u1071 0478                     u1151 030F                     u1311 01D1  
                   u1231 014E                     u1080 048C                     u1160 0324  
                   u1320 01F8                     u1240 0158                     u1081 048B  
                   u1161 0323                     u1321 01F7                     u1241 0157  
                   u1090 0444                     u1170 0341                     u1330 0218  
                   u1250 0161                     u1091 0443                     u1171 0340  
                   u1331 0217                     u1251 0160                     u1180 0368  
                   u1340 0238                     u1260 016E                     u1181 0367  
                   u1341 0237                     u1325 01F4                     u1261 016D  
                   u1350 0258                     u1270 0177                     u1190 0118  
                   u1351 0257                     u1335 0214                     u1271 0176  
                   u1191 0117                     u1360 0262                     u1280 0180  
                   u1361 0261                     u1345 0234                     u1281 017F  
                   u1370 026B                     u1290 01AD                     u1371 026A  
                   u1355 0254                     u1291 01AC                     u1380 0271  
                   u1381 0270                     _RCEN 10B3                     _TMR0 0015  
                   _TMR1 0016                     _TMR2 001A                     _accx 0046  
                   _accy 0044                     _accz 0042                     _esc1 0034  
                   _esc2 0032                     _esc3 0030                     _esc4 002E  
          _i2c_read_byte 043C                     _nack 0474                     _main 00FC  
                   _magx 003A                     _magy 0038                     _magz 0036  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 00E8            ??_i2c_restart 004A  
                  ?_nack 004A                    ?_main 0076                    _IOCCF 0399  
                  _IOCCN 0398                    _IOCCP 0397              i2c_read@low 0056  
                  i1l302 009D                    i1l306 00D7                    _T2RST 001F  
                  i1l309 00E6                    i1l294 003F                    i1l298 006D  
                  _TMR0H 002C                    _TMR2H 0072                    _TMR3H 0494  
                  _TMR3L 0493                    _TMR5H 049B                    _TMR5L 049A  
                  _PORTA 000C                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    u90_20 001E                    u90_21 001D  
                  u91_20 0023                    u91_21 0022                    u92_20 0028  
                  u92_21 0027                    u93_20 0032                    u93_21 0031  
                  u94_20 004F                    u94_21 004E                    u95_20 0054  
                  u95_21 0053                    u96_20 0063                    u88_20 000A  
                  u96_21 0062                    u88_21 0009                    u97_20 007F  
                  u89_20 0015                    u97_21 007E                    u89_21 0014  
                  u98_20 0084                    u98_21 0083                    u99_20 0093  
                  u99_21 0092                    _count 0074             ?_read_sensor 0076  
                  _gyrox 0040                    _gyroy 003E                    _gyroz 003C  
                  _start 0048           ?_i2c_read_byte 004A                    status 0003  
                  wtemp0 007E          __initialization 00EA             __end_of_nack 0486  
           __end_of_main 0274         __end_of_i2c_read 035D         __end_of_i2c_stop 0498  
    __end_of_i2c_restart 048F                   ??_nack 004C                   ??_main 005C  
                 _ANSELA 018C                   _ANSELB 018D                   _ANSELC 018E  
           ?_gyro_config 0076             i2c_read@high 0058                   u100_20 00AE  
                 u100_21 00AD                   _RB4PPS 0E9C                   u101_20 00B3  
                 u101_21 00B2                   u102_20 00C3                   u102_21 00C2  
                 _RB6PPS 0E9E                   i1l1501 005C                   i1l1511 0075  
                 i1l1503 0063                   i1l1521 007F                   i1l1513 0076  
                 i1l1505 006A                   i1l1531 0093                   i1l1523 0084  
                 i1l1515 0077                   i1l1507 006F                   i1l1541 00A6  
                 i1l1533 009A                   i1l1525 0086                   i1l1517 0078  
                 i1l1509 0073                   i1l1461 0015                   i1l1453 0006  
                 i1l1551 00B4                   i1l1543 00A7                   i1l1535 009F  
                 i1l1527 008B                   i1l1519 007A                   i1l1471 0028  
                 i1l1463 0019                   i1l1455 000A                   i1l1561 00D9  
                 i1l1553 00B9                   i1l1537 00A3                   i1l1529 008C  
                 i1l1545 00A9                   i1l1481 003C                   i1l1473 0029  
                 i1l1465 001A                   i1l1457 000F                   i1l1563 00DD  
                 i1l1555 00BA                   i1l1547 00AE                   i1l1571 00E3  
                 i1l1539 00A5                   i1l1483 0040                   i1l1475 0032  
                 i1l1491 004A                   i1l1467 001E                   i1l1459 0010  
                 i1l1573 00E5                   i1l1565 00DF                   i1l1557 00C3  
                 i1l1549 00B3                   i1l1493 004F                   i1l1485 0042  
                 i1l1477 0036                   i1l1469 0023                   i1l1567 00E1  
                 i1l1559 00D4                   i1l1495 0054                   i1l1487 0047  
                 i1l1479 003B                   i1l1569 00E2                   i1l1497 0056  
                 i1l1489 0048                   i1l1499 005B       __size_of_i2c_start 0009  
     __size_of_i2c_write 0037         __end_of_pic_init 03B1                   _remote 0004  
         _i2c_write_byte 045F          ??_i2c_read_byte 004C  __end_of__initialization 00F8  
         __pcstackCOMMON 0076              _i2c_restart 0486        __end_of_i2c_start 04A1  
      __end_of_i2c_write 043C           _OPTION_REGbits 0095   __end_of_i2c_write_byte 0474  
             __pbssBANK0 0020     __size_of_read_sensor 0077                ?_i2c_read 0051  
              ?_i2c_stop 0076               __pmaintext 00FC               __pintentry 0004  
                ?_remote 0076          ?_i2c_write_byte 0076                  _SSP1ADD 0212  
                _SSP1BUF 0211    i2c_write_byte@address 004A               ??_i2c_read 0053  
             ??_i2c_stop 004A     __size_of_gyro_config 0054                ?_pic_init 0076  
        i2c_read@address 005A          __size_of_remote 00E4                  __ptext1 0274  
                __ptext2 02EB                  __ptext3 0486                  __ptext4 043C  
                __ptext5 035D                  __ptext6 03B1                  __ptext7 0405  
                __ptext8 0474                  __ptext9 048F                _T1CONbits 0018  
              _T2CONbits 001C                _T3CONbits 0495                _T2HLTbits 001D  
              _T5CONbits 049C                _IOCCFbits 0399                  _tmrLoop 002A  
                clrloop0 04A2                  _voltaje 0020     end_of_initialization 00F8  
             ??_pic_init 004A                _SSPDATPPS 0E21                _SSPCLKPPS 0E20  
          i2c_write@data 004D             ?_i2c_restart 0076       i2c_read@subaddress 0051  
         __end_of_remote 00E8      start_initialization 00EA                _i2c_start 0498  
              _i2c_write 0405    __end_of_i2c_read_byte 045F        __size_of_i2c_read 0072  
      __size_of_i2c_stop 0009         ??_i2c_write_byte 004A                 ??_remote 0076  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 004A  
             ?_i2c_start 0076               ?_i2c_write 004C            ??_read_sensor 005B  
      __size_of_pic_init 0054                 _T2CLKCON 001E            ??_gyro_config 004F  
               _LATCbits 010E      __end_of_read_sensor 02EB                clear_ram0 04A1  
               _PIE1bits 0090                 _PIR1bits 0010     __size_of_i2c_restart 0009  
            ??_i2c_start 004A              ??_i2c_write 004E                 _i2c_read 02EB  
               _i2c_stop 048F      __end_of_gyro_config 0405                 __ptext10 045F  
               __ptext11 0498             _SSP1CON1bits 0215             _SSP1CON2bits 0216  
            _read_sensor 0274            __size_of_nack 0012            __size_of_main 0178  
               _pic_init 035D                 int$flags 007E               _ODCONBbits 028D  
           _SSP1STATbits 0214              _OSCSTATbits 009A               _INTCONbits 000B  
            _gyro_config 03B1                 intlevel1 0000      i2c_write@subaddress 004C  
            _SSP1CONbits 0215               _OSCCONbits 0099   __size_of_i2c_read_byte 0023  
       i2c_write@address 004E              _SSPCON2bits 0216        i2c_read_byte@temp 004F  
       i2c_read_byte@ack 004E  
